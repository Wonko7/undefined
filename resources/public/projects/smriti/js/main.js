var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__7352 = x == null ? null : x;
  if(p[goog.typeOf(x__7352)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__7353__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__7353 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7353__delegate.call(this, array, i, idxs)
    };
    G__7353.cljs$lang$maxFixedArity = 2;
    G__7353.cljs$lang$applyTo = function(arglist__7354) {
      var array = cljs.core.first(arglist__7354);
      var i = cljs.core.first(cljs.core.next(arglist__7354));
      var idxs = cljs.core.rest(cljs.core.next(arglist__7354));
      return G__7353__delegate(array, i, idxs)
    };
    G__7353.cljs$lang$arity$variadic = G__7353__delegate;
    return G__7353
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____7439 = this$;
      if(and__3822__auto____7439) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____7439
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2363__auto____7440 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7441 = cljs.core._invoke[goog.typeOf(x__2363__auto____7440)];
        if(or__3824__auto____7441) {
          return or__3824__auto____7441
        }else {
          var or__3824__auto____7442 = cljs.core._invoke["_"];
          if(or__3824__auto____7442) {
            return or__3824__auto____7442
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____7443 = this$;
      if(and__3822__auto____7443) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____7443
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2363__auto____7444 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7445 = cljs.core._invoke[goog.typeOf(x__2363__auto____7444)];
        if(or__3824__auto____7445) {
          return or__3824__auto____7445
        }else {
          var or__3824__auto____7446 = cljs.core._invoke["_"];
          if(or__3824__auto____7446) {
            return or__3824__auto____7446
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____7447 = this$;
      if(and__3822__auto____7447) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____7447
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2363__auto____7448 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7449 = cljs.core._invoke[goog.typeOf(x__2363__auto____7448)];
        if(or__3824__auto____7449) {
          return or__3824__auto____7449
        }else {
          var or__3824__auto____7450 = cljs.core._invoke["_"];
          if(or__3824__auto____7450) {
            return or__3824__auto____7450
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____7451 = this$;
      if(and__3822__auto____7451) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____7451
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2363__auto____7452 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7453 = cljs.core._invoke[goog.typeOf(x__2363__auto____7452)];
        if(or__3824__auto____7453) {
          return or__3824__auto____7453
        }else {
          var or__3824__auto____7454 = cljs.core._invoke["_"];
          if(or__3824__auto____7454) {
            return or__3824__auto____7454
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____7455 = this$;
      if(and__3822__auto____7455) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____7455
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2363__auto____7456 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7457 = cljs.core._invoke[goog.typeOf(x__2363__auto____7456)];
        if(or__3824__auto____7457) {
          return or__3824__auto____7457
        }else {
          var or__3824__auto____7458 = cljs.core._invoke["_"];
          if(or__3824__auto____7458) {
            return or__3824__auto____7458
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____7459 = this$;
      if(and__3822__auto____7459) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____7459
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2363__auto____7460 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7461 = cljs.core._invoke[goog.typeOf(x__2363__auto____7460)];
        if(or__3824__auto____7461) {
          return or__3824__auto____7461
        }else {
          var or__3824__auto____7462 = cljs.core._invoke["_"];
          if(or__3824__auto____7462) {
            return or__3824__auto____7462
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____7463 = this$;
      if(and__3822__auto____7463) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____7463
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2363__auto____7464 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7465 = cljs.core._invoke[goog.typeOf(x__2363__auto____7464)];
        if(or__3824__auto____7465) {
          return or__3824__auto____7465
        }else {
          var or__3824__auto____7466 = cljs.core._invoke["_"];
          if(or__3824__auto____7466) {
            return or__3824__auto____7466
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____7467 = this$;
      if(and__3822__auto____7467) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____7467
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2363__auto____7468 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7469 = cljs.core._invoke[goog.typeOf(x__2363__auto____7468)];
        if(or__3824__auto____7469) {
          return or__3824__auto____7469
        }else {
          var or__3824__auto____7470 = cljs.core._invoke["_"];
          if(or__3824__auto____7470) {
            return or__3824__auto____7470
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____7471 = this$;
      if(and__3822__auto____7471) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____7471
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2363__auto____7472 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7473 = cljs.core._invoke[goog.typeOf(x__2363__auto____7472)];
        if(or__3824__auto____7473) {
          return or__3824__auto____7473
        }else {
          var or__3824__auto____7474 = cljs.core._invoke["_"];
          if(or__3824__auto____7474) {
            return or__3824__auto____7474
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____7475 = this$;
      if(and__3822__auto____7475) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____7475
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2363__auto____7476 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7477 = cljs.core._invoke[goog.typeOf(x__2363__auto____7476)];
        if(or__3824__auto____7477) {
          return or__3824__auto____7477
        }else {
          var or__3824__auto____7478 = cljs.core._invoke["_"];
          if(or__3824__auto____7478) {
            return or__3824__auto____7478
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____7479 = this$;
      if(and__3822__auto____7479) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____7479
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2363__auto____7480 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7481 = cljs.core._invoke[goog.typeOf(x__2363__auto____7480)];
        if(or__3824__auto____7481) {
          return or__3824__auto____7481
        }else {
          var or__3824__auto____7482 = cljs.core._invoke["_"];
          if(or__3824__auto____7482) {
            return or__3824__auto____7482
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____7483 = this$;
      if(and__3822__auto____7483) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____7483
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2363__auto____7484 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7485 = cljs.core._invoke[goog.typeOf(x__2363__auto____7484)];
        if(or__3824__auto____7485) {
          return or__3824__auto____7485
        }else {
          var or__3824__auto____7486 = cljs.core._invoke["_"];
          if(or__3824__auto____7486) {
            return or__3824__auto____7486
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____7487 = this$;
      if(and__3822__auto____7487) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____7487
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2363__auto____7488 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7489 = cljs.core._invoke[goog.typeOf(x__2363__auto____7488)];
        if(or__3824__auto____7489) {
          return or__3824__auto____7489
        }else {
          var or__3824__auto____7490 = cljs.core._invoke["_"];
          if(or__3824__auto____7490) {
            return or__3824__auto____7490
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____7491 = this$;
      if(and__3822__auto____7491) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____7491
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2363__auto____7492 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7493 = cljs.core._invoke[goog.typeOf(x__2363__auto____7492)];
        if(or__3824__auto____7493) {
          return or__3824__auto____7493
        }else {
          var or__3824__auto____7494 = cljs.core._invoke["_"];
          if(or__3824__auto____7494) {
            return or__3824__auto____7494
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____7495 = this$;
      if(and__3822__auto____7495) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____7495
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2363__auto____7496 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7497 = cljs.core._invoke[goog.typeOf(x__2363__auto____7496)];
        if(or__3824__auto____7497) {
          return or__3824__auto____7497
        }else {
          var or__3824__auto____7498 = cljs.core._invoke["_"];
          if(or__3824__auto____7498) {
            return or__3824__auto____7498
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____7499 = this$;
      if(and__3822__auto____7499) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____7499
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2363__auto____7500 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7501 = cljs.core._invoke[goog.typeOf(x__2363__auto____7500)];
        if(or__3824__auto____7501) {
          return or__3824__auto____7501
        }else {
          var or__3824__auto____7502 = cljs.core._invoke["_"];
          if(or__3824__auto____7502) {
            return or__3824__auto____7502
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____7503 = this$;
      if(and__3822__auto____7503) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____7503
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2363__auto____7504 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7505 = cljs.core._invoke[goog.typeOf(x__2363__auto____7504)];
        if(or__3824__auto____7505) {
          return or__3824__auto____7505
        }else {
          var or__3824__auto____7506 = cljs.core._invoke["_"];
          if(or__3824__auto____7506) {
            return or__3824__auto____7506
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____7507 = this$;
      if(and__3822__auto____7507) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____7507
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2363__auto____7508 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7509 = cljs.core._invoke[goog.typeOf(x__2363__auto____7508)];
        if(or__3824__auto____7509) {
          return or__3824__auto____7509
        }else {
          var or__3824__auto____7510 = cljs.core._invoke["_"];
          if(or__3824__auto____7510) {
            return or__3824__auto____7510
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____7511 = this$;
      if(and__3822__auto____7511) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____7511
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2363__auto____7512 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7513 = cljs.core._invoke[goog.typeOf(x__2363__auto____7512)];
        if(or__3824__auto____7513) {
          return or__3824__auto____7513
        }else {
          var or__3824__auto____7514 = cljs.core._invoke["_"];
          if(or__3824__auto____7514) {
            return or__3824__auto____7514
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____7515 = this$;
      if(and__3822__auto____7515) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____7515
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2363__auto____7516 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7517 = cljs.core._invoke[goog.typeOf(x__2363__auto____7516)];
        if(or__3824__auto____7517) {
          return or__3824__auto____7517
        }else {
          var or__3824__auto____7518 = cljs.core._invoke["_"];
          if(or__3824__auto____7518) {
            return or__3824__auto____7518
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____7519 = this$;
      if(and__3822__auto____7519) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____7519
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2363__auto____7520 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____7521 = cljs.core._invoke[goog.typeOf(x__2363__auto____7520)];
        if(or__3824__auto____7521) {
          return or__3824__auto____7521
        }else {
          var or__3824__auto____7522 = cljs.core._invoke["_"];
          if(or__3824__auto____7522) {
            return or__3824__auto____7522
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____7527 = coll;
    if(and__3822__auto____7527) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____7527
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2363__auto____7528 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7529 = cljs.core._count[goog.typeOf(x__2363__auto____7528)];
      if(or__3824__auto____7529) {
        return or__3824__auto____7529
      }else {
        var or__3824__auto____7530 = cljs.core._count["_"];
        if(or__3824__auto____7530) {
          return or__3824__auto____7530
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____7535 = coll;
    if(and__3822__auto____7535) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____7535
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2363__auto____7536 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7537 = cljs.core._empty[goog.typeOf(x__2363__auto____7536)];
      if(or__3824__auto____7537) {
        return or__3824__auto____7537
      }else {
        var or__3824__auto____7538 = cljs.core._empty["_"];
        if(or__3824__auto____7538) {
          return or__3824__auto____7538
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____7543 = coll;
    if(and__3822__auto____7543) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____7543
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2363__auto____7544 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7545 = cljs.core._conj[goog.typeOf(x__2363__auto____7544)];
      if(or__3824__auto____7545) {
        return or__3824__auto____7545
      }else {
        var or__3824__auto____7546 = cljs.core._conj["_"];
        if(or__3824__auto____7546) {
          return or__3824__auto____7546
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____7555 = coll;
      if(and__3822__auto____7555) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____7555
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2363__auto____7556 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7557 = cljs.core._nth[goog.typeOf(x__2363__auto____7556)];
        if(or__3824__auto____7557) {
          return or__3824__auto____7557
        }else {
          var or__3824__auto____7558 = cljs.core._nth["_"];
          if(or__3824__auto____7558) {
            return or__3824__auto____7558
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____7559 = coll;
      if(and__3822__auto____7559) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____7559
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2363__auto____7560 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7561 = cljs.core._nth[goog.typeOf(x__2363__auto____7560)];
        if(or__3824__auto____7561) {
          return or__3824__auto____7561
        }else {
          var or__3824__auto____7562 = cljs.core._nth["_"];
          if(or__3824__auto____7562) {
            return or__3824__auto____7562
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____7567 = coll;
    if(and__3822__auto____7567) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____7567
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2363__auto____7568 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7569 = cljs.core._first[goog.typeOf(x__2363__auto____7568)];
      if(or__3824__auto____7569) {
        return or__3824__auto____7569
      }else {
        var or__3824__auto____7570 = cljs.core._first["_"];
        if(or__3824__auto____7570) {
          return or__3824__auto____7570
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____7575 = coll;
    if(and__3822__auto____7575) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____7575
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2363__auto____7576 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7577 = cljs.core._rest[goog.typeOf(x__2363__auto____7576)];
      if(or__3824__auto____7577) {
        return or__3824__auto____7577
      }else {
        var or__3824__auto____7578 = cljs.core._rest["_"];
        if(or__3824__auto____7578) {
          return or__3824__auto____7578
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____7583 = coll;
    if(and__3822__auto____7583) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____7583
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2363__auto____7584 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7585 = cljs.core._next[goog.typeOf(x__2363__auto____7584)];
      if(or__3824__auto____7585) {
        return or__3824__auto____7585
      }else {
        var or__3824__auto____7586 = cljs.core._next["_"];
        if(or__3824__auto____7586) {
          return or__3824__auto____7586
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____7595 = o;
      if(and__3822__auto____7595) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____7595
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2363__auto____7596 = o == null ? null : o;
      return function() {
        var or__3824__auto____7597 = cljs.core._lookup[goog.typeOf(x__2363__auto____7596)];
        if(or__3824__auto____7597) {
          return or__3824__auto____7597
        }else {
          var or__3824__auto____7598 = cljs.core._lookup["_"];
          if(or__3824__auto____7598) {
            return or__3824__auto____7598
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____7599 = o;
      if(and__3822__auto____7599) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____7599
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2363__auto____7600 = o == null ? null : o;
      return function() {
        var or__3824__auto____7601 = cljs.core._lookup[goog.typeOf(x__2363__auto____7600)];
        if(or__3824__auto____7601) {
          return or__3824__auto____7601
        }else {
          var or__3824__auto____7602 = cljs.core._lookup["_"];
          if(or__3824__auto____7602) {
            return or__3824__auto____7602
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____7607 = coll;
    if(and__3822__auto____7607) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____7607
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2363__auto____7608 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7609 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2363__auto____7608)];
      if(or__3824__auto____7609) {
        return or__3824__auto____7609
      }else {
        var or__3824__auto____7610 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____7610) {
          return or__3824__auto____7610
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____7615 = coll;
    if(and__3822__auto____7615) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____7615
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2363__auto____7616 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7617 = cljs.core._assoc[goog.typeOf(x__2363__auto____7616)];
      if(or__3824__auto____7617) {
        return or__3824__auto____7617
      }else {
        var or__3824__auto____7618 = cljs.core._assoc["_"];
        if(or__3824__auto____7618) {
          return or__3824__auto____7618
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____7623 = coll;
    if(and__3822__auto____7623) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____7623
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2363__auto____7624 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7625 = cljs.core._dissoc[goog.typeOf(x__2363__auto____7624)];
      if(or__3824__auto____7625) {
        return or__3824__auto____7625
      }else {
        var or__3824__auto____7626 = cljs.core._dissoc["_"];
        if(or__3824__auto____7626) {
          return or__3824__auto____7626
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____7631 = coll;
    if(and__3822__auto____7631) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____7631
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2363__auto____7632 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7633 = cljs.core._key[goog.typeOf(x__2363__auto____7632)];
      if(or__3824__auto____7633) {
        return or__3824__auto____7633
      }else {
        var or__3824__auto____7634 = cljs.core._key["_"];
        if(or__3824__auto____7634) {
          return or__3824__auto____7634
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____7639 = coll;
    if(and__3822__auto____7639) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____7639
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2363__auto____7640 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7641 = cljs.core._val[goog.typeOf(x__2363__auto____7640)];
      if(or__3824__auto____7641) {
        return or__3824__auto____7641
      }else {
        var or__3824__auto____7642 = cljs.core._val["_"];
        if(or__3824__auto____7642) {
          return or__3824__auto____7642
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____7647 = coll;
    if(and__3822__auto____7647) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____7647
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2363__auto____7648 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7649 = cljs.core._disjoin[goog.typeOf(x__2363__auto____7648)];
      if(or__3824__auto____7649) {
        return or__3824__auto____7649
      }else {
        var or__3824__auto____7650 = cljs.core._disjoin["_"];
        if(or__3824__auto____7650) {
          return or__3824__auto____7650
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____7655 = coll;
    if(and__3822__auto____7655) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____7655
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2363__auto____7656 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7657 = cljs.core._peek[goog.typeOf(x__2363__auto____7656)];
      if(or__3824__auto____7657) {
        return or__3824__auto____7657
      }else {
        var or__3824__auto____7658 = cljs.core._peek["_"];
        if(or__3824__auto____7658) {
          return or__3824__auto____7658
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____7663 = coll;
    if(and__3822__auto____7663) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____7663
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2363__auto____7664 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7665 = cljs.core._pop[goog.typeOf(x__2363__auto____7664)];
      if(or__3824__auto____7665) {
        return or__3824__auto____7665
      }else {
        var or__3824__auto____7666 = cljs.core._pop["_"];
        if(or__3824__auto____7666) {
          return or__3824__auto____7666
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____7671 = coll;
    if(and__3822__auto____7671) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____7671
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2363__auto____7672 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7673 = cljs.core._assoc_n[goog.typeOf(x__2363__auto____7672)];
      if(or__3824__auto____7673) {
        return or__3824__auto____7673
      }else {
        var or__3824__auto____7674 = cljs.core._assoc_n["_"];
        if(or__3824__auto____7674) {
          return or__3824__auto____7674
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____7679 = o;
    if(and__3822__auto____7679) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____7679
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2363__auto____7680 = o == null ? null : o;
    return function() {
      var or__3824__auto____7681 = cljs.core._deref[goog.typeOf(x__2363__auto____7680)];
      if(or__3824__auto____7681) {
        return or__3824__auto____7681
      }else {
        var or__3824__auto____7682 = cljs.core._deref["_"];
        if(or__3824__auto____7682) {
          return or__3824__auto____7682
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____7687 = o;
    if(and__3822__auto____7687) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____7687
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2363__auto____7688 = o == null ? null : o;
    return function() {
      var or__3824__auto____7689 = cljs.core._deref_with_timeout[goog.typeOf(x__2363__auto____7688)];
      if(or__3824__auto____7689) {
        return or__3824__auto____7689
      }else {
        var or__3824__auto____7690 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____7690) {
          return or__3824__auto____7690
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____7695 = o;
    if(and__3822__auto____7695) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____7695
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2363__auto____7696 = o == null ? null : o;
    return function() {
      var or__3824__auto____7697 = cljs.core._meta[goog.typeOf(x__2363__auto____7696)];
      if(or__3824__auto____7697) {
        return or__3824__auto____7697
      }else {
        var or__3824__auto____7698 = cljs.core._meta["_"];
        if(or__3824__auto____7698) {
          return or__3824__auto____7698
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____7703 = o;
    if(and__3822__auto____7703) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____7703
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2363__auto____7704 = o == null ? null : o;
    return function() {
      var or__3824__auto____7705 = cljs.core._with_meta[goog.typeOf(x__2363__auto____7704)];
      if(or__3824__auto____7705) {
        return or__3824__auto____7705
      }else {
        var or__3824__auto____7706 = cljs.core._with_meta["_"];
        if(or__3824__auto____7706) {
          return or__3824__auto____7706
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____7715 = coll;
      if(and__3822__auto____7715) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____7715
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2363__auto____7716 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7717 = cljs.core._reduce[goog.typeOf(x__2363__auto____7716)];
        if(or__3824__auto____7717) {
          return or__3824__auto____7717
        }else {
          var or__3824__auto____7718 = cljs.core._reduce["_"];
          if(or__3824__auto____7718) {
            return or__3824__auto____7718
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____7719 = coll;
      if(and__3822__auto____7719) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____7719
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2363__auto____7720 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____7721 = cljs.core._reduce[goog.typeOf(x__2363__auto____7720)];
        if(or__3824__auto____7721) {
          return or__3824__auto____7721
        }else {
          var or__3824__auto____7722 = cljs.core._reduce["_"];
          if(or__3824__auto____7722) {
            return or__3824__auto____7722
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____7727 = coll;
    if(and__3822__auto____7727) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____7727
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2363__auto____7728 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7729 = cljs.core._kv_reduce[goog.typeOf(x__2363__auto____7728)];
      if(or__3824__auto____7729) {
        return or__3824__auto____7729
      }else {
        var or__3824__auto____7730 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____7730) {
          return or__3824__auto____7730
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____7735 = o;
    if(and__3822__auto____7735) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____7735
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2363__auto____7736 = o == null ? null : o;
    return function() {
      var or__3824__auto____7737 = cljs.core._equiv[goog.typeOf(x__2363__auto____7736)];
      if(or__3824__auto____7737) {
        return or__3824__auto____7737
      }else {
        var or__3824__auto____7738 = cljs.core._equiv["_"];
        if(or__3824__auto____7738) {
          return or__3824__auto____7738
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____7743 = o;
    if(and__3822__auto____7743) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____7743
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2363__auto____7744 = o == null ? null : o;
    return function() {
      var or__3824__auto____7745 = cljs.core._hash[goog.typeOf(x__2363__auto____7744)];
      if(or__3824__auto____7745) {
        return or__3824__auto____7745
      }else {
        var or__3824__auto____7746 = cljs.core._hash["_"];
        if(or__3824__auto____7746) {
          return or__3824__auto____7746
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____7751 = o;
    if(and__3822__auto____7751) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____7751
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2363__auto____7752 = o == null ? null : o;
    return function() {
      var or__3824__auto____7753 = cljs.core._seq[goog.typeOf(x__2363__auto____7752)];
      if(or__3824__auto____7753) {
        return or__3824__auto____7753
      }else {
        var or__3824__auto____7754 = cljs.core._seq["_"];
        if(or__3824__auto____7754) {
          return or__3824__auto____7754
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____7759 = coll;
    if(and__3822__auto____7759) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____7759
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2363__auto____7760 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7761 = cljs.core._rseq[goog.typeOf(x__2363__auto____7760)];
      if(or__3824__auto____7761) {
        return or__3824__auto____7761
      }else {
        var or__3824__auto____7762 = cljs.core._rseq["_"];
        if(or__3824__auto____7762) {
          return or__3824__auto____7762
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7767 = coll;
    if(and__3822__auto____7767) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____7767
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2363__auto____7768 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7769 = cljs.core._sorted_seq[goog.typeOf(x__2363__auto____7768)];
      if(or__3824__auto____7769) {
        return or__3824__auto____7769
      }else {
        var or__3824__auto____7770 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____7770) {
          return or__3824__auto____7770
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____7775 = coll;
    if(and__3822__auto____7775) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____7775
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2363__auto____7776 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7777 = cljs.core._sorted_seq_from[goog.typeOf(x__2363__auto____7776)];
      if(or__3824__auto____7777) {
        return or__3824__auto____7777
      }else {
        var or__3824__auto____7778 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____7778) {
          return or__3824__auto____7778
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____7783 = coll;
    if(and__3822__auto____7783) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____7783
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2363__auto____7784 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7785 = cljs.core._entry_key[goog.typeOf(x__2363__auto____7784)];
      if(or__3824__auto____7785) {
        return or__3824__auto____7785
      }else {
        var or__3824__auto____7786 = cljs.core._entry_key["_"];
        if(or__3824__auto____7786) {
          return or__3824__auto____7786
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____7791 = coll;
    if(and__3822__auto____7791) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____7791
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2363__auto____7792 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7793 = cljs.core._comparator[goog.typeOf(x__2363__auto____7792)];
      if(or__3824__auto____7793) {
        return or__3824__auto____7793
      }else {
        var or__3824__auto____7794 = cljs.core._comparator["_"];
        if(or__3824__auto____7794) {
          return or__3824__auto____7794
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____7799 = o;
    if(and__3822__auto____7799) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____7799
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2363__auto____7800 = o == null ? null : o;
    return function() {
      var or__3824__auto____7801 = cljs.core._pr_seq[goog.typeOf(x__2363__auto____7800)];
      if(or__3824__auto____7801) {
        return or__3824__auto____7801
      }else {
        var or__3824__auto____7802 = cljs.core._pr_seq["_"];
        if(or__3824__auto____7802) {
          return or__3824__auto____7802
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____7807 = d;
    if(and__3822__auto____7807) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____7807
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2363__auto____7808 = d == null ? null : d;
    return function() {
      var or__3824__auto____7809 = cljs.core._realized_QMARK_[goog.typeOf(x__2363__auto____7808)];
      if(or__3824__auto____7809) {
        return or__3824__auto____7809
      }else {
        var or__3824__auto____7810 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____7810) {
          return or__3824__auto____7810
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____7815 = this$;
    if(and__3822__auto____7815) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____7815
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2363__auto____7816 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7817 = cljs.core._notify_watches[goog.typeOf(x__2363__auto____7816)];
      if(or__3824__auto____7817) {
        return or__3824__auto____7817
      }else {
        var or__3824__auto____7818 = cljs.core._notify_watches["_"];
        if(or__3824__auto____7818) {
          return or__3824__auto____7818
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____7823 = this$;
    if(and__3822__auto____7823) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____7823
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2363__auto____7824 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7825 = cljs.core._add_watch[goog.typeOf(x__2363__auto____7824)];
      if(or__3824__auto____7825) {
        return or__3824__auto____7825
      }else {
        var or__3824__auto____7826 = cljs.core._add_watch["_"];
        if(or__3824__auto____7826) {
          return or__3824__auto____7826
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____7831 = this$;
    if(and__3822__auto____7831) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____7831
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2363__auto____7832 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____7833 = cljs.core._remove_watch[goog.typeOf(x__2363__auto____7832)];
      if(or__3824__auto____7833) {
        return or__3824__auto____7833
      }else {
        var or__3824__auto____7834 = cljs.core._remove_watch["_"];
        if(or__3824__auto____7834) {
          return or__3824__auto____7834
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____7839 = coll;
    if(and__3822__auto____7839) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____7839
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2363__auto____7840 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7841 = cljs.core._as_transient[goog.typeOf(x__2363__auto____7840)];
      if(or__3824__auto____7841) {
        return or__3824__auto____7841
      }else {
        var or__3824__auto____7842 = cljs.core._as_transient["_"];
        if(or__3824__auto____7842) {
          return or__3824__auto____7842
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____7847 = tcoll;
    if(and__3822__auto____7847) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____7847
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2363__auto____7848 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7849 = cljs.core._conj_BANG_[goog.typeOf(x__2363__auto____7848)];
      if(or__3824__auto____7849) {
        return or__3824__auto____7849
      }else {
        var or__3824__auto____7850 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____7850) {
          return or__3824__auto____7850
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7855 = tcoll;
    if(and__3822__auto____7855) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____7855
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____7856 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7857 = cljs.core._persistent_BANG_[goog.typeOf(x__2363__auto____7856)];
      if(or__3824__auto____7857) {
        return or__3824__auto____7857
      }else {
        var or__3824__auto____7858 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____7858) {
          return or__3824__auto____7858
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____7863 = tcoll;
    if(and__3822__auto____7863) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____7863
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2363__auto____7864 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7865 = cljs.core._assoc_BANG_[goog.typeOf(x__2363__auto____7864)];
      if(or__3824__auto____7865) {
        return or__3824__auto____7865
      }else {
        var or__3824__auto____7866 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____7866) {
          return or__3824__auto____7866
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____7871 = tcoll;
    if(and__3822__auto____7871) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____7871
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2363__auto____7872 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7873 = cljs.core._dissoc_BANG_[goog.typeOf(x__2363__auto____7872)];
      if(or__3824__auto____7873) {
        return or__3824__auto____7873
      }else {
        var or__3824__auto____7874 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____7874) {
          return or__3824__auto____7874
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____7879 = tcoll;
    if(and__3822__auto____7879) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____7879
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2363__auto____7880 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7881 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2363__auto____7880)];
      if(or__3824__auto____7881) {
        return or__3824__auto____7881
      }else {
        var or__3824__auto____7882 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____7882) {
          return or__3824__auto____7882
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____7887 = tcoll;
    if(and__3822__auto____7887) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____7887
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2363__auto____7888 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7889 = cljs.core._pop_BANG_[goog.typeOf(x__2363__auto____7888)];
      if(or__3824__auto____7889) {
        return or__3824__auto____7889
      }else {
        var or__3824__auto____7890 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____7890) {
          return or__3824__auto____7890
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____7895 = tcoll;
    if(and__3822__auto____7895) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____7895
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2363__auto____7896 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____7897 = cljs.core._disjoin_BANG_[goog.typeOf(x__2363__auto____7896)];
      if(or__3824__auto____7897) {
        return or__3824__auto____7897
      }else {
        var or__3824__auto____7898 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____7898) {
          return or__3824__auto____7898
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____7903 = x;
    if(and__3822__auto____7903) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____7903
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2363__auto____7904 = x == null ? null : x;
    return function() {
      var or__3824__auto____7905 = cljs.core._compare[goog.typeOf(x__2363__auto____7904)];
      if(or__3824__auto____7905) {
        return or__3824__auto____7905
      }else {
        var or__3824__auto____7906 = cljs.core._compare["_"];
        if(or__3824__auto____7906) {
          return or__3824__auto____7906
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____7911 = coll;
    if(and__3822__auto____7911) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____7911
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2363__auto____7912 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7913 = cljs.core._drop_first[goog.typeOf(x__2363__auto____7912)];
      if(or__3824__auto____7913) {
        return or__3824__auto____7913
      }else {
        var or__3824__auto____7914 = cljs.core._drop_first["_"];
        if(or__3824__auto____7914) {
          return or__3824__auto____7914
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____7919 = coll;
    if(and__3822__auto____7919) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____7919
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2363__auto____7920 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7921 = cljs.core._chunked_first[goog.typeOf(x__2363__auto____7920)];
      if(or__3824__auto____7921) {
        return or__3824__auto____7921
      }else {
        var or__3824__auto____7922 = cljs.core._chunked_first["_"];
        if(or__3824__auto____7922) {
          return or__3824__auto____7922
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____7927 = coll;
    if(and__3822__auto____7927) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____7927
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2363__auto____7928 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7929 = cljs.core._chunked_rest[goog.typeOf(x__2363__auto____7928)];
      if(or__3824__auto____7929) {
        return or__3824__auto____7929
      }else {
        var or__3824__auto____7930 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____7930) {
          return or__3824__auto____7930
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____7935 = coll;
    if(and__3822__auto____7935) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____7935
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2363__auto____7936 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____7937 = cljs.core._chunked_next[goog.typeOf(x__2363__auto____7936)];
      if(or__3824__auto____7937) {
        return or__3824__auto____7937
      }else {
        var or__3824__auto____7938 = cljs.core._chunked_next["_"];
        if(or__3824__auto____7938) {
          return or__3824__auto____7938
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____7940 = x === y;
    if(or__3824__auto____7940) {
      return or__3824__auto____7940
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__7941__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7942 = y;
            var G__7943 = cljs.core.first.call(null, more);
            var G__7944 = cljs.core.next.call(null, more);
            x = G__7942;
            y = G__7943;
            more = G__7944;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7941 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7941__delegate.call(this, x, y, more)
    };
    G__7941.cljs$lang$maxFixedArity = 2;
    G__7941.cljs$lang$applyTo = function(arglist__7945) {
      var x = cljs.core.first(arglist__7945);
      var y = cljs.core.first(cljs.core.next(arglist__7945));
      var more = cljs.core.rest(cljs.core.next(arglist__7945));
      return G__7941__delegate(x, y, more)
    };
    G__7941.cljs$lang$arity$variadic = G__7941__delegate;
    return G__7941
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__7946 = null;
  var G__7946__2 = function(o, k) {
    return null
  };
  var G__7946__3 = function(o, k, not_found) {
    return not_found
  };
  G__7946 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7946__2.call(this, o, k);
      case 3:
        return G__7946__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7946
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__7947 = null;
  var G__7947__2 = function(_, f) {
    return f.call(null)
  };
  var G__7947__3 = function(_, f, start) {
    return start
  };
  G__7947 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7947__2.call(this, _, f);
      case 3:
        return G__7947__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7947
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__7948 = null;
  var G__7948__2 = function(_, n) {
    return null
  };
  var G__7948__3 = function(_, n, not_found) {
    return not_found
  };
  G__7948 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7948__2.call(this, _, n);
      case 3:
        return G__7948__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7948
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____7949 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____7949) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____7949
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__7962 = cljs.core._count.call(null, cicoll);
    if(cnt__7962 === 0) {
      return f.call(null)
    }else {
      var val__7963 = cljs.core._nth.call(null, cicoll, 0);
      var n__7964 = 1;
      while(true) {
        if(n__7964 < cnt__7962) {
          var nval__7965 = f.call(null, val__7963, cljs.core._nth.call(null, cicoll, n__7964));
          if(cljs.core.reduced_QMARK_.call(null, nval__7965)) {
            return cljs.core.deref.call(null, nval__7965)
          }else {
            var G__7974 = nval__7965;
            var G__7975 = n__7964 + 1;
            val__7963 = G__7974;
            n__7964 = G__7975;
            continue
          }
        }else {
          return val__7963
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__7966 = cljs.core._count.call(null, cicoll);
    var val__7967 = val;
    var n__7968 = 0;
    while(true) {
      if(n__7968 < cnt__7966) {
        var nval__7969 = f.call(null, val__7967, cljs.core._nth.call(null, cicoll, n__7968));
        if(cljs.core.reduced_QMARK_.call(null, nval__7969)) {
          return cljs.core.deref.call(null, nval__7969)
        }else {
          var G__7976 = nval__7969;
          var G__7977 = n__7968 + 1;
          val__7967 = G__7976;
          n__7968 = G__7977;
          continue
        }
      }else {
        return val__7967
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__7970 = cljs.core._count.call(null, cicoll);
    var val__7971 = val;
    var n__7972 = idx;
    while(true) {
      if(n__7972 < cnt__7970) {
        var nval__7973 = f.call(null, val__7971, cljs.core._nth.call(null, cicoll, n__7972));
        if(cljs.core.reduced_QMARK_.call(null, nval__7973)) {
          return cljs.core.deref.call(null, nval__7973)
        }else {
          var G__7978 = nval__7973;
          var G__7979 = n__7972 + 1;
          val__7971 = G__7978;
          n__7972 = G__7979;
          continue
        }
      }else {
        return val__7971
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__7992 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__7993 = arr[0];
      var n__7994 = 1;
      while(true) {
        if(n__7994 < cnt__7992) {
          var nval__7995 = f.call(null, val__7993, arr[n__7994]);
          if(cljs.core.reduced_QMARK_.call(null, nval__7995)) {
            return cljs.core.deref.call(null, nval__7995)
          }else {
            var G__8004 = nval__7995;
            var G__8005 = n__7994 + 1;
            val__7993 = G__8004;
            n__7994 = G__8005;
            continue
          }
        }else {
          return val__7993
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__7996 = arr.length;
    var val__7997 = val;
    var n__7998 = 0;
    while(true) {
      if(n__7998 < cnt__7996) {
        var nval__7999 = f.call(null, val__7997, arr[n__7998]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7999)) {
          return cljs.core.deref.call(null, nval__7999)
        }else {
          var G__8006 = nval__7999;
          var G__8007 = n__7998 + 1;
          val__7997 = G__8006;
          n__7998 = G__8007;
          continue
        }
      }else {
        return val__7997
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__8000 = arr.length;
    var val__8001 = val;
    var n__8002 = idx;
    while(true) {
      if(n__8002 < cnt__8000) {
        var nval__8003 = f.call(null, val__8001, arr[n__8002]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8003)) {
          return cljs.core.deref.call(null, nval__8003)
        }else {
          var G__8008 = nval__8003;
          var G__8009 = n__8002 + 1;
          val__8001 = G__8008;
          n__8002 = G__8009;
          continue
        }
      }else {
        return val__8001
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8010 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__8011 = this;
  if(this__8011.i + 1 < this__8011.a.length) {
    return new cljs.core.IndexedSeq(this__8011.a, this__8011.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8012 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__8013 = this;
  var c__8014 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__8014 > 0) {
    return new cljs.core.RSeq(coll, c__8014 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__8015 = this;
  var this__8016 = this;
  return cljs.core.pr_str.call(null, this__8016)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8017 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8017.a)) {
    return cljs.core.ci_reduce.call(null, this__8017.a, f, this__8017.a[this__8017.i], this__8017.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__8017.a[this__8017.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8018 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8018.a)) {
    return cljs.core.ci_reduce.call(null, this__8018.a, f, start, this__8018.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__8019 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8020 = this;
  return this__8020.a.length - this__8020.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__8021 = this;
  return this__8021.a[this__8021.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__8022 = this;
  if(this__8022.i + 1 < this__8022.a.length) {
    return new cljs.core.IndexedSeq(this__8022.a, this__8022.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8023 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8024 = this;
  var i__8025 = n + this__8024.i;
  if(i__8025 < this__8024.a.length) {
    return this__8024.a[i__8025]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8026 = this;
  var i__8027 = n + this__8026.i;
  if(i__8027 < this__8026.a.length) {
    return this__8026.a[i__8027]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__8028 = null;
  var G__8028__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__8028__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__8028 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8028__2.call(this, array, f);
      case 3:
        return G__8028__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8028
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__8029 = null;
  var G__8029__2 = function(array, k) {
    return array[k]
  };
  var G__8029__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__8029 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8029__2.call(this, array, k);
      case 3:
        return G__8029__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8029
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__8030 = null;
  var G__8030__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__8030__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__8030 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8030__2.call(this, array, n);
      case 3:
        return G__8030__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8030
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8031 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8032 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__8033 = this;
  var this__8034 = this;
  return cljs.core.pr_str.call(null, this__8034)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8035 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8036 = this;
  return this__8036.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8037 = this;
  return cljs.core._nth.call(null, this__8037.ci, this__8037.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8038 = this;
  if(this__8038.i > 0) {
    return new cljs.core.RSeq(this__8038.ci, this__8038.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8039 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__8040 = this;
  return new cljs.core.RSeq(this__8040.ci, this__8040.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8041 = this;
  return this__8041.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8045__8046 = coll;
      if(G__8045__8046) {
        if(function() {
          var or__3824__auto____8047 = G__8045__8046.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____8047) {
            return or__3824__auto____8047
          }else {
            return G__8045__8046.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__8045__8046.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8045__8046)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8045__8046)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8052__8053 = coll;
      if(G__8052__8053) {
        if(function() {
          var or__3824__auto____8054 = G__8052__8053.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8054) {
            return or__3824__auto____8054
          }else {
            return G__8052__8053.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8052__8053.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8052__8053)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8052__8053)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__8055 = cljs.core.seq.call(null, coll);
      if(s__8055 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__8055)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__8060__8061 = coll;
      if(G__8060__8061) {
        if(function() {
          var or__3824__auto____8062 = G__8060__8061.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8062) {
            return or__3824__auto____8062
          }else {
            return G__8060__8061.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8060__8061.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8060__8061)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8060__8061)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__8063 = cljs.core.seq.call(null, coll);
      if(!(s__8063 == null)) {
        return cljs.core._rest.call(null, s__8063)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8067__8068 = coll;
      if(G__8067__8068) {
        if(function() {
          var or__3824__auto____8069 = G__8067__8068.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____8069) {
            return or__3824__auto____8069
          }else {
            return G__8067__8068.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__8067__8068.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8067__8068)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8067__8068)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__8071 = cljs.core.next.call(null, s);
    if(!(sn__8071 == null)) {
      var G__8072 = sn__8071;
      s = G__8072;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__8073__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__8074 = conj.call(null, coll, x);
          var G__8075 = cljs.core.first.call(null, xs);
          var G__8076 = cljs.core.next.call(null, xs);
          coll = G__8074;
          x = G__8075;
          xs = G__8076;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__8073 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8073__delegate.call(this, coll, x, xs)
    };
    G__8073.cljs$lang$maxFixedArity = 2;
    G__8073.cljs$lang$applyTo = function(arglist__8077) {
      var coll = cljs.core.first(arglist__8077);
      var x = cljs.core.first(cljs.core.next(arglist__8077));
      var xs = cljs.core.rest(cljs.core.next(arglist__8077));
      return G__8073__delegate(coll, x, xs)
    };
    G__8073.cljs$lang$arity$variadic = G__8073__delegate;
    return G__8073
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__8080 = cljs.core.seq.call(null, coll);
  var acc__8081 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__8080)) {
      return acc__8081 + cljs.core._count.call(null, s__8080)
    }else {
      var G__8082 = cljs.core.next.call(null, s__8080);
      var G__8083 = acc__8081 + 1;
      s__8080 = G__8082;
      acc__8081 = G__8083;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__8090__8091 = coll;
        if(G__8090__8091) {
          if(function() {
            var or__3824__auto____8092 = G__8090__8091.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8092) {
              return or__3824__auto____8092
            }else {
              return G__8090__8091.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8090__8091.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8090__8091)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8090__8091)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__8093__8094 = coll;
        if(G__8093__8094) {
          if(function() {
            var or__3824__auto____8095 = G__8093__8094.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____8095) {
              return or__3824__auto____8095
            }else {
              return G__8093__8094.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8093__8094.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8093__8094)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8093__8094)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__8098__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__8097 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__8099 = ret__8097;
          var G__8100 = cljs.core.first.call(null, kvs);
          var G__8101 = cljs.core.second.call(null, kvs);
          var G__8102 = cljs.core.nnext.call(null, kvs);
          coll = G__8099;
          k = G__8100;
          v = G__8101;
          kvs = G__8102;
          continue
        }else {
          return ret__8097
        }
        break
      }
    };
    var G__8098 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8098__delegate.call(this, coll, k, v, kvs)
    };
    G__8098.cljs$lang$maxFixedArity = 3;
    G__8098.cljs$lang$applyTo = function(arglist__8103) {
      var coll = cljs.core.first(arglist__8103);
      var k = cljs.core.first(cljs.core.next(arglist__8103));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8103)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8103)));
      return G__8098__delegate(coll, k, v, kvs)
    };
    G__8098.cljs$lang$arity$variadic = G__8098__delegate;
    return G__8098
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__8106__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8105 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8107 = ret__8105;
          var G__8108 = cljs.core.first.call(null, ks);
          var G__8109 = cljs.core.next.call(null, ks);
          coll = G__8107;
          k = G__8108;
          ks = G__8109;
          continue
        }else {
          return ret__8105
        }
        break
      }
    };
    var G__8106 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8106__delegate.call(this, coll, k, ks)
    };
    G__8106.cljs$lang$maxFixedArity = 2;
    G__8106.cljs$lang$applyTo = function(arglist__8110) {
      var coll = cljs.core.first(arglist__8110);
      var k = cljs.core.first(cljs.core.next(arglist__8110));
      var ks = cljs.core.rest(cljs.core.next(arglist__8110));
      return G__8106__delegate(coll, k, ks)
    };
    G__8106.cljs$lang$arity$variadic = G__8106__delegate;
    return G__8106
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__8114__8115 = o;
    if(G__8114__8115) {
      if(function() {
        var or__3824__auto____8116 = G__8114__8115.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____8116) {
          return or__3824__auto____8116
        }else {
          return G__8114__8115.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8114__8115.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8114__8115)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8114__8115)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__8119__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8118 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8120 = ret__8118;
          var G__8121 = cljs.core.first.call(null, ks);
          var G__8122 = cljs.core.next.call(null, ks);
          coll = G__8120;
          k = G__8121;
          ks = G__8122;
          continue
        }else {
          return ret__8118
        }
        break
      }
    };
    var G__8119 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8119__delegate.call(this, coll, k, ks)
    };
    G__8119.cljs$lang$maxFixedArity = 2;
    G__8119.cljs$lang$applyTo = function(arglist__8123) {
      var coll = cljs.core.first(arglist__8123);
      var k = cljs.core.first(cljs.core.next(arglist__8123));
      var ks = cljs.core.rest(cljs.core.next(arglist__8123));
      return G__8119__delegate(coll, k, ks)
    };
    G__8119.cljs$lang$arity$variadic = G__8119__delegate;
    return G__8119
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__8125 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__8125;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__8125
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__8127 = cljs.core.string_hash_cache[k];
  if(!(h__8127 == null)) {
    return h__8127
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____8129 = goog.isString(o);
      if(and__3822__auto____8129) {
        return check_cache
      }else {
        return and__3822__auto____8129
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8133__8134 = x;
    if(G__8133__8134) {
      if(function() {
        var or__3824__auto____8135 = G__8133__8134.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____8135) {
          return or__3824__auto____8135
        }else {
          return G__8133__8134.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__8133__8134.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8133__8134)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8133__8134)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8139__8140 = x;
    if(G__8139__8140) {
      if(function() {
        var or__3824__auto____8141 = G__8139__8140.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____8141) {
          return or__3824__auto____8141
        }else {
          return G__8139__8140.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__8139__8140.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8139__8140)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8139__8140)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__8145__8146 = x;
  if(G__8145__8146) {
    if(function() {
      var or__3824__auto____8147 = G__8145__8146.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____8147) {
        return or__3824__auto____8147
      }else {
        return G__8145__8146.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__8145__8146.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8145__8146)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8145__8146)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__8151__8152 = x;
  if(G__8151__8152) {
    if(function() {
      var or__3824__auto____8153 = G__8151__8152.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____8153) {
        return or__3824__auto____8153
      }else {
        return G__8151__8152.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__8151__8152.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8151__8152)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8151__8152)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__8157__8158 = x;
  if(G__8157__8158) {
    if(function() {
      var or__3824__auto____8159 = G__8157__8158.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____8159) {
        return or__3824__auto____8159
      }else {
        return G__8157__8158.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__8157__8158.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8157__8158)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8157__8158)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__8163__8164 = x;
  if(G__8163__8164) {
    if(function() {
      var or__3824__auto____8165 = G__8163__8164.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____8165) {
        return or__3824__auto____8165
      }else {
        return G__8163__8164.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__8163__8164.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8163__8164)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8163__8164)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__8169__8170 = x;
  if(G__8169__8170) {
    if(function() {
      var or__3824__auto____8171 = G__8169__8170.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____8171) {
        return or__3824__auto____8171
      }else {
        return G__8169__8170.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__8169__8170.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8169__8170)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8169__8170)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8175__8176 = x;
    if(G__8175__8176) {
      if(function() {
        var or__3824__auto____8177 = G__8175__8176.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____8177) {
          return or__3824__auto____8177
        }else {
          return G__8175__8176.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__8175__8176.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8175__8176)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8175__8176)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__8181__8182 = x;
  if(G__8181__8182) {
    if(function() {
      var or__3824__auto____8183 = G__8181__8182.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____8183) {
        return or__3824__auto____8183
      }else {
        return G__8181__8182.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__8181__8182.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8181__8182)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8181__8182)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__8187__8188 = x;
  if(G__8187__8188) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____8189 = null;
      if(cljs.core.truth_(or__3824__auto____8189)) {
        return or__3824__auto____8189
      }else {
        return G__8187__8188.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__8187__8188.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8187__8188)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8187__8188)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__8190__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__8190 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8190__delegate.call(this, keyvals)
    };
    G__8190.cljs$lang$maxFixedArity = 0;
    G__8190.cljs$lang$applyTo = function(arglist__8191) {
      var keyvals = cljs.core.seq(arglist__8191);
      return G__8190__delegate(keyvals)
    };
    G__8190.cljs$lang$arity$variadic = G__8190__delegate;
    return G__8190
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__8193 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__8193.push(key)
  });
  return keys__8193
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__8197 = i;
  var j__8198 = j;
  var len__8199 = len;
  while(true) {
    if(len__8199 === 0) {
      return to
    }else {
      to[j__8198] = from[i__8197];
      var G__8200 = i__8197 + 1;
      var G__8201 = j__8198 + 1;
      var G__8202 = len__8199 - 1;
      i__8197 = G__8200;
      j__8198 = G__8201;
      len__8199 = G__8202;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__8206 = i + (len - 1);
  var j__8207 = j + (len - 1);
  var len__8208 = len;
  while(true) {
    if(len__8208 === 0) {
      return to
    }else {
      to[j__8207] = from[i__8206];
      var G__8209 = i__8206 - 1;
      var G__8210 = j__8207 - 1;
      var G__8211 = len__8208 - 1;
      i__8206 = G__8209;
      j__8207 = G__8210;
      len__8208 = G__8211;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__8215__8216 = s;
    if(G__8215__8216) {
      if(function() {
        var or__3824__auto____8217 = G__8215__8216.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____8217) {
          return or__3824__auto____8217
        }else {
          return G__8215__8216.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__8215__8216.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8215__8216)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8215__8216)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__8221__8222 = s;
  if(G__8221__8222) {
    if(function() {
      var or__3824__auto____8223 = G__8221__8222.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____8223) {
        return or__3824__auto____8223
      }else {
        return G__8221__8222.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__8221__8222.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8221__8222)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8221__8222)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____8226 = goog.isString(x);
  if(and__3822__auto____8226) {
    return!function() {
      var or__3824__auto____8227 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____8227) {
        return or__3824__auto____8227
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____8226
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____8229 = goog.isString(x);
  if(and__3822__auto____8229) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____8229
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____8231 = goog.isString(x);
  if(and__3822__auto____8231) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____8231
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____8236 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____8236) {
    return or__3824__auto____8236
  }else {
    var G__8237__8238 = f;
    if(G__8237__8238) {
      if(function() {
        var or__3824__auto____8239 = G__8237__8238.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____8239) {
          return or__3824__auto____8239
        }else {
          return G__8237__8238.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__8237__8238.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8237__8238)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8237__8238)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____8241 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____8241) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____8241
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____8244 = coll;
    if(cljs.core.truth_(and__3822__auto____8244)) {
      var and__3822__auto____8245 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____8245) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____8245
      }
    }else {
      return and__3822__auto____8244
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__8254__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__8250 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__8251 = more;
        while(true) {
          var x__8252 = cljs.core.first.call(null, xs__8251);
          var etc__8253 = cljs.core.next.call(null, xs__8251);
          if(cljs.core.truth_(xs__8251)) {
            if(cljs.core.contains_QMARK_.call(null, s__8250, x__8252)) {
              return false
            }else {
              var G__8255 = cljs.core.conj.call(null, s__8250, x__8252);
              var G__8256 = etc__8253;
              s__8250 = G__8255;
              xs__8251 = G__8256;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__8254 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8254__delegate.call(this, x, y, more)
    };
    G__8254.cljs$lang$maxFixedArity = 2;
    G__8254.cljs$lang$applyTo = function(arglist__8257) {
      var x = cljs.core.first(arglist__8257);
      var y = cljs.core.first(cljs.core.next(arglist__8257));
      var more = cljs.core.rest(cljs.core.next(arglist__8257));
      return G__8254__delegate(x, y, more)
    };
    G__8254.cljs$lang$arity$variadic = G__8254__delegate;
    return G__8254
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__8261__8262 = x;
            if(G__8261__8262) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____8263 = null;
                if(cljs.core.truth_(or__3824__auto____8263)) {
                  return or__3824__auto____8263
                }else {
                  return G__8261__8262.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__8261__8262.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8261__8262)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8261__8262)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__8268 = cljs.core.count.call(null, xs);
    var yl__8269 = cljs.core.count.call(null, ys);
    if(xl__8268 < yl__8269) {
      return-1
    }else {
      if(xl__8268 > yl__8269) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__8268, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__8270 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____8271 = d__8270 === 0;
        if(and__3822__auto____8271) {
          return n + 1 < len
        }else {
          return and__3822__auto____8271
        }
      }()) {
        var G__8272 = xs;
        var G__8273 = ys;
        var G__8274 = len;
        var G__8275 = n + 1;
        xs = G__8272;
        ys = G__8273;
        len = G__8274;
        n = G__8275;
        continue
      }else {
        return d__8270
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__8277 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__8277)) {
        return r__8277
      }else {
        if(cljs.core.truth_(r__8277)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__8279 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__8279, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__8279)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____8285 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____8285) {
      var s__8286 = temp__3971__auto____8285;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__8286), cljs.core.next.call(null, s__8286))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__8287 = val;
    var coll__8288 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__8288) {
        var nval__8289 = f.call(null, val__8287, cljs.core.first.call(null, coll__8288));
        if(cljs.core.reduced_QMARK_.call(null, nval__8289)) {
          return cljs.core.deref.call(null, nval__8289)
        }else {
          var G__8290 = nval__8289;
          var G__8291 = cljs.core.next.call(null, coll__8288);
          val__8287 = G__8290;
          coll__8288 = G__8291;
          continue
        }
      }else {
        return val__8287
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__8293 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__8293);
  return cljs.core.vec.call(null, a__8293)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__8300__8301 = coll;
      if(G__8300__8301) {
        if(function() {
          var or__3824__auto____8302 = G__8300__8301.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8302) {
            return or__3824__auto____8302
          }else {
            return G__8300__8301.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8300__8301.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8300__8301)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8300__8301)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__8303__8304 = coll;
      if(G__8303__8304) {
        if(function() {
          var or__3824__auto____8305 = G__8303__8304.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____8305) {
            return or__3824__auto____8305
          }else {
            return G__8303__8304.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8303__8304.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8303__8304)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8303__8304)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__8306 = this;
  return this__8306.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__8307__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__8307 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8307__delegate.call(this, x, y, more)
    };
    G__8307.cljs$lang$maxFixedArity = 2;
    G__8307.cljs$lang$applyTo = function(arglist__8308) {
      var x = cljs.core.first(arglist__8308);
      var y = cljs.core.first(cljs.core.next(arglist__8308));
      var more = cljs.core.rest(cljs.core.next(arglist__8308));
      return G__8307__delegate(x, y, more)
    };
    G__8307.cljs$lang$arity$variadic = G__8307__delegate;
    return G__8307
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__8309__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__8309 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8309__delegate.call(this, x, y, more)
    };
    G__8309.cljs$lang$maxFixedArity = 2;
    G__8309.cljs$lang$applyTo = function(arglist__8310) {
      var x = cljs.core.first(arglist__8310);
      var y = cljs.core.first(cljs.core.next(arglist__8310));
      var more = cljs.core.rest(cljs.core.next(arglist__8310));
      return G__8309__delegate(x, y, more)
    };
    G__8309.cljs$lang$arity$variadic = G__8309__delegate;
    return G__8309
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__8311__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__8311 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8311__delegate.call(this, x, y, more)
    };
    G__8311.cljs$lang$maxFixedArity = 2;
    G__8311.cljs$lang$applyTo = function(arglist__8312) {
      var x = cljs.core.first(arglist__8312);
      var y = cljs.core.first(cljs.core.next(arglist__8312));
      var more = cljs.core.rest(cljs.core.next(arglist__8312));
      return G__8311__delegate(x, y, more)
    };
    G__8311.cljs$lang$arity$variadic = G__8311__delegate;
    return G__8311
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__8313__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__8313 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8313__delegate.call(this, x, y, more)
    };
    G__8313.cljs$lang$maxFixedArity = 2;
    G__8313.cljs$lang$applyTo = function(arglist__8314) {
      var x = cljs.core.first(arglist__8314);
      var y = cljs.core.first(cljs.core.next(arglist__8314));
      var more = cljs.core.rest(cljs.core.next(arglist__8314));
      return G__8313__delegate(x, y, more)
    };
    G__8313.cljs$lang$arity$variadic = G__8313__delegate;
    return G__8313
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__8315__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__8316 = y;
            var G__8317 = cljs.core.first.call(null, more);
            var G__8318 = cljs.core.next.call(null, more);
            x = G__8316;
            y = G__8317;
            more = G__8318;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8315 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8315__delegate.call(this, x, y, more)
    };
    G__8315.cljs$lang$maxFixedArity = 2;
    G__8315.cljs$lang$applyTo = function(arglist__8319) {
      var x = cljs.core.first(arglist__8319);
      var y = cljs.core.first(cljs.core.next(arglist__8319));
      var more = cljs.core.rest(cljs.core.next(arglist__8319));
      return G__8315__delegate(x, y, more)
    };
    G__8315.cljs$lang$arity$variadic = G__8315__delegate;
    return G__8315
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__8320__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8321 = y;
            var G__8322 = cljs.core.first.call(null, more);
            var G__8323 = cljs.core.next.call(null, more);
            x = G__8321;
            y = G__8322;
            more = G__8323;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8320 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8320__delegate.call(this, x, y, more)
    };
    G__8320.cljs$lang$maxFixedArity = 2;
    G__8320.cljs$lang$applyTo = function(arglist__8324) {
      var x = cljs.core.first(arglist__8324);
      var y = cljs.core.first(cljs.core.next(arglist__8324));
      var more = cljs.core.rest(cljs.core.next(arglist__8324));
      return G__8320__delegate(x, y, more)
    };
    G__8320.cljs$lang$arity$variadic = G__8320__delegate;
    return G__8320
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__8325__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__8326 = y;
            var G__8327 = cljs.core.first.call(null, more);
            var G__8328 = cljs.core.next.call(null, more);
            x = G__8326;
            y = G__8327;
            more = G__8328;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8325 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8325__delegate.call(this, x, y, more)
    };
    G__8325.cljs$lang$maxFixedArity = 2;
    G__8325.cljs$lang$applyTo = function(arglist__8329) {
      var x = cljs.core.first(arglist__8329);
      var y = cljs.core.first(cljs.core.next(arglist__8329));
      var more = cljs.core.rest(cljs.core.next(arglist__8329));
      return G__8325__delegate(x, y, more)
    };
    G__8325.cljs$lang$arity$variadic = G__8325__delegate;
    return G__8325
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__8330__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8331 = y;
            var G__8332 = cljs.core.first.call(null, more);
            var G__8333 = cljs.core.next.call(null, more);
            x = G__8331;
            y = G__8332;
            more = G__8333;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8330 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8330__delegate.call(this, x, y, more)
    };
    G__8330.cljs$lang$maxFixedArity = 2;
    G__8330.cljs$lang$applyTo = function(arglist__8334) {
      var x = cljs.core.first(arglist__8334);
      var y = cljs.core.first(cljs.core.next(arglist__8334));
      var more = cljs.core.rest(cljs.core.next(arglist__8334));
      return G__8330__delegate(x, y, more)
    };
    G__8330.cljs$lang$arity$variadic = G__8330__delegate;
    return G__8330
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__8335__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__8335 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8335__delegate.call(this, x, y, more)
    };
    G__8335.cljs$lang$maxFixedArity = 2;
    G__8335.cljs$lang$applyTo = function(arglist__8336) {
      var x = cljs.core.first(arglist__8336);
      var y = cljs.core.first(cljs.core.next(arglist__8336));
      var more = cljs.core.rest(cljs.core.next(arglist__8336));
      return G__8335__delegate(x, y, more)
    };
    G__8335.cljs$lang$arity$variadic = G__8335__delegate;
    return G__8335
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__8337__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__8337 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8337__delegate.call(this, x, y, more)
    };
    G__8337.cljs$lang$maxFixedArity = 2;
    G__8337.cljs$lang$applyTo = function(arglist__8338) {
      var x = cljs.core.first(arglist__8338);
      var y = cljs.core.first(cljs.core.next(arglist__8338));
      var more = cljs.core.rest(cljs.core.next(arglist__8338));
      return G__8337__delegate(x, y, more)
    };
    G__8337.cljs$lang$arity$variadic = G__8337__delegate;
    return G__8337
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__8340 = n % d;
  return cljs.core.fix.call(null, (n - rem__8340) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__8342 = cljs.core.quot.call(null, n, d);
  return n - d * q__8342
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__8345 = v - (v >> 1 & 1431655765);
  var v__8346 = (v__8345 & 858993459) + (v__8345 >> 2 & 858993459);
  return(v__8346 + (v__8346 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__8347__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8348 = y;
            var G__8349 = cljs.core.first.call(null, more);
            var G__8350 = cljs.core.next.call(null, more);
            x = G__8348;
            y = G__8349;
            more = G__8350;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8347 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8347__delegate.call(this, x, y, more)
    };
    G__8347.cljs$lang$maxFixedArity = 2;
    G__8347.cljs$lang$applyTo = function(arglist__8351) {
      var x = cljs.core.first(arglist__8351);
      var y = cljs.core.first(cljs.core.next(arglist__8351));
      var more = cljs.core.rest(cljs.core.next(arglist__8351));
      return G__8347__delegate(x, y, more)
    };
    G__8347.cljs$lang$arity$variadic = G__8347__delegate;
    return G__8347
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__8355 = n;
  var xs__8356 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____8357 = xs__8356;
      if(and__3822__auto____8357) {
        return n__8355 > 0
      }else {
        return and__3822__auto____8357
      }
    }())) {
      var G__8358 = n__8355 - 1;
      var G__8359 = cljs.core.next.call(null, xs__8356);
      n__8355 = G__8358;
      xs__8356 = G__8359;
      continue
    }else {
      return xs__8356
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__8360__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8361 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__8362 = cljs.core.next.call(null, more);
            sb = G__8361;
            more = G__8362;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__8360 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8360__delegate.call(this, x, ys)
    };
    G__8360.cljs$lang$maxFixedArity = 1;
    G__8360.cljs$lang$applyTo = function(arglist__8363) {
      var x = cljs.core.first(arglist__8363);
      var ys = cljs.core.rest(arglist__8363);
      return G__8360__delegate(x, ys)
    };
    G__8360.cljs$lang$arity$variadic = G__8360__delegate;
    return G__8360
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__8364__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8365 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__8366 = cljs.core.next.call(null, more);
            sb = G__8365;
            more = G__8366;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__8364 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8364__delegate.call(this, x, ys)
    };
    G__8364.cljs$lang$maxFixedArity = 1;
    G__8364.cljs$lang$applyTo = function(arglist__8367) {
      var x = cljs.core.first(arglist__8367);
      var ys = cljs.core.rest(arglist__8367);
      return G__8364__delegate(x, ys)
    };
    G__8364.cljs$lang$arity$variadic = G__8364__delegate;
    return G__8364
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__8368) {
    var fmt = cljs.core.first(arglist__8368);
    var args = cljs.core.rest(arglist__8368);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__8371 = cljs.core.seq.call(null, x);
    var ys__8372 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__8371 == null) {
        return ys__8372 == null
      }else {
        if(ys__8372 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__8371), cljs.core.first.call(null, ys__8372))) {
            var G__8373 = cljs.core.next.call(null, xs__8371);
            var G__8374 = cljs.core.next.call(null, ys__8372);
            xs__8371 = G__8373;
            ys__8372 = G__8374;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__8375_SHARP_, p2__8376_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__8375_SHARP_, cljs.core.hash.call(null, p2__8376_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__8380 = 0;
  var s__8381 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__8381) {
      var e__8382 = cljs.core.first.call(null, s__8381);
      var G__8383 = (h__8380 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__8382)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__8382)))) % 4503599627370496;
      var G__8384 = cljs.core.next.call(null, s__8381);
      h__8380 = G__8383;
      s__8381 = G__8384;
      continue
    }else {
      return h__8380
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__8388 = 0;
  var s__8389 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__8389) {
      var e__8390 = cljs.core.first.call(null, s__8389);
      var G__8391 = (h__8388 + cljs.core.hash.call(null, e__8390)) % 4503599627370496;
      var G__8392 = cljs.core.next.call(null, s__8389);
      h__8388 = G__8391;
      s__8389 = G__8392;
      continue
    }else {
      return h__8388
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__8413__8414 = cljs.core.seq.call(null, fn_map);
  if(G__8413__8414) {
    var G__8416__8418 = cljs.core.first.call(null, G__8413__8414);
    var vec__8417__8419 = G__8416__8418;
    var key_name__8420 = cljs.core.nth.call(null, vec__8417__8419, 0, null);
    var f__8421 = cljs.core.nth.call(null, vec__8417__8419, 1, null);
    var G__8413__8422 = G__8413__8414;
    var G__8416__8423 = G__8416__8418;
    var G__8413__8424 = G__8413__8422;
    while(true) {
      var vec__8425__8426 = G__8416__8423;
      var key_name__8427 = cljs.core.nth.call(null, vec__8425__8426, 0, null);
      var f__8428 = cljs.core.nth.call(null, vec__8425__8426, 1, null);
      var G__8413__8429 = G__8413__8424;
      var str_name__8430 = cljs.core.name.call(null, key_name__8427);
      obj[str_name__8430] = f__8428;
      var temp__3974__auto____8431 = cljs.core.next.call(null, G__8413__8429);
      if(temp__3974__auto____8431) {
        var G__8413__8432 = temp__3974__auto____8431;
        var G__8433 = cljs.core.first.call(null, G__8413__8432);
        var G__8434 = G__8413__8432;
        G__8416__8423 = G__8433;
        G__8413__8424 = G__8434;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8435 = this;
  var h__2192__auto____8436 = this__8435.__hash;
  if(!(h__2192__auto____8436 == null)) {
    return h__2192__auto____8436
  }else {
    var h__2192__auto____8437 = cljs.core.hash_coll.call(null, coll);
    this__8435.__hash = h__2192__auto____8437;
    return h__2192__auto____8437
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8438 = this;
  if(this__8438.count === 1) {
    return null
  }else {
    return this__8438.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8439 = this;
  return new cljs.core.List(this__8439.meta, o, coll, this__8439.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__8440 = this;
  var this__8441 = this;
  return cljs.core.pr_str.call(null, this__8441)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8442 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8443 = this;
  return this__8443.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8444 = this;
  return this__8444.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8445 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8446 = this;
  return this__8446.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8447 = this;
  if(this__8447.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__8447.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8448 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8449 = this;
  return new cljs.core.List(meta, this__8449.first, this__8449.rest, this__8449.count, this__8449.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8450 = this;
  return this__8450.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8451 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8452 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8453 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8454 = this;
  return new cljs.core.List(this__8454.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__8455 = this;
  var this__8456 = this;
  return cljs.core.pr_str.call(null, this__8456)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8457 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8458 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8459 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8460 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8461 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8462 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8463 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8464 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8465 = this;
  return this__8465.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8466 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8470__8471 = coll;
  if(G__8470__8471) {
    if(function() {
      var or__3824__auto____8472 = G__8470__8471.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____8472) {
        return or__3824__auto____8472
      }else {
        return G__8470__8471.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8470__8471.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8470__8471)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8470__8471)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8473__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8473 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8473__delegate.call(this, x, y, z, items)
    };
    G__8473.cljs$lang$maxFixedArity = 3;
    G__8473.cljs$lang$applyTo = function(arglist__8474) {
      var x = cljs.core.first(arglist__8474);
      var y = cljs.core.first(cljs.core.next(arglist__8474));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8474)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8474)));
      return G__8473__delegate(x, y, z, items)
    };
    G__8473.cljs$lang$arity$variadic = G__8473__delegate;
    return G__8473
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8475 = this;
  var h__2192__auto____8476 = this__8475.__hash;
  if(!(h__2192__auto____8476 == null)) {
    return h__2192__auto____8476
  }else {
    var h__2192__auto____8477 = cljs.core.hash_coll.call(null, coll);
    this__8475.__hash = h__2192__auto____8477;
    return h__2192__auto____8477
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8478 = this;
  if(this__8478.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8478.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8479 = this;
  return new cljs.core.Cons(null, o, coll, this__8479.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8480 = this;
  var this__8481 = this;
  return cljs.core.pr_str.call(null, this__8481)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8482 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8483 = this;
  return this__8483.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8484 = this;
  if(this__8484.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8484.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8485 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8486 = this;
  return new cljs.core.Cons(meta, this__8486.first, this__8486.rest, this__8486.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8487 = this;
  return this__8487.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8488 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8488.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____8493 = coll == null;
    if(or__3824__auto____8493) {
      return or__3824__auto____8493
    }else {
      var G__8494__8495 = coll;
      if(G__8494__8495) {
        if(function() {
          var or__3824__auto____8496 = G__8494__8495.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____8496) {
            return or__3824__auto____8496
          }else {
            return G__8494__8495.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8494__8495.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8494__8495)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8494__8495)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8500__8501 = x;
  if(G__8500__8501) {
    if(function() {
      var or__3824__auto____8502 = G__8500__8501.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____8502) {
        return or__3824__auto____8502
      }else {
        return G__8500__8501.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8500__8501.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8500__8501)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8500__8501)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8503 = null;
  var G__8503__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8503__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8503 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8503__2.call(this, string, f);
      case 3:
        return G__8503__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8503
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8504 = null;
  var G__8504__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8504__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8504 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8504__2.call(this, string, k);
      case 3:
        return G__8504__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8504
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8505 = null;
  var G__8505__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8505__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8505 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8505__2.call(this, string, n);
      case 3:
        return G__8505__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8505
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__8517 = null;
  var G__8517__2 = function(this_sym8508, coll) {
    var this__8510 = this;
    var this_sym8508__8511 = this;
    var ___8512 = this_sym8508__8511;
    if(coll == null) {
      return null
    }else {
      var strobj__8513 = coll.strobj;
      if(strobj__8513 == null) {
        return cljs.core._lookup.call(null, coll, this__8510.k, null)
      }else {
        return strobj__8513[this__8510.k]
      }
    }
  };
  var G__8517__3 = function(this_sym8509, coll, not_found) {
    var this__8510 = this;
    var this_sym8509__8514 = this;
    var ___8515 = this_sym8509__8514;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__8510.k, not_found)
    }
  };
  G__8517 = function(this_sym8509, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8517__2.call(this, this_sym8509, coll);
      case 3:
        return G__8517__3.call(this, this_sym8509, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8517
}();
cljs.core.Keyword.prototype.apply = function(this_sym8506, args8507) {
  var this__8516 = this;
  return this_sym8506.call.apply(this_sym8506, [this_sym8506].concat(args8507.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8526 = null;
  var G__8526__2 = function(this_sym8520, coll) {
    var this_sym8520__8522 = this;
    var this__8523 = this_sym8520__8522;
    return cljs.core._lookup.call(null, coll, this__8523.toString(), null)
  };
  var G__8526__3 = function(this_sym8521, coll, not_found) {
    var this_sym8521__8524 = this;
    var this__8525 = this_sym8521__8524;
    return cljs.core._lookup.call(null, coll, this__8525.toString(), not_found)
  };
  G__8526 = function(this_sym8521, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8526__2.call(this, this_sym8521, coll);
      case 3:
        return G__8526__3.call(this, this_sym8521, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8526
}();
String.prototype.apply = function(this_sym8518, args8519) {
  return this_sym8518.call.apply(this_sym8518, [this_sym8518].concat(args8519.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8528 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8528
  }else {
    lazy_seq.x = x__8528.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8529 = this;
  var h__2192__auto____8530 = this__8529.__hash;
  if(!(h__2192__auto____8530 == null)) {
    return h__2192__auto____8530
  }else {
    var h__2192__auto____8531 = cljs.core.hash_coll.call(null, coll);
    this__8529.__hash = h__2192__auto____8531;
    return h__2192__auto____8531
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8532 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8533 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8534 = this;
  var this__8535 = this;
  return cljs.core.pr_str.call(null, this__8535)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8536 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8537 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8538 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8539 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8540 = this;
  return new cljs.core.LazySeq(meta, this__8540.realized, this__8540.x, this__8540.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8541 = this;
  return this__8541.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8542 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8542.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8543 = this;
  return this__8543.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8544 = this;
  var ___8545 = this;
  this__8544.buf[this__8544.end] = o;
  return this__8544.end = this__8544.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8546 = this;
  var ___8547 = this;
  var ret__8548 = new cljs.core.ArrayChunk(this__8546.buf, 0, this__8546.end);
  this__8546.buf = null;
  return ret__8548
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8549 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__8549.arr[this__8549.off], this__8549.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8550 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__8550.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8551 = this;
  if(this__8551.off === this__8551.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8551.arr, this__8551.off + 1, this__8551.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8552 = this;
  return this__8552.arr[this__8552.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8553 = this;
  if(function() {
    var and__3822__auto____8554 = i >= 0;
    if(and__3822__auto____8554) {
      return i < this__8553.end - this__8553.off
    }else {
      return and__3822__auto____8554
    }
  }()) {
    return this__8553.arr[this__8553.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8555 = this;
  return this__8555.end - this__8555.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8556 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8557 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8558 = this;
  return cljs.core._nth.call(null, this__8558.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8559 = this;
  if(cljs.core._count.call(null, this__8559.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8559.chunk), this__8559.more, this__8559.meta)
  }else {
    if(this__8559.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8559.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8560 = this;
  if(this__8560.more == null) {
    return null
  }else {
    return this__8560.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8561 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8562 = this;
  return new cljs.core.ChunkedCons(this__8562.chunk, this__8562.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8563 = this;
  return this__8563.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8564 = this;
  return this__8564.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8565 = this;
  if(this__8565.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8565.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8569__8570 = s;
    if(G__8569__8570) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____8571 = null;
        if(cljs.core.truth_(or__3824__auto____8571)) {
          return or__3824__auto____8571
        }else {
          return G__8569__8570.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__8569__8570.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8569__8570)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8569__8570)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8574 = [];
  var s__8575 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8575)) {
      ary__8574.push(cljs.core.first.call(null, s__8575));
      var G__8576 = cljs.core.next.call(null, s__8575);
      s__8575 = G__8576;
      continue
    }else {
      return ary__8574
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8580 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8581 = 0;
  var xs__8582 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8582) {
      ret__8580[i__8581] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8582));
      var G__8583 = i__8581 + 1;
      var G__8584 = cljs.core.next.call(null, xs__8582);
      i__8581 = G__8583;
      xs__8582 = G__8584;
      continue
    }else {
    }
    break
  }
  return ret__8580
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8592 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8593 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8594 = 0;
      var s__8595 = s__8593;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8596 = s__8595;
          if(and__3822__auto____8596) {
            return i__8594 < size
          }else {
            return and__3822__auto____8596
          }
        }())) {
          a__8592[i__8594] = cljs.core.first.call(null, s__8595);
          var G__8599 = i__8594 + 1;
          var G__8600 = cljs.core.next.call(null, s__8595);
          i__8594 = G__8599;
          s__8595 = G__8600;
          continue
        }else {
          return a__8592
        }
        break
      }
    }else {
      var n__2527__auto____8597 = size;
      var i__8598 = 0;
      while(true) {
        if(i__8598 < n__2527__auto____8597) {
          a__8592[i__8598] = init_val_or_seq;
          var G__8601 = i__8598 + 1;
          i__8598 = G__8601;
          continue
        }else {
        }
        break
      }
      return a__8592
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8609 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8610 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8611 = 0;
      var s__8612 = s__8610;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8613 = s__8612;
          if(and__3822__auto____8613) {
            return i__8611 < size
          }else {
            return and__3822__auto____8613
          }
        }())) {
          a__8609[i__8611] = cljs.core.first.call(null, s__8612);
          var G__8616 = i__8611 + 1;
          var G__8617 = cljs.core.next.call(null, s__8612);
          i__8611 = G__8616;
          s__8612 = G__8617;
          continue
        }else {
          return a__8609
        }
        break
      }
    }else {
      var n__2527__auto____8614 = size;
      var i__8615 = 0;
      while(true) {
        if(i__8615 < n__2527__auto____8614) {
          a__8609[i__8615] = init_val_or_seq;
          var G__8618 = i__8615 + 1;
          i__8615 = G__8618;
          continue
        }else {
        }
        break
      }
      return a__8609
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8626 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8627 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8628 = 0;
      var s__8629 = s__8627;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____8630 = s__8629;
          if(and__3822__auto____8630) {
            return i__8628 < size
          }else {
            return and__3822__auto____8630
          }
        }())) {
          a__8626[i__8628] = cljs.core.first.call(null, s__8629);
          var G__8633 = i__8628 + 1;
          var G__8634 = cljs.core.next.call(null, s__8629);
          i__8628 = G__8633;
          s__8629 = G__8634;
          continue
        }else {
          return a__8626
        }
        break
      }
    }else {
      var n__2527__auto____8631 = size;
      var i__8632 = 0;
      while(true) {
        if(i__8632 < n__2527__auto____8631) {
          a__8626[i__8632] = init_val_or_seq;
          var G__8635 = i__8632 + 1;
          i__8632 = G__8635;
          continue
        }else {
        }
        break
      }
      return a__8626
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8640 = s;
    var i__8641 = n;
    var sum__8642 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____8643 = i__8641 > 0;
        if(and__3822__auto____8643) {
          return cljs.core.seq.call(null, s__8640)
        }else {
          return and__3822__auto____8643
        }
      }())) {
        var G__8644 = cljs.core.next.call(null, s__8640);
        var G__8645 = i__8641 - 1;
        var G__8646 = sum__8642 + 1;
        s__8640 = G__8644;
        i__8641 = G__8645;
        sum__8642 = G__8646;
        continue
      }else {
        return sum__8642
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8651 = cljs.core.seq.call(null, x);
      if(s__8651) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8651)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8651), concat.call(null, cljs.core.chunk_rest.call(null, s__8651), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8651), concat.call(null, cljs.core.rest.call(null, s__8651), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8655__delegate = function(x, y, zs) {
      var cat__8654 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8653 = cljs.core.seq.call(null, xys);
          if(xys__8653) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8653)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8653), cat.call(null, cljs.core.chunk_rest.call(null, xys__8653), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8653), cat.call(null, cljs.core.rest.call(null, xys__8653), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8654.call(null, concat.call(null, x, y), zs)
    };
    var G__8655 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8655__delegate.call(this, x, y, zs)
    };
    G__8655.cljs$lang$maxFixedArity = 2;
    G__8655.cljs$lang$applyTo = function(arglist__8656) {
      var x = cljs.core.first(arglist__8656);
      var y = cljs.core.first(cljs.core.next(arglist__8656));
      var zs = cljs.core.rest(cljs.core.next(arglist__8656));
      return G__8655__delegate(x, y, zs)
    };
    G__8655.cljs$lang$arity$variadic = G__8655__delegate;
    return G__8655
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8657__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8657 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8657__delegate.call(this, a, b, c, d, more)
    };
    G__8657.cljs$lang$maxFixedArity = 4;
    G__8657.cljs$lang$applyTo = function(arglist__8658) {
      var a = cljs.core.first(arglist__8658);
      var b = cljs.core.first(cljs.core.next(arglist__8658));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8658)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8658))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8658))));
      return G__8657__delegate(a, b, c, d, more)
    };
    G__8657.cljs$lang$arity$variadic = G__8657__delegate;
    return G__8657
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8700 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8701 = cljs.core._first.call(null, args__8700);
    var args__8702 = cljs.core._rest.call(null, args__8700);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8701)
      }else {
        return f.call(null, a__8701)
      }
    }else {
      var b__8703 = cljs.core._first.call(null, args__8702);
      var args__8704 = cljs.core._rest.call(null, args__8702);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8701, b__8703)
        }else {
          return f.call(null, a__8701, b__8703)
        }
      }else {
        var c__8705 = cljs.core._first.call(null, args__8704);
        var args__8706 = cljs.core._rest.call(null, args__8704);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8701, b__8703, c__8705)
          }else {
            return f.call(null, a__8701, b__8703, c__8705)
          }
        }else {
          var d__8707 = cljs.core._first.call(null, args__8706);
          var args__8708 = cljs.core._rest.call(null, args__8706);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8701, b__8703, c__8705, d__8707)
            }else {
              return f.call(null, a__8701, b__8703, c__8705, d__8707)
            }
          }else {
            var e__8709 = cljs.core._first.call(null, args__8708);
            var args__8710 = cljs.core._rest.call(null, args__8708);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8701, b__8703, c__8705, d__8707, e__8709)
              }else {
                return f.call(null, a__8701, b__8703, c__8705, d__8707, e__8709)
              }
            }else {
              var f__8711 = cljs.core._first.call(null, args__8710);
              var args__8712 = cljs.core._rest.call(null, args__8710);
              if(argc === 6) {
                if(f__8711.cljs$lang$arity$6) {
                  return f__8711.cljs$lang$arity$6(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711)
                }else {
                  return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711)
                }
              }else {
                var g__8713 = cljs.core._first.call(null, args__8712);
                var args__8714 = cljs.core._rest.call(null, args__8712);
                if(argc === 7) {
                  if(f__8711.cljs$lang$arity$7) {
                    return f__8711.cljs$lang$arity$7(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713)
                  }else {
                    return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713)
                  }
                }else {
                  var h__8715 = cljs.core._first.call(null, args__8714);
                  var args__8716 = cljs.core._rest.call(null, args__8714);
                  if(argc === 8) {
                    if(f__8711.cljs$lang$arity$8) {
                      return f__8711.cljs$lang$arity$8(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715)
                    }else {
                      return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715)
                    }
                  }else {
                    var i__8717 = cljs.core._first.call(null, args__8716);
                    var args__8718 = cljs.core._rest.call(null, args__8716);
                    if(argc === 9) {
                      if(f__8711.cljs$lang$arity$9) {
                        return f__8711.cljs$lang$arity$9(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717)
                      }else {
                        return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717)
                      }
                    }else {
                      var j__8719 = cljs.core._first.call(null, args__8718);
                      var args__8720 = cljs.core._rest.call(null, args__8718);
                      if(argc === 10) {
                        if(f__8711.cljs$lang$arity$10) {
                          return f__8711.cljs$lang$arity$10(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719)
                        }else {
                          return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719)
                        }
                      }else {
                        var k__8721 = cljs.core._first.call(null, args__8720);
                        var args__8722 = cljs.core._rest.call(null, args__8720);
                        if(argc === 11) {
                          if(f__8711.cljs$lang$arity$11) {
                            return f__8711.cljs$lang$arity$11(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721)
                          }else {
                            return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721)
                          }
                        }else {
                          var l__8723 = cljs.core._first.call(null, args__8722);
                          var args__8724 = cljs.core._rest.call(null, args__8722);
                          if(argc === 12) {
                            if(f__8711.cljs$lang$arity$12) {
                              return f__8711.cljs$lang$arity$12(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723)
                            }else {
                              return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723)
                            }
                          }else {
                            var m__8725 = cljs.core._first.call(null, args__8724);
                            var args__8726 = cljs.core._rest.call(null, args__8724);
                            if(argc === 13) {
                              if(f__8711.cljs$lang$arity$13) {
                                return f__8711.cljs$lang$arity$13(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725)
                              }else {
                                return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725)
                              }
                            }else {
                              var n__8727 = cljs.core._first.call(null, args__8726);
                              var args__8728 = cljs.core._rest.call(null, args__8726);
                              if(argc === 14) {
                                if(f__8711.cljs$lang$arity$14) {
                                  return f__8711.cljs$lang$arity$14(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727)
                                }else {
                                  return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727)
                                }
                              }else {
                                var o__8729 = cljs.core._first.call(null, args__8728);
                                var args__8730 = cljs.core._rest.call(null, args__8728);
                                if(argc === 15) {
                                  if(f__8711.cljs$lang$arity$15) {
                                    return f__8711.cljs$lang$arity$15(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729)
                                  }else {
                                    return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729)
                                  }
                                }else {
                                  var p__8731 = cljs.core._first.call(null, args__8730);
                                  var args__8732 = cljs.core._rest.call(null, args__8730);
                                  if(argc === 16) {
                                    if(f__8711.cljs$lang$arity$16) {
                                      return f__8711.cljs$lang$arity$16(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729, p__8731)
                                    }else {
                                      return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729, p__8731)
                                    }
                                  }else {
                                    var q__8733 = cljs.core._first.call(null, args__8732);
                                    var args__8734 = cljs.core._rest.call(null, args__8732);
                                    if(argc === 17) {
                                      if(f__8711.cljs$lang$arity$17) {
                                        return f__8711.cljs$lang$arity$17(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729, p__8731, q__8733)
                                      }else {
                                        return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729, p__8731, q__8733)
                                      }
                                    }else {
                                      var r__8735 = cljs.core._first.call(null, args__8734);
                                      var args__8736 = cljs.core._rest.call(null, args__8734);
                                      if(argc === 18) {
                                        if(f__8711.cljs$lang$arity$18) {
                                          return f__8711.cljs$lang$arity$18(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729, p__8731, q__8733, r__8735)
                                        }else {
                                          return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729, p__8731, q__8733, r__8735)
                                        }
                                      }else {
                                        var s__8737 = cljs.core._first.call(null, args__8736);
                                        var args__8738 = cljs.core._rest.call(null, args__8736);
                                        if(argc === 19) {
                                          if(f__8711.cljs$lang$arity$19) {
                                            return f__8711.cljs$lang$arity$19(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729, p__8731, q__8733, r__8735, s__8737)
                                          }else {
                                            return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729, p__8731, q__8733, r__8735, s__8737)
                                          }
                                        }else {
                                          var t__8739 = cljs.core._first.call(null, args__8738);
                                          var args__8740 = cljs.core._rest.call(null, args__8738);
                                          if(argc === 20) {
                                            if(f__8711.cljs$lang$arity$20) {
                                              return f__8711.cljs$lang$arity$20(a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729, p__8731, q__8733, r__8735, s__8737, t__8739)
                                            }else {
                                              return f__8711.call(null, a__8701, b__8703, c__8705, d__8707, e__8709, f__8711, g__8713, h__8715, i__8717, j__8719, k__8721, l__8723, m__8725, n__8727, o__8729, p__8731, q__8733, r__8735, s__8737, t__8739)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__8755 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8756 = cljs.core.bounded_count.call(null, args, fixed_arity__8755 + 1);
      if(bc__8756 <= fixed_arity__8755) {
        return cljs.core.apply_to.call(null, f, bc__8756, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__8757 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__8758 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8759 = cljs.core.bounded_count.call(null, arglist__8757, fixed_arity__8758 + 1);
      if(bc__8759 <= fixed_arity__8758) {
        return cljs.core.apply_to.call(null, f, bc__8759, arglist__8757)
      }else {
        return f.cljs$lang$applyTo(arglist__8757)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8757))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__8760 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__8761 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8762 = cljs.core.bounded_count.call(null, arglist__8760, fixed_arity__8761 + 1);
      if(bc__8762 <= fixed_arity__8761) {
        return cljs.core.apply_to.call(null, f, bc__8762, arglist__8760)
      }else {
        return f.cljs$lang$applyTo(arglist__8760)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8760))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__8763 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__8764 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8765 = cljs.core.bounded_count.call(null, arglist__8763, fixed_arity__8764 + 1);
      if(bc__8765 <= fixed_arity__8764) {
        return cljs.core.apply_to.call(null, f, bc__8765, arglist__8763)
      }else {
        return f.cljs$lang$applyTo(arglist__8763)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8763))
    }
  };
  var apply__6 = function() {
    var G__8769__delegate = function(f, a, b, c, d, args) {
      var arglist__8766 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__8767 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__8768 = cljs.core.bounded_count.call(null, arglist__8766, fixed_arity__8767 + 1);
        if(bc__8768 <= fixed_arity__8767) {
          return cljs.core.apply_to.call(null, f, bc__8768, arglist__8766)
        }else {
          return f.cljs$lang$applyTo(arglist__8766)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__8766))
      }
    };
    var G__8769 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__8769__delegate.call(this, f, a, b, c, d, args)
    };
    G__8769.cljs$lang$maxFixedArity = 5;
    G__8769.cljs$lang$applyTo = function(arglist__8770) {
      var f = cljs.core.first(arglist__8770);
      var a = cljs.core.first(cljs.core.next(arglist__8770));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8770)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8770))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8770)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8770)))));
      return G__8769__delegate(f, a, b, c, d, args)
    };
    G__8769.cljs$lang$arity$variadic = G__8769__delegate;
    return G__8769
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__8771) {
    var obj = cljs.core.first(arglist__8771);
    var f = cljs.core.first(cljs.core.next(arglist__8771));
    var args = cljs.core.rest(cljs.core.next(arglist__8771));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__8772__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__8772 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8772__delegate.call(this, x, y, more)
    };
    G__8772.cljs$lang$maxFixedArity = 2;
    G__8772.cljs$lang$applyTo = function(arglist__8773) {
      var x = cljs.core.first(arglist__8773);
      var y = cljs.core.first(cljs.core.next(arglist__8773));
      var more = cljs.core.rest(cljs.core.next(arglist__8773));
      return G__8772__delegate(x, y, more)
    };
    G__8772.cljs$lang$arity$variadic = G__8772__delegate;
    return G__8772
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__8774 = pred;
        var G__8775 = cljs.core.next.call(null, coll);
        pred = G__8774;
        coll = G__8775;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____8777 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____8777)) {
        return or__3824__auto____8777
      }else {
        var G__8778 = pred;
        var G__8779 = cljs.core.next.call(null, coll);
        pred = G__8778;
        coll = G__8779;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__8780 = null;
    var G__8780__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__8780__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__8780__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__8780__3 = function() {
      var G__8781__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__8781 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__8781__delegate.call(this, x, y, zs)
      };
      G__8781.cljs$lang$maxFixedArity = 2;
      G__8781.cljs$lang$applyTo = function(arglist__8782) {
        var x = cljs.core.first(arglist__8782);
        var y = cljs.core.first(cljs.core.next(arglist__8782));
        var zs = cljs.core.rest(cljs.core.next(arglist__8782));
        return G__8781__delegate(x, y, zs)
      };
      G__8781.cljs$lang$arity$variadic = G__8781__delegate;
      return G__8781
    }();
    G__8780 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8780__0.call(this);
        case 1:
          return G__8780__1.call(this, x);
        case 2:
          return G__8780__2.call(this, x, y);
        default:
          return G__8780__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__8780.cljs$lang$maxFixedArity = 2;
    G__8780.cljs$lang$applyTo = G__8780__3.cljs$lang$applyTo;
    return G__8780
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__8783__delegate = function(args) {
      return x
    };
    var G__8783 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8783__delegate.call(this, args)
    };
    G__8783.cljs$lang$maxFixedArity = 0;
    G__8783.cljs$lang$applyTo = function(arglist__8784) {
      var args = cljs.core.seq(arglist__8784);
      return G__8783__delegate(args)
    };
    G__8783.cljs$lang$arity$variadic = G__8783__delegate;
    return G__8783
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__8791 = null;
      var G__8791__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__8791__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__8791__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__8791__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__8791__4 = function() {
        var G__8792__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__8792 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8792__delegate.call(this, x, y, z, args)
        };
        G__8792.cljs$lang$maxFixedArity = 3;
        G__8792.cljs$lang$applyTo = function(arglist__8793) {
          var x = cljs.core.first(arglist__8793);
          var y = cljs.core.first(cljs.core.next(arglist__8793));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8793)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8793)));
          return G__8792__delegate(x, y, z, args)
        };
        G__8792.cljs$lang$arity$variadic = G__8792__delegate;
        return G__8792
      }();
      G__8791 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8791__0.call(this);
          case 1:
            return G__8791__1.call(this, x);
          case 2:
            return G__8791__2.call(this, x, y);
          case 3:
            return G__8791__3.call(this, x, y, z);
          default:
            return G__8791__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8791.cljs$lang$maxFixedArity = 3;
      G__8791.cljs$lang$applyTo = G__8791__4.cljs$lang$applyTo;
      return G__8791
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__8794 = null;
      var G__8794__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__8794__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__8794__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__8794__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__8794__4 = function() {
        var G__8795__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__8795 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8795__delegate.call(this, x, y, z, args)
        };
        G__8795.cljs$lang$maxFixedArity = 3;
        G__8795.cljs$lang$applyTo = function(arglist__8796) {
          var x = cljs.core.first(arglist__8796);
          var y = cljs.core.first(cljs.core.next(arglist__8796));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8796)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8796)));
          return G__8795__delegate(x, y, z, args)
        };
        G__8795.cljs$lang$arity$variadic = G__8795__delegate;
        return G__8795
      }();
      G__8794 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8794__0.call(this);
          case 1:
            return G__8794__1.call(this, x);
          case 2:
            return G__8794__2.call(this, x, y);
          case 3:
            return G__8794__3.call(this, x, y, z);
          default:
            return G__8794__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8794.cljs$lang$maxFixedArity = 3;
      G__8794.cljs$lang$applyTo = G__8794__4.cljs$lang$applyTo;
      return G__8794
    }()
  };
  var comp__4 = function() {
    var G__8797__delegate = function(f1, f2, f3, fs) {
      var fs__8788 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__8798__delegate = function(args) {
          var ret__8789 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__8788), args);
          var fs__8790 = cljs.core.next.call(null, fs__8788);
          while(true) {
            if(fs__8790) {
              var G__8799 = cljs.core.first.call(null, fs__8790).call(null, ret__8789);
              var G__8800 = cljs.core.next.call(null, fs__8790);
              ret__8789 = G__8799;
              fs__8790 = G__8800;
              continue
            }else {
              return ret__8789
            }
            break
          }
        };
        var G__8798 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8798__delegate.call(this, args)
        };
        G__8798.cljs$lang$maxFixedArity = 0;
        G__8798.cljs$lang$applyTo = function(arglist__8801) {
          var args = cljs.core.seq(arglist__8801);
          return G__8798__delegate(args)
        };
        G__8798.cljs$lang$arity$variadic = G__8798__delegate;
        return G__8798
      }()
    };
    var G__8797 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8797__delegate.call(this, f1, f2, f3, fs)
    };
    G__8797.cljs$lang$maxFixedArity = 3;
    G__8797.cljs$lang$applyTo = function(arglist__8802) {
      var f1 = cljs.core.first(arglist__8802);
      var f2 = cljs.core.first(cljs.core.next(arglist__8802));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8802)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8802)));
      return G__8797__delegate(f1, f2, f3, fs)
    };
    G__8797.cljs$lang$arity$variadic = G__8797__delegate;
    return G__8797
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__8803__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__8803 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8803__delegate.call(this, args)
      };
      G__8803.cljs$lang$maxFixedArity = 0;
      G__8803.cljs$lang$applyTo = function(arglist__8804) {
        var args = cljs.core.seq(arglist__8804);
        return G__8803__delegate(args)
      };
      G__8803.cljs$lang$arity$variadic = G__8803__delegate;
      return G__8803
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__8805__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__8805 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8805__delegate.call(this, args)
      };
      G__8805.cljs$lang$maxFixedArity = 0;
      G__8805.cljs$lang$applyTo = function(arglist__8806) {
        var args = cljs.core.seq(arglist__8806);
        return G__8805__delegate(args)
      };
      G__8805.cljs$lang$arity$variadic = G__8805__delegate;
      return G__8805
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__8807__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__8807 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8807__delegate.call(this, args)
      };
      G__8807.cljs$lang$maxFixedArity = 0;
      G__8807.cljs$lang$applyTo = function(arglist__8808) {
        var args = cljs.core.seq(arglist__8808);
        return G__8807__delegate(args)
      };
      G__8807.cljs$lang$arity$variadic = G__8807__delegate;
      return G__8807
    }()
  };
  var partial__5 = function() {
    var G__8809__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__8810__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__8810 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8810__delegate.call(this, args)
        };
        G__8810.cljs$lang$maxFixedArity = 0;
        G__8810.cljs$lang$applyTo = function(arglist__8811) {
          var args = cljs.core.seq(arglist__8811);
          return G__8810__delegate(args)
        };
        G__8810.cljs$lang$arity$variadic = G__8810__delegate;
        return G__8810
      }()
    };
    var G__8809 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8809__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__8809.cljs$lang$maxFixedArity = 4;
    G__8809.cljs$lang$applyTo = function(arglist__8812) {
      var f = cljs.core.first(arglist__8812);
      var arg1 = cljs.core.first(cljs.core.next(arglist__8812));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8812)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8812))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8812))));
      return G__8809__delegate(f, arg1, arg2, arg3, more)
    };
    G__8809.cljs$lang$arity$variadic = G__8809__delegate;
    return G__8809
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__8813 = null;
      var G__8813__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__8813__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__8813__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__8813__4 = function() {
        var G__8814__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__8814 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8814__delegate.call(this, a, b, c, ds)
        };
        G__8814.cljs$lang$maxFixedArity = 3;
        G__8814.cljs$lang$applyTo = function(arglist__8815) {
          var a = cljs.core.first(arglist__8815);
          var b = cljs.core.first(cljs.core.next(arglist__8815));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8815)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8815)));
          return G__8814__delegate(a, b, c, ds)
        };
        G__8814.cljs$lang$arity$variadic = G__8814__delegate;
        return G__8814
      }();
      G__8813 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__8813__1.call(this, a);
          case 2:
            return G__8813__2.call(this, a, b);
          case 3:
            return G__8813__3.call(this, a, b, c);
          default:
            return G__8813__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8813.cljs$lang$maxFixedArity = 3;
      G__8813.cljs$lang$applyTo = G__8813__4.cljs$lang$applyTo;
      return G__8813
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__8816 = null;
      var G__8816__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8816__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__8816__4 = function() {
        var G__8817__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__8817 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8817__delegate.call(this, a, b, c, ds)
        };
        G__8817.cljs$lang$maxFixedArity = 3;
        G__8817.cljs$lang$applyTo = function(arglist__8818) {
          var a = cljs.core.first(arglist__8818);
          var b = cljs.core.first(cljs.core.next(arglist__8818));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8818)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8818)));
          return G__8817__delegate(a, b, c, ds)
        };
        G__8817.cljs$lang$arity$variadic = G__8817__delegate;
        return G__8817
      }();
      G__8816 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8816__2.call(this, a, b);
          case 3:
            return G__8816__3.call(this, a, b, c);
          default:
            return G__8816__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8816.cljs$lang$maxFixedArity = 3;
      G__8816.cljs$lang$applyTo = G__8816__4.cljs$lang$applyTo;
      return G__8816
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__8819 = null;
      var G__8819__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8819__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__8819__4 = function() {
        var G__8820__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__8820 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8820__delegate.call(this, a, b, c, ds)
        };
        G__8820.cljs$lang$maxFixedArity = 3;
        G__8820.cljs$lang$applyTo = function(arglist__8821) {
          var a = cljs.core.first(arglist__8821);
          var b = cljs.core.first(cljs.core.next(arglist__8821));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8821)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8821)));
          return G__8820__delegate(a, b, c, ds)
        };
        G__8820.cljs$lang$arity$variadic = G__8820__delegate;
        return G__8820
      }();
      G__8819 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8819__2.call(this, a, b);
          case 3:
            return G__8819__3.call(this, a, b, c);
          default:
            return G__8819__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8819.cljs$lang$maxFixedArity = 3;
      G__8819.cljs$lang$applyTo = G__8819__4.cljs$lang$applyTo;
      return G__8819
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__8837 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8845 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8845) {
        var s__8846 = temp__3974__auto____8845;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8846)) {
          var c__8847 = cljs.core.chunk_first.call(null, s__8846);
          var size__8848 = cljs.core.count.call(null, c__8847);
          var b__8849 = cljs.core.chunk_buffer.call(null, size__8848);
          var n__2527__auto____8850 = size__8848;
          var i__8851 = 0;
          while(true) {
            if(i__8851 < n__2527__auto____8850) {
              cljs.core.chunk_append.call(null, b__8849, f.call(null, idx + i__8851, cljs.core._nth.call(null, c__8847, i__8851)));
              var G__8852 = i__8851 + 1;
              i__8851 = G__8852;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8849), mapi.call(null, idx + size__8848, cljs.core.chunk_rest.call(null, s__8846)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__8846)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__8846)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__8837.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____8862 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____8862) {
      var s__8863 = temp__3974__auto____8862;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8863)) {
        var c__8864 = cljs.core.chunk_first.call(null, s__8863);
        var size__8865 = cljs.core.count.call(null, c__8864);
        var b__8866 = cljs.core.chunk_buffer.call(null, size__8865);
        var n__2527__auto____8867 = size__8865;
        var i__8868 = 0;
        while(true) {
          if(i__8868 < n__2527__auto____8867) {
            var x__8869 = f.call(null, cljs.core._nth.call(null, c__8864, i__8868));
            if(x__8869 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__8866, x__8869)
            }
            var G__8871 = i__8868 + 1;
            i__8868 = G__8871;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8866), keep.call(null, f, cljs.core.chunk_rest.call(null, s__8863)))
      }else {
        var x__8870 = f.call(null, cljs.core.first.call(null, s__8863));
        if(x__8870 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__8863))
        }else {
          return cljs.core.cons.call(null, x__8870, keep.call(null, f, cljs.core.rest.call(null, s__8863)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__8897 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____8907 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____8907) {
        var s__8908 = temp__3974__auto____8907;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8908)) {
          var c__8909 = cljs.core.chunk_first.call(null, s__8908);
          var size__8910 = cljs.core.count.call(null, c__8909);
          var b__8911 = cljs.core.chunk_buffer.call(null, size__8910);
          var n__2527__auto____8912 = size__8910;
          var i__8913 = 0;
          while(true) {
            if(i__8913 < n__2527__auto____8912) {
              var x__8914 = f.call(null, idx + i__8913, cljs.core._nth.call(null, c__8909, i__8913));
              if(x__8914 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__8911, x__8914)
              }
              var G__8916 = i__8913 + 1;
              i__8913 = G__8916;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8911), keepi.call(null, idx + size__8910, cljs.core.chunk_rest.call(null, s__8908)))
        }else {
          var x__8915 = f.call(null, idx, cljs.core.first.call(null, s__8908));
          if(x__8915 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8908))
          }else {
            return cljs.core.cons.call(null, x__8915, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8908)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__8897.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9002 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9002)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____9002
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9003 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9003)) {
            var and__3822__auto____9004 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9004)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____9004
            }
          }else {
            return and__3822__auto____9003
          }
        }())
      };
      var ep1__4 = function() {
        var G__9073__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9005 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9005)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____9005
            }
          }())
        };
        var G__9073 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9073__delegate.call(this, x, y, z, args)
        };
        G__9073.cljs$lang$maxFixedArity = 3;
        G__9073.cljs$lang$applyTo = function(arglist__9074) {
          var x = cljs.core.first(arglist__9074);
          var y = cljs.core.first(cljs.core.next(arglist__9074));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9074)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9074)));
          return G__9073__delegate(x, y, z, args)
        };
        G__9073.cljs$lang$arity$variadic = G__9073__delegate;
        return G__9073
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9017 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9017)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____9017
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9018 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9018)) {
            var and__3822__auto____9019 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9019)) {
              var and__3822__auto____9020 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9020)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____9020
              }
            }else {
              return and__3822__auto____9019
            }
          }else {
            return and__3822__auto____9018
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9021 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9021)) {
            var and__3822__auto____9022 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9022)) {
              var and__3822__auto____9023 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____9023)) {
                var and__3822__auto____9024 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____9024)) {
                  var and__3822__auto____9025 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9025)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____9025
                  }
                }else {
                  return and__3822__auto____9024
                }
              }else {
                return and__3822__auto____9023
              }
            }else {
              return and__3822__auto____9022
            }
          }else {
            return and__3822__auto____9021
          }
        }())
      };
      var ep2__4 = function() {
        var G__9075__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9026 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9026)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8872_SHARP_) {
                var and__3822__auto____9027 = p1.call(null, p1__8872_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9027)) {
                  return p2.call(null, p1__8872_SHARP_)
                }else {
                  return and__3822__auto____9027
                }
              }, args)
            }else {
              return and__3822__auto____9026
            }
          }())
        };
        var G__9075 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9075__delegate.call(this, x, y, z, args)
        };
        G__9075.cljs$lang$maxFixedArity = 3;
        G__9075.cljs$lang$applyTo = function(arglist__9076) {
          var x = cljs.core.first(arglist__9076);
          var y = cljs.core.first(cljs.core.next(arglist__9076));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9076)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9076)));
          return G__9075__delegate(x, y, z, args)
        };
        G__9075.cljs$lang$arity$variadic = G__9075__delegate;
        return G__9075
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9046 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9046)) {
            var and__3822__auto____9047 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9047)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____9047
            }
          }else {
            return and__3822__auto____9046
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9048 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9048)) {
            var and__3822__auto____9049 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9049)) {
              var and__3822__auto____9050 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9050)) {
                var and__3822__auto____9051 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9051)) {
                  var and__3822__auto____9052 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9052)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____9052
                  }
                }else {
                  return and__3822__auto____9051
                }
              }else {
                return and__3822__auto____9050
              }
            }else {
              return and__3822__auto____9049
            }
          }else {
            return and__3822__auto____9048
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9053 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9053)) {
            var and__3822__auto____9054 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9054)) {
              var and__3822__auto____9055 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9055)) {
                var and__3822__auto____9056 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____9056)) {
                  var and__3822__auto____9057 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9057)) {
                    var and__3822__auto____9058 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____9058)) {
                      var and__3822__auto____9059 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____9059)) {
                        var and__3822__auto____9060 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____9060)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____9060
                        }
                      }else {
                        return and__3822__auto____9059
                      }
                    }else {
                      return and__3822__auto____9058
                    }
                  }else {
                    return and__3822__auto____9057
                  }
                }else {
                  return and__3822__auto____9056
                }
              }else {
                return and__3822__auto____9055
              }
            }else {
              return and__3822__auto____9054
            }
          }else {
            return and__3822__auto____9053
          }
        }())
      };
      var ep3__4 = function() {
        var G__9077__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9061 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9061)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8873_SHARP_) {
                var and__3822__auto____9062 = p1.call(null, p1__8873_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9062)) {
                  var and__3822__auto____9063 = p2.call(null, p1__8873_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____9063)) {
                    return p3.call(null, p1__8873_SHARP_)
                  }else {
                    return and__3822__auto____9063
                  }
                }else {
                  return and__3822__auto____9062
                }
              }, args)
            }else {
              return and__3822__auto____9061
            }
          }())
        };
        var G__9077 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9077__delegate.call(this, x, y, z, args)
        };
        G__9077.cljs$lang$maxFixedArity = 3;
        G__9077.cljs$lang$applyTo = function(arglist__9078) {
          var x = cljs.core.first(arglist__9078);
          var y = cljs.core.first(cljs.core.next(arglist__9078));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9078)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9078)));
          return G__9077__delegate(x, y, z, args)
        };
        G__9077.cljs$lang$arity$variadic = G__9077__delegate;
        return G__9077
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__9079__delegate = function(p1, p2, p3, ps) {
      var ps__9064 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__8874_SHARP_) {
            return p1__8874_SHARP_.call(null, x)
          }, ps__9064)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__8875_SHARP_) {
            var and__3822__auto____9069 = p1__8875_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9069)) {
              return p1__8875_SHARP_.call(null, y)
            }else {
              return and__3822__auto____9069
            }
          }, ps__9064)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__8876_SHARP_) {
            var and__3822__auto____9070 = p1__8876_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____9070)) {
              var and__3822__auto____9071 = p1__8876_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____9071)) {
                return p1__8876_SHARP_.call(null, z)
              }else {
                return and__3822__auto____9071
              }
            }else {
              return and__3822__auto____9070
            }
          }, ps__9064)
        };
        var epn__4 = function() {
          var G__9080__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____9072 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____9072)) {
                return cljs.core.every_QMARK_.call(null, function(p1__8877_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__8877_SHARP_, args)
                }, ps__9064)
              }else {
                return and__3822__auto____9072
              }
            }())
          };
          var G__9080 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9080__delegate.call(this, x, y, z, args)
          };
          G__9080.cljs$lang$maxFixedArity = 3;
          G__9080.cljs$lang$applyTo = function(arglist__9081) {
            var x = cljs.core.first(arglist__9081);
            var y = cljs.core.first(cljs.core.next(arglist__9081));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9081)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9081)));
            return G__9080__delegate(x, y, z, args)
          };
          G__9080.cljs$lang$arity$variadic = G__9080__delegate;
          return G__9080
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__9079 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9079__delegate.call(this, p1, p2, p3, ps)
    };
    G__9079.cljs$lang$maxFixedArity = 3;
    G__9079.cljs$lang$applyTo = function(arglist__9082) {
      var p1 = cljs.core.first(arglist__9082);
      var p2 = cljs.core.first(cljs.core.next(arglist__9082));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9082)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9082)));
      return G__9079__delegate(p1, p2, p3, ps)
    };
    G__9079.cljs$lang$arity$variadic = G__9079__delegate;
    return G__9079
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____9163 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9163)) {
          return or__3824__auto____9163
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____9164 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9164)) {
          return or__3824__auto____9164
        }else {
          var or__3824__auto____9165 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9165)) {
            return or__3824__auto____9165
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__9234__delegate = function(x, y, z, args) {
          var or__3824__auto____9166 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9166)) {
            return or__3824__auto____9166
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__9234 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9234__delegate.call(this, x, y, z, args)
        };
        G__9234.cljs$lang$maxFixedArity = 3;
        G__9234.cljs$lang$applyTo = function(arglist__9235) {
          var x = cljs.core.first(arglist__9235);
          var y = cljs.core.first(cljs.core.next(arglist__9235));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9235)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9235)));
          return G__9234__delegate(x, y, z, args)
        };
        G__9234.cljs$lang$arity$variadic = G__9234__delegate;
        return G__9234
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____9178 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9178)) {
          return or__3824__auto____9178
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____9179 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9179)) {
          return or__3824__auto____9179
        }else {
          var or__3824__auto____9180 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9180)) {
            return or__3824__auto____9180
          }else {
            var or__3824__auto____9181 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9181)) {
              return or__3824__auto____9181
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____9182 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9182)) {
          return or__3824__auto____9182
        }else {
          var or__3824__auto____9183 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____9183)) {
            return or__3824__auto____9183
          }else {
            var or__3824__auto____9184 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____9184)) {
              return or__3824__auto____9184
            }else {
              var or__3824__auto____9185 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____9185)) {
                return or__3824__auto____9185
              }else {
                var or__3824__auto____9186 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9186)) {
                  return or__3824__auto____9186
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9236__delegate = function(x, y, z, args) {
          var or__3824__auto____9187 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9187)) {
            return or__3824__auto____9187
          }else {
            return cljs.core.some.call(null, function(p1__8917_SHARP_) {
              var or__3824__auto____9188 = p1.call(null, p1__8917_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9188)) {
                return or__3824__auto____9188
              }else {
                return p2.call(null, p1__8917_SHARP_)
              }
            }, args)
          }
        };
        var G__9236 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9236__delegate.call(this, x, y, z, args)
        };
        G__9236.cljs$lang$maxFixedArity = 3;
        G__9236.cljs$lang$applyTo = function(arglist__9237) {
          var x = cljs.core.first(arglist__9237);
          var y = cljs.core.first(cljs.core.next(arglist__9237));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9237)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9237)));
          return G__9236__delegate(x, y, z, args)
        };
        G__9236.cljs$lang$arity$variadic = G__9236__delegate;
        return G__9236
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____9207 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9207)) {
          return or__3824__auto____9207
        }else {
          var or__3824__auto____9208 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9208)) {
            return or__3824__auto____9208
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____9209 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9209)) {
          return or__3824__auto____9209
        }else {
          var or__3824__auto____9210 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9210)) {
            return or__3824__auto____9210
          }else {
            var or__3824__auto____9211 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9211)) {
              return or__3824__auto____9211
            }else {
              var or__3824__auto____9212 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9212)) {
                return or__3824__auto____9212
              }else {
                var or__3824__auto____9213 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9213)) {
                  return or__3824__auto____9213
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____9214 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____9214)) {
          return or__3824__auto____9214
        }else {
          var or__3824__auto____9215 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____9215)) {
            return or__3824__auto____9215
          }else {
            var or__3824__auto____9216 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9216)) {
              return or__3824__auto____9216
            }else {
              var or__3824__auto____9217 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9217)) {
                return or__3824__auto____9217
              }else {
                var or__3824__auto____9218 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____9218)) {
                  return or__3824__auto____9218
                }else {
                  var or__3824__auto____9219 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____9219)) {
                    return or__3824__auto____9219
                  }else {
                    var or__3824__auto____9220 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____9220)) {
                      return or__3824__auto____9220
                    }else {
                      var or__3824__auto____9221 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____9221)) {
                        return or__3824__auto____9221
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9238__delegate = function(x, y, z, args) {
          var or__3824__auto____9222 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____9222)) {
            return or__3824__auto____9222
          }else {
            return cljs.core.some.call(null, function(p1__8918_SHARP_) {
              var or__3824__auto____9223 = p1.call(null, p1__8918_SHARP_);
              if(cljs.core.truth_(or__3824__auto____9223)) {
                return or__3824__auto____9223
              }else {
                var or__3824__auto____9224 = p2.call(null, p1__8918_SHARP_);
                if(cljs.core.truth_(or__3824__auto____9224)) {
                  return or__3824__auto____9224
                }else {
                  return p3.call(null, p1__8918_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__9238 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9238__delegate.call(this, x, y, z, args)
        };
        G__9238.cljs$lang$maxFixedArity = 3;
        G__9238.cljs$lang$applyTo = function(arglist__9239) {
          var x = cljs.core.first(arglist__9239);
          var y = cljs.core.first(cljs.core.next(arglist__9239));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9239)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9239)));
          return G__9238__delegate(x, y, z, args)
        };
        G__9238.cljs$lang$arity$variadic = G__9238__delegate;
        return G__9238
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__9240__delegate = function(p1, p2, p3, ps) {
      var ps__9225 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__8919_SHARP_) {
            return p1__8919_SHARP_.call(null, x)
          }, ps__9225)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__8920_SHARP_) {
            var or__3824__auto____9230 = p1__8920_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9230)) {
              return or__3824__auto____9230
            }else {
              return p1__8920_SHARP_.call(null, y)
            }
          }, ps__9225)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__8921_SHARP_) {
            var or__3824__auto____9231 = p1__8921_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____9231)) {
              return or__3824__auto____9231
            }else {
              var or__3824__auto____9232 = p1__8921_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____9232)) {
                return or__3824__auto____9232
              }else {
                return p1__8921_SHARP_.call(null, z)
              }
            }
          }, ps__9225)
        };
        var spn__4 = function() {
          var G__9241__delegate = function(x, y, z, args) {
            var or__3824__auto____9233 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____9233)) {
              return or__3824__auto____9233
            }else {
              return cljs.core.some.call(null, function(p1__8922_SHARP_) {
                return cljs.core.some.call(null, p1__8922_SHARP_, args)
              }, ps__9225)
            }
          };
          var G__9241 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9241__delegate.call(this, x, y, z, args)
          };
          G__9241.cljs$lang$maxFixedArity = 3;
          G__9241.cljs$lang$applyTo = function(arglist__9242) {
            var x = cljs.core.first(arglist__9242);
            var y = cljs.core.first(cljs.core.next(arglist__9242));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9242)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9242)));
            return G__9241__delegate(x, y, z, args)
          };
          G__9241.cljs$lang$arity$variadic = G__9241__delegate;
          return G__9241
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__9240 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9240__delegate.call(this, p1, p2, p3, ps)
    };
    G__9240.cljs$lang$maxFixedArity = 3;
    G__9240.cljs$lang$applyTo = function(arglist__9243) {
      var p1 = cljs.core.first(arglist__9243);
      var p2 = cljs.core.first(cljs.core.next(arglist__9243));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9243)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9243)));
      return G__9240__delegate(p1, p2, p3, ps)
    };
    G__9240.cljs$lang$arity$variadic = G__9240__delegate;
    return G__9240
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9262 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9262) {
        var s__9263 = temp__3974__auto____9262;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9263)) {
          var c__9264 = cljs.core.chunk_first.call(null, s__9263);
          var size__9265 = cljs.core.count.call(null, c__9264);
          var b__9266 = cljs.core.chunk_buffer.call(null, size__9265);
          var n__2527__auto____9267 = size__9265;
          var i__9268 = 0;
          while(true) {
            if(i__9268 < n__2527__auto____9267) {
              cljs.core.chunk_append.call(null, b__9266, f.call(null, cljs.core._nth.call(null, c__9264, i__9268)));
              var G__9280 = i__9268 + 1;
              i__9268 = G__9280;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9266), map.call(null, f, cljs.core.chunk_rest.call(null, s__9263)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__9263)), map.call(null, f, cljs.core.rest.call(null, s__9263)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9269 = cljs.core.seq.call(null, c1);
      var s2__9270 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9271 = s1__9269;
        if(and__3822__auto____9271) {
          return s2__9270
        }else {
          return and__3822__auto____9271
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9269), cljs.core.first.call(null, s2__9270)), map.call(null, f, cljs.core.rest.call(null, s1__9269), cljs.core.rest.call(null, s2__9270)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9272 = cljs.core.seq.call(null, c1);
      var s2__9273 = cljs.core.seq.call(null, c2);
      var s3__9274 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____9275 = s1__9272;
        if(and__3822__auto____9275) {
          var and__3822__auto____9276 = s2__9273;
          if(and__3822__auto____9276) {
            return s3__9274
          }else {
            return and__3822__auto____9276
          }
        }else {
          return and__3822__auto____9275
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9272), cljs.core.first.call(null, s2__9273), cljs.core.first.call(null, s3__9274)), map.call(null, f, cljs.core.rest.call(null, s1__9272), cljs.core.rest.call(null, s2__9273), cljs.core.rest.call(null, s3__9274)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__9281__delegate = function(f, c1, c2, c3, colls) {
      var step__9279 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__9278 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9278)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__9278), step.call(null, map.call(null, cljs.core.rest, ss__9278)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__9083_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9083_SHARP_)
      }, step__9279.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__9281 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9281__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9281.cljs$lang$maxFixedArity = 4;
    G__9281.cljs$lang$applyTo = function(arglist__9282) {
      var f = cljs.core.first(arglist__9282);
      var c1 = cljs.core.first(cljs.core.next(arglist__9282));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9282)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9282))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9282))));
      return G__9281__delegate(f, c1, c2, c3, colls)
    };
    G__9281.cljs$lang$arity$variadic = G__9281__delegate;
    return G__9281
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____9285 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9285) {
        var s__9286 = temp__3974__auto____9285;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9286), take.call(null, n - 1, cljs.core.rest.call(null, s__9286)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__9292 = function(n, coll) {
    while(true) {
      var s__9290 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9291 = n > 0;
        if(and__3822__auto____9291) {
          return s__9290
        }else {
          return and__3822__auto____9291
        }
      }())) {
        var G__9293 = n - 1;
        var G__9294 = cljs.core.rest.call(null, s__9290);
        n = G__9293;
        coll = G__9294;
        continue
      }else {
        return s__9290
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9292.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__9297 = cljs.core.seq.call(null, coll);
  var lead__9298 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__9298) {
      var G__9299 = cljs.core.next.call(null, s__9297);
      var G__9300 = cljs.core.next.call(null, lead__9298);
      s__9297 = G__9299;
      lead__9298 = G__9300;
      continue
    }else {
      return s__9297
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__9306 = function(pred, coll) {
    while(true) {
      var s__9304 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____9305 = s__9304;
        if(and__3822__auto____9305) {
          return pred.call(null, cljs.core.first.call(null, s__9304))
        }else {
          return and__3822__auto____9305
        }
      }())) {
        var G__9307 = pred;
        var G__9308 = cljs.core.rest.call(null, s__9304);
        pred = G__9307;
        coll = G__9308;
        continue
      }else {
        return s__9304
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9306.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9311 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9311) {
      var s__9312 = temp__3974__auto____9311;
      return cljs.core.concat.call(null, s__9312, cycle.call(null, s__9312))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9317 = cljs.core.seq.call(null, c1);
      var s2__9318 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____9319 = s1__9317;
        if(and__3822__auto____9319) {
          return s2__9318
        }else {
          return and__3822__auto____9319
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__9317), cljs.core.cons.call(null, cljs.core.first.call(null, s2__9318), interleave.call(null, cljs.core.rest.call(null, s1__9317), cljs.core.rest.call(null, s2__9318))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__9321__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__9320 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9320)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__9320), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__9320)))
        }else {
          return null
        }
      }, null)
    };
    var G__9321 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9321__delegate.call(this, c1, c2, colls)
    };
    G__9321.cljs$lang$maxFixedArity = 2;
    G__9321.cljs$lang$applyTo = function(arglist__9322) {
      var c1 = cljs.core.first(arglist__9322);
      var c2 = cljs.core.first(cljs.core.next(arglist__9322));
      var colls = cljs.core.rest(cljs.core.next(arglist__9322));
      return G__9321__delegate(c1, c2, colls)
    };
    G__9321.cljs$lang$arity$variadic = G__9321__delegate;
    return G__9321
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__9332 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____9330 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____9330) {
        var coll__9331 = temp__3971__auto____9330;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__9331), cat.call(null, cljs.core.rest.call(null, coll__9331), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__9332.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__9333__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__9333 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9333__delegate.call(this, f, coll, colls)
    };
    G__9333.cljs$lang$maxFixedArity = 2;
    G__9333.cljs$lang$applyTo = function(arglist__9334) {
      var f = cljs.core.first(arglist__9334);
      var coll = cljs.core.first(cljs.core.next(arglist__9334));
      var colls = cljs.core.rest(cljs.core.next(arglist__9334));
      return G__9333__delegate(f, coll, colls)
    };
    G__9333.cljs$lang$arity$variadic = G__9333__delegate;
    return G__9333
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9344 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9344) {
      var s__9345 = temp__3974__auto____9344;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9345)) {
        var c__9346 = cljs.core.chunk_first.call(null, s__9345);
        var size__9347 = cljs.core.count.call(null, c__9346);
        var b__9348 = cljs.core.chunk_buffer.call(null, size__9347);
        var n__2527__auto____9349 = size__9347;
        var i__9350 = 0;
        while(true) {
          if(i__9350 < n__2527__auto____9349) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__9346, i__9350)))) {
              cljs.core.chunk_append.call(null, b__9348, cljs.core._nth.call(null, c__9346, i__9350))
            }else {
            }
            var G__9353 = i__9350 + 1;
            i__9350 = G__9353;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9348), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__9345)))
      }else {
        var f__9351 = cljs.core.first.call(null, s__9345);
        var r__9352 = cljs.core.rest.call(null, s__9345);
        if(cljs.core.truth_(pred.call(null, f__9351))) {
          return cljs.core.cons.call(null, f__9351, filter.call(null, pred, r__9352))
        }else {
          return filter.call(null, pred, r__9352)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__9356 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__9356.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9354_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9354_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__9360__9361 = to;
    if(G__9360__9361) {
      if(function() {
        var or__3824__auto____9362 = G__9360__9361.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____9362) {
          return or__3824__auto____9362
        }else {
          return G__9360__9361.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__9360__9361.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9360__9361)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9360__9361)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__9363__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__9363 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9363__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9363.cljs$lang$maxFixedArity = 4;
    G__9363.cljs$lang$applyTo = function(arglist__9364) {
      var f = cljs.core.first(arglist__9364);
      var c1 = cljs.core.first(cljs.core.next(arglist__9364));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9364)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9364))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9364))));
      return G__9363__delegate(f, c1, c2, c3, colls)
    };
    G__9363.cljs$lang$arity$variadic = G__9363__delegate;
    return G__9363
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9371 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9371) {
        var s__9372 = temp__3974__auto____9371;
        var p__9373 = cljs.core.take.call(null, n, s__9372);
        if(n === cljs.core.count.call(null, p__9373)) {
          return cljs.core.cons.call(null, p__9373, partition.call(null, n, step, cljs.core.drop.call(null, step, s__9372)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9374 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9374) {
        var s__9375 = temp__3974__auto____9374;
        var p__9376 = cljs.core.take.call(null, n, s__9375);
        if(n === cljs.core.count.call(null, p__9376)) {
          return cljs.core.cons.call(null, p__9376, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__9375)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__9376, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__9381 = cljs.core.lookup_sentinel;
    var m__9382 = m;
    var ks__9383 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__9383) {
        var m__9384 = cljs.core._lookup.call(null, m__9382, cljs.core.first.call(null, ks__9383), sentinel__9381);
        if(sentinel__9381 === m__9384) {
          return not_found
        }else {
          var G__9385 = sentinel__9381;
          var G__9386 = m__9384;
          var G__9387 = cljs.core.next.call(null, ks__9383);
          sentinel__9381 = G__9385;
          m__9382 = G__9386;
          ks__9383 = G__9387;
          continue
        }
      }else {
        return m__9382
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__9388, v) {
  var vec__9393__9394 = p__9388;
  var k__9395 = cljs.core.nth.call(null, vec__9393__9394, 0, null);
  var ks__9396 = cljs.core.nthnext.call(null, vec__9393__9394, 1);
  if(cljs.core.truth_(ks__9396)) {
    return cljs.core.assoc.call(null, m, k__9395, assoc_in.call(null, cljs.core._lookup.call(null, m, k__9395, null), ks__9396, v))
  }else {
    return cljs.core.assoc.call(null, m, k__9395, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__9397, f, args) {
    var vec__9402__9403 = p__9397;
    var k__9404 = cljs.core.nth.call(null, vec__9402__9403, 0, null);
    var ks__9405 = cljs.core.nthnext.call(null, vec__9402__9403, 1);
    if(cljs.core.truth_(ks__9405)) {
      return cljs.core.assoc.call(null, m, k__9404, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__9404, null), ks__9405, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__9404, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__9404, null), args))
    }
  };
  var update_in = function(m, p__9397, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__9397, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__9406) {
    var m = cljs.core.first(arglist__9406);
    var p__9397 = cljs.core.first(cljs.core.next(arglist__9406));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9406)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9406)));
    return update_in__delegate(m, p__9397, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9409 = this;
  var h__2192__auto____9410 = this__9409.__hash;
  if(!(h__2192__auto____9410 == null)) {
    return h__2192__auto____9410
  }else {
    var h__2192__auto____9411 = cljs.core.hash_coll.call(null, coll);
    this__9409.__hash = h__2192__auto____9411;
    return h__2192__auto____9411
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9412 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9413 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9414 = this;
  var new_array__9415 = this__9414.array.slice();
  new_array__9415[k] = v;
  return new cljs.core.Vector(this__9414.meta, new_array__9415, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__9446 = null;
  var G__9446__2 = function(this_sym9416, k) {
    var this__9418 = this;
    var this_sym9416__9419 = this;
    var coll__9420 = this_sym9416__9419;
    return coll__9420.cljs$core$ILookup$_lookup$arity$2(coll__9420, k)
  };
  var G__9446__3 = function(this_sym9417, k, not_found) {
    var this__9418 = this;
    var this_sym9417__9421 = this;
    var coll__9422 = this_sym9417__9421;
    return coll__9422.cljs$core$ILookup$_lookup$arity$3(coll__9422, k, not_found)
  };
  G__9446 = function(this_sym9417, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9446__2.call(this, this_sym9417, k);
      case 3:
        return G__9446__3.call(this, this_sym9417, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9446
}();
cljs.core.Vector.prototype.apply = function(this_sym9407, args9408) {
  var this__9423 = this;
  return this_sym9407.call.apply(this_sym9407, [this_sym9407].concat(args9408.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9424 = this;
  var new_array__9425 = this__9424.array.slice();
  new_array__9425.push(o);
  return new cljs.core.Vector(this__9424.meta, new_array__9425, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__9426 = this;
  var this__9427 = this;
  return cljs.core.pr_str.call(null, this__9427)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9428 = this;
  return cljs.core.ci_reduce.call(null, this__9428.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9429 = this;
  return cljs.core.ci_reduce.call(null, this__9429.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9430 = this;
  if(this__9430.array.length > 0) {
    var vector_seq__9431 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__9430.array.length) {
          return cljs.core.cons.call(null, this__9430.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__9431.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9432 = this;
  return this__9432.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9433 = this;
  var count__9434 = this__9433.array.length;
  if(count__9434 > 0) {
    return this__9433.array[count__9434 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9435 = this;
  if(this__9435.array.length > 0) {
    var new_array__9436 = this__9435.array.slice();
    new_array__9436.pop();
    return new cljs.core.Vector(this__9435.meta, new_array__9436, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9437 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9438 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9439 = this;
  return new cljs.core.Vector(meta, this__9439.array, this__9439.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9440 = this;
  return this__9440.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9441 = this;
  if(function() {
    var and__3822__auto____9442 = 0 <= n;
    if(and__3822__auto____9442) {
      return n < this__9441.array.length
    }else {
      return and__3822__auto____9442
    }
  }()) {
    return this__9441.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9443 = this;
  if(function() {
    var and__3822__auto____9444 = 0 <= n;
    if(and__3822__auto____9444) {
      return n < this__9443.array.length
    }else {
      return and__3822__auto____9444
    }
  }()) {
    return this__9443.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9445 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9445.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__9448 = pv.cnt;
  if(cnt__9448 < 32) {
    return 0
  }else {
    return cnt__9448 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__9454 = level;
  var ret__9455 = node;
  while(true) {
    if(ll__9454 === 0) {
      return ret__9455
    }else {
      var embed__9456 = ret__9455;
      var r__9457 = cljs.core.pv_fresh_node.call(null, edit);
      var ___9458 = cljs.core.pv_aset.call(null, r__9457, 0, embed__9456);
      var G__9459 = ll__9454 - 5;
      var G__9460 = r__9457;
      ll__9454 = G__9459;
      ret__9455 = G__9460;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__9466 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__9467 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__9466, subidx__9467, tailnode);
    return ret__9466
  }else {
    var child__9468 = cljs.core.pv_aget.call(null, parent, subidx__9467);
    if(!(child__9468 == null)) {
      var node_to_insert__9469 = push_tail.call(null, pv, level - 5, child__9468, tailnode);
      cljs.core.pv_aset.call(null, ret__9466, subidx__9467, node_to_insert__9469);
      return ret__9466
    }else {
      var node_to_insert__9470 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__9466, subidx__9467, node_to_insert__9470);
      return ret__9466
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____9474 = 0 <= i;
    if(and__3822__auto____9474) {
      return i < pv.cnt
    }else {
      return and__3822__auto____9474
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9475 = pv.root;
      var level__9476 = pv.shift;
      while(true) {
        if(level__9476 > 0) {
          var G__9477 = cljs.core.pv_aget.call(null, node__9475, i >>> level__9476 & 31);
          var G__9478 = level__9476 - 5;
          node__9475 = G__9477;
          level__9476 = G__9478;
          continue
        }else {
          return node__9475.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9481 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9481, i & 31, val);
    return ret__9481
  }else {
    var subidx__9482 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9481, subidx__9482, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9482), i, val));
    return ret__9481
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9488 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9489 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9488));
    if(function() {
      var and__3822__auto____9490 = new_child__9489 == null;
      if(and__3822__auto____9490) {
        return subidx__9488 === 0
      }else {
        return and__3822__auto____9490
      }
    }()) {
      return null
    }else {
      var ret__9491 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9491, subidx__9488, new_child__9489);
      return ret__9491
    }
  }else {
    if(subidx__9488 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9492 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9492, subidx__9488, null);
        return ret__9492
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9495 = this;
  return new cljs.core.TransientVector(this__9495.cnt, this__9495.shift, cljs.core.tv_editable_root.call(null, this__9495.root), cljs.core.tv_editable_tail.call(null, this__9495.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9496 = this;
  var h__2192__auto____9497 = this__9496.__hash;
  if(!(h__2192__auto____9497 == null)) {
    return h__2192__auto____9497
  }else {
    var h__2192__auto____9498 = cljs.core.hash_coll.call(null, coll);
    this__9496.__hash = h__2192__auto____9498;
    return h__2192__auto____9498
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9499 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9500 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9501 = this;
  if(function() {
    var and__3822__auto____9502 = 0 <= k;
    if(and__3822__auto____9502) {
      return k < this__9501.cnt
    }else {
      return and__3822__auto____9502
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9503 = this__9501.tail.slice();
      new_tail__9503[k & 31] = v;
      return new cljs.core.PersistentVector(this__9501.meta, this__9501.cnt, this__9501.shift, this__9501.root, new_tail__9503, null)
    }else {
      return new cljs.core.PersistentVector(this__9501.meta, this__9501.cnt, this__9501.shift, cljs.core.do_assoc.call(null, coll, this__9501.shift, this__9501.root, k, v), this__9501.tail, null)
    }
  }else {
    if(k === this__9501.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9501.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9551 = null;
  var G__9551__2 = function(this_sym9504, k) {
    var this__9506 = this;
    var this_sym9504__9507 = this;
    var coll__9508 = this_sym9504__9507;
    return coll__9508.cljs$core$ILookup$_lookup$arity$2(coll__9508, k)
  };
  var G__9551__3 = function(this_sym9505, k, not_found) {
    var this__9506 = this;
    var this_sym9505__9509 = this;
    var coll__9510 = this_sym9505__9509;
    return coll__9510.cljs$core$ILookup$_lookup$arity$3(coll__9510, k, not_found)
  };
  G__9551 = function(this_sym9505, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9551__2.call(this, this_sym9505, k);
      case 3:
        return G__9551__3.call(this, this_sym9505, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9551
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9493, args9494) {
  var this__9511 = this;
  return this_sym9493.call.apply(this_sym9493, [this_sym9493].concat(args9494.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9512 = this;
  var step_init__9513 = [0, init];
  var i__9514 = 0;
  while(true) {
    if(i__9514 < this__9512.cnt) {
      var arr__9515 = cljs.core.array_for.call(null, v, i__9514);
      var len__9516 = arr__9515.length;
      var init__9520 = function() {
        var j__9517 = 0;
        var init__9518 = step_init__9513[1];
        while(true) {
          if(j__9517 < len__9516) {
            var init__9519 = f.call(null, init__9518, j__9517 + i__9514, arr__9515[j__9517]);
            if(cljs.core.reduced_QMARK_.call(null, init__9519)) {
              return init__9519
            }else {
              var G__9552 = j__9517 + 1;
              var G__9553 = init__9519;
              j__9517 = G__9552;
              init__9518 = G__9553;
              continue
            }
          }else {
            step_init__9513[0] = len__9516;
            step_init__9513[1] = init__9518;
            return init__9518
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9520)) {
        return cljs.core.deref.call(null, init__9520)
      }else {
        var G__9554 = i__9514 + step_init__9513[0];
        i__9514 = G__9554;
        continue
      }
    }else {
      return step_init__9513[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9521 = this;
  if(this__9521.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9522 = this__9521.tail.slice();
    new_tail__9522.push(o);
    return new cljs.core.PersistentVector(this__9521.meta, this__9521.cnt + 1, this__9521.shift, this__9521.root, new_tail__9522, null)
  }else {
    var root_overflow_QMARK___9523 = this__9521.cnt >>> 5 > 1 << this__9521.shift;
    var new_shift__9524 = root_overflow_QMARK___9523 ? this__9521.shift + 5 : this__9521.shift;
    var new_root__9526 = root_overflow_QMARK___9523 ? function() {
      var n_r__9525 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9525, 0, this__9521.root);
      cljs.core.pv_aset.call(null, n_r__9525, 1, cljs.core.new_path.call(null, null, this__9521.shift, new cljs.core.VectorNode(null, this__9521.tail)));
      return n_r__9525
    }() : cljs.core.push_tail.call(null, coll, this__9521.shift, this__9521.root, new cljs.core.VectorNode(null, this__9521.tail));
    return new cljs.core.PersistentVector(this__9521.meta, this__9521.cnt + 1, new_shift__9524, new_root__9526, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9527 = this;
  if(this__9527.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9527.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9528 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9529 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9530 = this;
  var this__9531 = this;
  return cljs.core.pr_str.call(null, this__9531)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9532 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9533 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9534 = this;
  if(this__9534.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9535 = this;
  return this__9535.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9536 = this;
  if(this__9536.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9536.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9537 = this;
  if(this__9537.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9537.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9537.meta)
    }else {
      if(1 < this__9537.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9537.meta, this__9537.cnt - 1, this__9537.shift, this__9537.root, this__9537.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9538 = cljs.core.array_for.call(null, coll, this__9537.cnt - 2);
          var nr__9539 = cljs.core.pop_tail.call(null, coll, this__9537.shift, this__9537.root);
          var new_root__9540 = nr__9539 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9539;
          var cnt_1__9541 = this__9537.cnt - 1;
          if(function() {
            var and__3822__auto____9542 = 5 < this__9537.shift;
            if(and__3822__auto____9542) {
              return cljs.core.pv_aget.call(null, new_root__9540, 1) == null
            }else {
              return and__3822__auto____9542
            }
          }()) {
            return new cljs.core.PersistentVector(this__9537.meta, cnt_1__9541, this__9537.shift - 5, cljs.core.pv_aget.call(null, new_root__9540, 0), new_tail__9538, null)
          }else {
            return new cljs.core.PersistentVector(this__9537.meta, cnt_1__9541, this__9537.shift, new_root__9540, new_tail__9538, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9543 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9544 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9545 = this;
  return new cljs.core.PersistentVector(meta, this__9545.cnt, this__9545.shift, this__9545.root, this__9545.tail, this__9545.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9546 = this;
  return this__9546.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9547 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9548 = this;
  if(function() {
    var and__3822__auto____9549 = 0 <= n;
    if(and__3822__auto____9549) {
      return n < this__9548.cnt
    }else {
      return and__3822__auto____9549
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9550 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9550.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9555 = xs.length;
  var xs__9556 = no_clone === true ? xs : xs.slice();
  if(l__9555 < 32) {
    return new cljs.core.PersistentVector(null, l__9555, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9556, null)
  }else {
    var node__9557 = xs__9556.slice(0, 32);
    var v__9558 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9557, null);
    var i__9559 = 32;
    var out__9560 = cljs.core._as_transient.call(null, v__9558);
    while(true) {
      if(i__9559 < l__9555) {
        var G__9561 = i__9559 + 1;
        var G__9562 = cljs.core.conj_BANG_.call(null, out__9560, xs__9556[i__9559]);
        i__9559 = G__9561;
        out__9560 = G__9562;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9560)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9563) {
    var args = cljs.core.seq(arglist__9563);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9564 = this;
  if(this__9564.off + 1 < this__9564.node.length) {
    var s__9565 = cljs.core.chunked_seq.call(null, this__9564.vec, this__9564.node, this__9564.i, this__9564.off + 1);
    if(s__9565 == null) {
      return null
    }else {
      return s__9565
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9566 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9567 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9568 = this;
  return this__9568.node[this__9568.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9569 = this;
  if(this__9569.off + 1 < this__9569.node.length) {
    var s__9570 = cljs.core.chunked_seq.call(null, this__9569.vec, this__9569.node, this__9569.i, this__9569.off + 1);
    if(s__9570 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9570
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9571 = this;
  var l__9572 = this__9571.node.length;
  var s__9573 = this__9571.i + l__9572 < cljs.core._count.call(null, this__9571.vec) ? cljs.core.chunked_seq.call(null, this__9571.vec, this__9571.i + l__9572, 0) : null;
  if(s__9573 == null) {
    return null
  }else {
    return s__9573
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9574 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9575 = this;
  return cljs.core.chunked_seq.call(null, this__9575.vec, this__9575.node, this__9575.i, this__9575.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9576 = this;
  return this__9576.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9577 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9577.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9578 = this;
  return cljs.core.array_chunk.call(null, this__9578.node, this__9578.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9579 = this;
  var l__9580 = this__9579.node.length;
  var s__9581 = this__9579.i + l__9580 < cljs.core._count.call(null, this__9579.vec) ? cljs.core.chunked_seq.call(null, this__9579.vec, this__9579.i + l__9580, 0) : null;
  if(s__9581 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9581
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9584 = this;
  var h__2192__auto____9585 = this__9584.__hash;
  if(!(h__2192__auto____9585 == null)) {
    return h__2192__auto____9585
  }else {
    var h__2192__auto____9586 = cljs.core.hash_coll.call(null, coll);
    this__9584.__hash = h__2192__auto____9586;
    return h__2192__auto____9586
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9587 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9588 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9589 = this;
  var v_pos__9590 = this__9589.start + key;
  return new cljs.core.Subvec(this__9589.meta, cljs.core._assoc.call(null, this__9589.v, v_pos__9590, val), this__9589.start, this__9589.end > v_pos__9590 + 1 ? this__9589.end : v_pos__9590 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9616 = null;
  var G__9616__2 = function(this_sym9591, k) {
    var this__9593 = this;
    var this_sym9591__9594 = this;
    var coll__9595 = this_sym9591__9594;
    return coll__9595.cljs$core$ILookup$_lookup$arity$2(coll__9595, k)
  };
  var G__9616__3 = function(this_sym9592, k, not_found) {
    var this__9593 = this;
    var this_sym9592__9596 = this;
    var coll__9597 = this_sym9592__9596;
    return coll__9597.cljs$core$ILookup$_lookup$arity$3(coll__9597, k, not_found)
  };
  G__9616 = function(this_sym9592, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9616__2.call(this, this_sym9592, k);
      case 3:
        return G__9616__3.call(this, this_sym9592, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9616
}();
cljs.core.Subvec.prototype.apply = function(this_sym9582, args9583) {
  var this__9598 = this;
  return this_sym9582.call.apply(this_sym9582, [this_sym9582].concat(args9583.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9599 = this;
  return new cljs.core.Subvec(this__9599.meta, cljs.core._assoc_n.call(null, this__9599.v, this__9599.end, o), this__9599.start, this__9599.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9600 = this;
  var this__9601 = this;
  return cljs.core.pr_str.call(null, this__9601)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9602 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9603 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9604 = this;
  var subvec_seq__9605 = function subvec_seq(i) {
    if(i === this__9604.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9604.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9605.call(null, this__9604.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9606 = this;
  return this__9606.end - this__9606.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9607 = this;
  return cljs.core._nth.call(null, this__9607.v, this__9607.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9608 = this;
  if(this__9608.start === this__9608.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9608.meta, this__9608.v, this__9608.start, this__9608.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9609 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9610 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9611 = this;
  return new cljs.core.Subvec(meta, this__9611.v, this__9611.start, this__9611.end, this__9611.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9612 = this;
  return this__9612.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9613 = this;
  return cljs.core._nth.call(null, this__9613.v, this__9613.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9614 = this;
  return cljs.core._nth.call(null, this__9614.v, this__9614.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9615 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9615.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9618 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9618, 0, tl.length);
  return ret__9618
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9622 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9623 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9622, subidx__9623, level === 5 ? tail_node : function() {
    var child__9624 = cljs.core.pv_aget.call(null, ret__9622, subidx__9623);
    if(!(child__9624 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9624, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9622
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9629 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9630 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9631 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9629, subidx__9630));
    if(function() {
      var and__3822__auto____9632 = new_child__9631 == null;
      if(and__3822__auto____9632) {
        return subidx__9630 === 0
      }else {
        return and__3822__auto____9632
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9629, subidx__9630, new_child__9631);
      return node__9629
    }
  }else {
    if(subidx__9630 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9629, subidx__9630, null);
        return node__9629
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____9637 = 0 <= i;
    if(and__3822__auto____9637) {
      return i < tv.cnt
    }else {
      return and__3822__auto____9637
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9638 = tv.root;
      var node__9639 = root__9638;
      var level__9640 = tv.shift;
      while(true) {
        if(level__9640 > 0) {
          var G__9641 = cljs.core.tv_ensure_editable.call(null, root__9638.edit, cljs.core.pv_aget.call(null, node__9639, i >>> level__9640 & 31));
          var G__9642 = level__9640 - 5;
          node__9639 = G__9641;
          level__9640 = G__9642;
          continue
        }else {
          return node__9639.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9682 = null;
  var G__9682__2 = function(this_sym9645, k) {
    var this__9647 = this;
    var this_sym9645__9648 = this;
    var coll__9649 = this_sym9645__9648;
    return coll__9649.cljs$core$ILookup$_lookup$arity$2(coll__9649, k)
  };
  var G__9682__3 = function(this_sym9646, k, not_found) {
    var this__9647 = this;
    var this_sym9646__9650 = this;
    var coll__9651 = this_sym9646__9650;
    return coll__9651.cljs$core$ILookup$_lookup$arity$3(coll__9651, k, not_found)
  };
  G__9682 = function(this_sym9646, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9682__2.call(this, this_sym9646, k);
      case 3:
        return G__9682__3.call(this, this_sym9646, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9682
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9643, args9644) {
  var this__9652 = this;
  return this_sym9643.call.apply(this_sym9643, [this_sym9643].concat(args9644.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9653 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9654 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9655 = this;
  if(this__9655.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9656 = this;
  if(function() {
    var and__3822__auto____9657 = 0 <= n;
    if(and__3822__auto____9657) {
      return n < this__9656.cnt
    }else {
      return and__3822__auto____9657
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9658 = this;
  if(this__9658.root.edit) {
    return this__9658.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9659 = this;
  if(this__9659.root.edit) {
    if(function() {
      var and__3822__auto____9660 = 0 <= n;
      if(and__3822__auto____9660) {
        return n < this__9659.cnt
      }else {
        return and__3822__auto____9660
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9659.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9665 = function go(level, node) {
          var node__9663 = cljs.core.tv_ensure_editable.call(null, this__9659.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9663, n & 31, val);
            return node__9663
          }else {
            var subidx__9664 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9663, subidx__9664, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9663, subidx__9664)));
            return node__9663
          }
        }.call(null, this__9659.shift, this__9659.root);
        this__9659.root = new_root__9665;
        return tcoll
      }
    }else {
      if(n === this__9659.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9659.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9666 = this;
  if(this__9666.root.edit) {
    if(this__9666.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9666.cnt) {
        this__9666.cnt = 0;
        return tcoll
      }else {
        if((this__9666.cnt - 1 & 31) > 0) {
          this__9666.cnt = this__9666.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9667 = cljs.core.editable_array_for.call(null, tcoll, this__9666.cnt - 2);
            var new_root__9669 = function() {
              var nr__9668 = cljs.core.tv_pop_tail.call(null, tcoll, this__9666.shift, this__9666.root);
              if(!(nr__9668 == null)) {
                return nr__9668
              }else {
                return new cljs.core.VectorNode(this__9666.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____9670 = 5 < this__9666.shift;
              if(and__3822__auto____9670) {
                return cljs.core.pv_aget.call(null, new_root__9669, 1) == null
              }else {
                return and__3822__auto____9670
              }
            }()) {
              var new_root__9671 = cljs.core.tv_ensure_editable.call(null, this__9666.root.edit, cljs.core.pv_aget.call(null, new_root__9669, 0));
              this__9666.root = new_root__9671;
              this__9666.shift = this__9666.shift - 5;
              this__9666.cnt = this__9666.cnt - 1;
              this__9666.tail = new_tail__9667;
              return tcoll
            }else {
              this__9666.root = new_root__9669;
              this__9666.cnt = this__9666.cnt - 1;
              this__9666.tail = new_tail__9667;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9672 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9673 = this;
  if(this__9673.root.edit) {
    if(this__9673.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9673.tail[this__9673.cnt & 31] = o;
      this__9673.cnt = this__9673.cnt + 1;
      return tcoll
    }else {
      var tail_node__9674 = new cljs.core.VectorNode(this__9673.root.edit, this__9673.tail);
      var new_tail__9675 = cljs.core.make_array.call(null, 32);
      new_tail__9675[0] = o;
      this__9673.tail = new_tail__9675;
      if(this__9673.cnt >>> 5 > 1 << this__9673.shift) {
        var new_root_array__9676 = cljs.core.make_array.call(null, 32);
        var new_shift__9677 = this__9673.shift + 5;
        new_root_array__9676[0] = this__9673.root;
        new_root_array__9676[1] = cljs.core.new_path.call(null, this__9673.root.edit, this__9673.shift, tail_node__9674);
        this__9673.root = new cljs.core.VectorNode(this__9673.root.edit, new_root_array__9676);
        this__9673.shift = new_shift__9677;
        this__9673.cnt = this__9673.cnt + 1;
        return tcoll
      }else {
        var new_root__9678 = cljs.core.tv_push_tail.call(null, tcoll, this__9673.shift, this__9673.root, tail_node__9674);
        this__9673.root = new_root__9678;
        this__9673.cnt = this__9673.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9679 = this;
  if(this__9679.root.edit) {
    this__9679.root.edit = null;
    var len__9680 = this__9679.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9681 = cljs.core.make_array.call(null, len__9680);
    cljs.core.array_copy.call(null, this__9679.tail, 0, trimmed_tail__9681, 0, len__9680);
    return new cljs.core.PersistentVector(null, this__9679.cnt, this__9679.shift, this__9679.root, trimmed_tail__9681, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9683 = this;
  var h__2192__auto____9684 = this__9683.__hash;
  if(!(h__2192__auto____9684 == null)) {
    return h__2192__auto____9684
  }else {
    var h__2192__auto____9685 = cljs.core.hash_coll.call(null, coll);
    this__9683.__hash = h__2192__auto____9685;
    return h__2192__auto____9685
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9686 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9687 = this;
  var this__9688 = this;
  return cljs.core.pr_str.call(null, this__9688)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9689 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9690 = this;
  return cljs.core._first.call(null, this__9690.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9691 = this;
  var temp__3971__auto____9692 = cljs.core.next.call(null, this__9691.front);
  if(temp__3971__auto____9692) {
    var f1__9693 = temp__3971__auto____9692;
    return new cljs.core.PersistentQueueSeq(this__9691.meta, f1__9693, this__9691.rear, null)
  }else {
    if(this__9691.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9691.meta, this__9691.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9694 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9695 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9695.front, this__9695.rear, this__9695.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9696 = this;
  return this__9696.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9697 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9697.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9698 = this;
  var h__2192__auto____9699 = this__9698.__hash;
  if(!(h__2192__auto____9699 == null)) {
    return h__2192__auto____9699
  }else {
    var h__2192__auto____9700 = cljs.core.hash_coll.call(null, coll);
    this__9698.__hash = h__2192__auto____9700;
    return h__2192__auto____9700
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9701 = this;
  if(cljs.core.truth_(this__9701.front)) {
    return new cljs.core.PersistentQueue(this__9701.meta, this__9701.count + 1, this__9701.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____9702 = this__9701.rear;
      if(cljs.core.truth_(or__3824__auto____9702)) {
        return or__3824__auto____9702
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9701.meta, this__9701.count + 1, cljs.core.conj.call(null, this__9701.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9703 = this;
  var this__9704 = this;
  return cljs.core.pr_str.call(null, this__9704)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9705 = this;
  var rear__9706 = cljs.core.seq.call(null, this__9705.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____9707 = this__9705.front;
    if(cljs.core.truth_(or__3824__auto____9707)) {
      return or__3824__auto____9707
    }else {
      return rear__9706
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9705.front, cljs.core.seq.call(null, rear__9706), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9708 = this;
  return this__9708.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9709 = this;
  return cljs.core._first.call(null, this__9709.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9710 = this;
  if(cljs.core.truth_(this__9710.front)) {
    var temp__3971__auto____9711 = cljs.core.next.call(null, this__9710.front);
    if(temp__3971__auto____9711) {
      var f1__9712 = temp__3971__auto____9711;
      return new cljs.core.PersistentQueue(this__9710.meta, this__9710.count - 1, f1__9712, this__9710.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9710.meta, this__9710.count - 1, cljs.core.seq.call(null, this__9710.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9713 = this;
  return cljs.core.first.call(null, this__9713.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9714 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9715 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9716 = this;
  return new cljs.core.PersistentQueue(meta, this__9716.count, this__9716.front, this__9716.rear, this__9716.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9717 = this;
  return this__9717.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9718 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9719 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__9722 = array.length;
  var i__9723 = 0;
  while(true) {
    if(i__9723 < len__9722) {
      if(k === array[i__9723]) {
        return i__9723
      }else {
        var G__9724 = i__9723 + incr;
        i__9723 = G__9724;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__9727 = cljs.core.hash.call(null, a);
  var b__9728 = cljs.core.hash.call(null, b);
  if(a__9727 < b__9728) {
    return-1
  }else {
    if(a__9727 > b__9728) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__9736 = m.keys;
  var len__9737 = ks__9736.length;
  var so__9738 = m.strobj;
  var out__9739 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__9740 = 0;
  var out__9741 = cljs.core.transient$.call(null, out__9739);
  while(true) {
    if(i__9740 < len__9737) {
      var k__9742 = ks__9736[i__9740];
      var G__9743 = i__9740 + 1;
      var G__9744 = cljs.core.assoc_BANG_.call(null, out__9741, k__9742, so__9738[k__9742]);
      i__9740 = G__9743;
      out__9741 = G__9744;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__9741, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__9750 = {};
  var l__9751 = ks.length;
  var i__9752 = 0;
  while(true) {
    if(i__9752 < l__9751) {
      var k__9753 = ks[i__9752];
      new_obj__9750[k__9753] = obj[k__9753];
      var G__9754 = i__9752 + 1;
      i__9752 = G__9754;
      continue
    }else {
    }
    break
  }
  return new_obj__9750
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9757 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9758 = this;
  var h__2192__auto____9759 = this__9758.__hash;
  if(!(h__2192__auto____9759 == null)) {
    return h__2192__auto____9759
  }else {
    var h__2192__auto____9760 = cljs.core.hash_imap.call(null, coll);
    this__9758.__hash = h__2192__auto____9760;
    return h__2192__auto____9760
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9761 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9762 = this;
  if(function() {
    var and__3822__auto____9763 = goog.isString(k);
    if(and__3822__auto____9763) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9762.keys) == null)
    }else {
      return and__3822__auto____9763
    }
  }()) {
    return this__9762.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9764 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____9765 = this__9764.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____9765) {
        return or__3824__auto____9765
      }else {
        return this__9764.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__9764.keys) == null)) {
        var new_strobj__9766 = cljs.core.obj_clone.call(null, this__9764.strobj, this__9764.keys);
        new_strobj__9766[k] = v;
        return new cljs.core.ObjMap(this__9764.meta, this__9764.keys, new_strobj__9766, this__9764.update_count + 1, null)
      }else {
        var new_strobj__9767 = cljs.core.obj_clone.call(null, this__9764.strobj, this__9764.keys);
        var new_keys__9768 = this__9764.keys.slice();
        new_strobj__9767[k] = v;
        new_keys__9768.push(k);
        return new cljs.core.ObjMap(this__9764.meta, new_keys__9768, new_strobj__9767, this__9764.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9769 = this;
  if(function() {
    var and__3822__auto____9770 = goog.isString(k);
    if(and__3822__auto____9770) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9769.keys) == null)
    }else {
      return and__3822__auto____9770
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9792 = null;
  var G__9792__2 = function(this_sym9771, k) {
    var this__9773 = this;
    var this_sym9771__9774 = this;
    var coll__9775 = this_sym9771__9774;
    return coll__9775.cljs$core$ILookup$_lookup$arity$2(coll__9775, k)
  };
  var G__9792__3 = function(this_sym9772, k, not_found) {
    var this__9773 = this;
    var this_sym9772__9776 = this;
    var coll__9777 = this_sym9772__9776;
    return coll__9777.cljs$core$ILookup$_lookup$arity$3(coll__9777, k, not_found)
  };
  G__9792 = function(this_sym9772, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9792__2.call(this, this_sym9772, k);
      case 3:
        return G__9792__3.call(this, this_sym9772, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9792
}();
cljs.core.ObjMap.prototype.apply = function(this_sym9755, args9756) {
  var this__9778 = this;
  return this_sym9755.call.apply(this_sym9755, [this_sym9755].concat(args9756.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9779 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__9780 = this;
  var this__9781 = this;
  return cljs.core.pr_str.call(null, this__9781)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9782 = this;
  if(this__9782.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9745_SHARP_) {
      return cljs.core.vector.call(null, p1__9745_SHARP_, this__9782.strobj[p1__9745_SHARP_])
    }, this__9782.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9783 = this;
  return this__9783.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9784 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9785 = this;
  return new cljs.core.ObjMap(meta, this__9785.keys, this__9785.strobj, this__9785.update_count, this__9785.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9786 = this;
  return this__9786.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9787 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__9787.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9788 = this;
  if(function() {
    var and__3822__auto____9789 = goog.isString(k);
    if(and__3822__auto____9789) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9788.keys) == null)
    }else {
      return and__3822__auto____9789
    }
  }()) {
    var new_keys__9790 = this__9788.keys.slice();
    var new_strobj__9791 = cljs.core.obj_clone.call(null, this__9788.strobj, this__9788.keys);
    new_keys__9790.splice(cljs.core.scan_array.call(null, 1, k, new_keys__9790), 1);
    cljs.core.js_delete.call(null, new_strobj__9791, k);
    return new cljs.core.ObjMap(this__9788.meta, new_keys__9790, new_strobj__9791, this__9788.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9796 = this;
  var h__2192__auto____9797 = this__9796.__hash;
  if(!(h__2192__auto____9797 == null)) {
    return h__2192__auto____9797
  }else {
    var h__2192__auto____9798 = cljs.core.hash_imap.call(null, coll);
    this__9796.__hash = h__2192__auto____9798;
    return h__2192__auto____9798
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9799 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9800 = this;
  var bucket__9801 = this__9800.hashobj[cljs.core.hash.call(null, k)];
  var i__9802 = cljs.core.truth_(bucket__9801) ? cljs.core.scan_array.call(null, 2, k, bucket__9801) : null;
  if(cljs.core.truth_(i__9802)) {
    return bucket__9801[i__9802 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9803 = this;
  var h__9804 = cljs.core.hash.call(null, k);
  var bucket__9805 = this__9803.hashobj[h__9804];
  if(cljs.core.truth_(bucket__9805)) {
    var new_bucket__9806 = bucket__9805.slice();
    var new_hashobj__9807 = goog.object.clone(this__9803.hashobj);
    new_hashobj__9807[h__9804] = new_bucket__9806;
    var temp__3971__auto____9808 = cljs.core.scan_array.call(null, 2, k, new_bucket__9806);
    if(cljs.core.truth_(temp__3971__auto____9808)) {
      var i__9809 = temp__3971__auto____9808;
      new_bucket__9806[i__9809 + 1] = v;
      return new cljs.core.HashMap(this__9803.meta, this__9803.count, new_hashobj__9807, null)
    }else {
      new_bucket__9806.push(k, v);
      return new cljs.core.HashMap(this__9803.meta, this__9803.count + 1, new_hashobj__9807, null)
    }
  }else {
    var new_hashobj__9810 = goog.object.clone(this__9803.hashobj);
    new_hashobj__9810[h__9804] = [k, v];
    return new cljs.core.HashMap(this__9803.meta, this__9803.count + 1, new_hashobj__9810, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9811 = this;
  var bucket__9812 = this__9811.hashobj[cljs.core.hash.call(null, k)];
  var i__9813 = cljs.core.truth_(bucket__9812) ? cljs.core.scan_array.call(null, 2, k, bucket__9812) : null;
  if(cljs.core.truth_(i__9813)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__9838 = null;
  var G__9838__2 = function(this_sym9814, k) {
    var this__9816 = this;
    var this_sym9814__9817 = this;
    var coll__9818 = this_sym9814__9817;
    return coll__9818.cljs$core$ILookup$_lookup$arity$2(coll__9818, k)
  };
  var G__9838__3 = function(this_sym9815, k, not_found) {
    var this__9816 = this;
    var this_sym9815__9819 = this;
    var coll__9820 = this_sym9815__9819;
    return coll__9820.cljs$core$ILookup$_lookup$arity$3(coll__9820, k, not_found)
  };
  G__9838 = function(this_sym9815, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9838__2.call(this, this_sym9815, k);
      case 3:
        return G__9838__3.call(this, this_sym9815, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9838
}();
cljs.core.HashMap.prototype.apply = function(this_sym9794, args9795) {
  var this__9821 = this;
  return this_sym9794.call.apply(this_sym9794, [this_sym9794].concat(args9795.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9822 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__9823 = this;
  var this__9824 = this;
  return cljs.core.pr_str.call(null, this__9824)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9825 = this;
  if(this__9825.count > 0) {
    var hashes__9826 = cljs.core.js_keys.call(null, this__9825.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__9793_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__9825.hashobj[p1__9793_SHARP_]))
    }, hashes__9826)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9827 = this;
  return this__9827.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9828 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9829 = this;
  return new cljs.core.HashMap(meta, this__9829.count, this__9829.hashobj, this__9829.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9830 = this;
  return this__9830.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9831 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__9831.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9832 = this;
  var h__9833 = cljs.core.hash.call(null, k);
  var bucket__9834 = this__9832.hashobj[h__9833];
  var i__9835 = cljs.core.truth_(bucket__9834) ? cljs.core.scan_array.call(null, 2, k, bucket__9834) : null;
  if(cljs.core.not.call(null, i__9835)) {
    return coll
  }else {
    var new_hashobj__9836 = goog.object.clone(this__9832.hashobj);
    if(3 > bucket__9834.length) {
      cljs.core.js_delete.call(null, new_hashobj__9836, h__9833)
    }else {
      var new_bucket__9837 = bucket__9834.slice();
      new_bucket__9837.splice(i__9835, 2);
      new_hashobj__9836[h__9833] = new_bucket__9837
    }
    return new cljs.core.HashMap(this__9832.meta, this__9832.count - 1, new_hashobj__9836, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__9839 = ks.length;
  var i__9840 = 0;
  var out__9841 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__9840 < len__9839) {
      var G__9842 = i__9840 + 1;
      var G__9843 = cljs.core.assoc.call(null, out__9841, ks[i__9840], vs[i__9840]);
      i__9840 = G__9842;
      out__9841 = G__9843;
      continue
    }else {
      return out__9841
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__9847 = m.arr;
  var len__9848 = arr__9847.length;
  var i__9849 = 0;
  while(true) {
    if(len__9848 <= i__9849) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__9847[i__9849], k)) {
        return i__9849
      }else {
        if("\ufdd0'else") {
          var G__9850 = i__9849 + 2;
          i__9849 = G__9850;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9853 = this;
  return new cljs.core.TransientArrayMap({}, this__9853.arr.length, this__9853.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9854 = this;
  var h__2192__auto____9855 = this__9854.__hash;
  if(!(h__2192__auto____9855 == null)) {
    return h__2192__auto____9855
  }else {
    var h__2192__auto____9856 = cljs.core.hash_imap.call(null, coll);
    this__9854.__hash = h__2192__auto____9856;
    return h__2192__auto____9856
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9857 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9858 = this;
  var idx__9859 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9859 === -1) {
    return not_found
  }else {
    return this__9858.arr[idx__9859 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9860 = this;
  var idx__9861 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9861 === -1) {
    if(this__9860.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__9860.meta, this__9860.cnt + 1, function() {
        var G__9862__9863 = this__9860.arr.slice();
        G__9862__9863.push(k);
        G__9862__9863.push(v);
        return G__9862__9863
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__9860.arr[idx__9861 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__9860.meta, this__9860.cnt, function() {
          var G__9864__9865 = this__9860.arr.slice();
          G__9864__9865[idx__9861 + 1] = v;
          return G__9864__9865
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9866 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9898 = null;
  var G__9898__2 = function(this_sym9867, k) {
    var this__9869 = this;
    var this_sym9867__9870 = this;
    var coll__9871 = this_sym9867__9870;
    return coll__9871.cljs$core$ILookup$_lookup$arity$2(coll__9871, k)
  };
  var G__9898__3 = function(this_sym9868, k, not_found) {
    var this__9869 = this;
    var this_sym9868__9872 = this;
    var coll__9873 = this_sym9868__9872;
    return coll__9873.cljs$core$ILookup$_lookup$arity$3(coll__9873, k, not_found)
  };
  G__9898 = function(this_sym9868, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9898__2.call(this, this_sym9868, k);
      case 3:
        return G__9898__3.call(this, this_sym9868, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9898
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym9851, args9852) {
  var this__9874 = this;
  return this_sym9851.call.apply(this_sym9851, [this_sym9851].concat(args9852.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9875 = this;
  var len__9876 = this__9875.arr.length;
  var i__9877 = 0;
  var init__9878 = init;
  while(true) {
    if(i__9877 < len__9876) {
      var init__9879 = f.call(null, init__9878, this__9875.arr[i__9877], this__9875.arr[i__9877 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__9879)) {
        return cljs.core.deref.call(null, init__9879)
      }else {
        var G__9899 = i__9877 + 2;
        var G__9900 = init__9879;
        i__9877 = G__9899;
        init__9878 = G__9900;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9880 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__9881 = this;
  var this__9882 = this;
  return cljs.core.pr_str.call(null, this__9882)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9883 = this;
  if(this__9883.cnt > 0) {
    var len__9884 = this__9883.arr.length;
    var array_map_seq__9885 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__9884) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__9883.arr[i], this__9883.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__9885.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9886 = this;
  return this__9886.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9887 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9888 = this;
  return new cljs.core.PersistentArrayMap(meta, this__9888.cnt, this__9888.arr, this__9888.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9889 = this;
  return this__9889.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9890 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9890.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9891 = this;
  var idx__9892 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9892 >= 0) {
    var len__9893 = this__9891.arr.length;
    var new_len__9894 = len__9893 - 2;
    if(new_len__9894 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__9895 = cljs.core.make_array.call(null, new_len__9894);
      var s__9896 = 0;
      var d__9897 = 0;
      while(true) {
        if(s__9896 >= len__9893) {
          return new cljs.core.PersistentArrayMap(this__9891.meta, this__9891.cnt - 1, new_arr__9895, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__9891.arr[s__9896])) {
            var G__9901 = s__9896 + 2;
            var G__9902 = d__9897;
            s__9896 = G__9901;
            d__9897 = G__9902;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__9895[d__9897] = this__9891.arr[s__9896];
              new_arr__9895[d__9897 + 1] = this__9891.arr[s__9896 + 1];
              var G__9903 = s__9896 + 2;
              var G__9904 = d__9897 + 2;
              s__9896 = G__9903;
              d__9897 = G__9904;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__9905 = cljs.core.count.call(null, ks);
  var i__9906 = 0;
  var out__9907 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__9906 < len__9905) {
      var G__9908 = i__9906 + 1;
      var G__9909 = cljs.core.assoc_BANG_.call(null, out__9907, ks[i__9906], vs[i__9906]);
      i__9906 = G__9908;
      out__9907 = G__9909;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9907)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9910 = this;
  if(cljs.core.truth_(this__9910.editable_QMARK_)) {
    var idx__9911 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9911 >= 0) {
      this__9910.arr[idx__9911] = this__9910.arr[this__9910.len - 2];
      this__9910.arr[idx__9911 + 1] = this__9910.arr[this__9910.len - 1];
      var G__9912__9913 = this__9910.arr;
      G__9912__9913.pop();
      G__9912__9913.pop();
      G__9912__9913;
      this__9910.len = this__9910.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9914 = this;
  if(cljs.core.truth_(this__9914.editable_QMARK_)) {
    var idx__9915 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9915 === -1) {
      if(this__9914.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__9914.len = this__9914.len + 2;
        this__9914.arr.push(key);
        this__9914.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__9914.len, this__9914.arr), key, val)
      }
    }else {
      if(val === this__9914.arr[idx__9915 + 1]) {
        return tcoll
      }else {
        this__9914.arr[idx__9915 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9916 = this;
  if(cljs.core.truth_(this__9916.editable_QMARK_)) {
    if(function() {
      var G__9917__9918 = o;
      if(G__9917__9918) {
        if(function() {
          var or__3824__auto____9919 = G__9917__9918.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____9919) {
            return or__3824__auto____9919
          }else {
            return G__9917__9918.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9917__9918.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9917__9918)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9917__9918)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9920 = cljs.core.seq.call(null, o);
      var tcoll__9921 = tcoll;
      while(true) {
        var temp__3971__auto____9922 = cljs.core.first.call(null, es__9920);
        if(cljs.core.truth_(temp__3971__auto____9922)) {
          var e__9923 = temp__3971__auto____9922;
          var G__9929 = cljs.core.next.call(null, es__9920);
          var G__9930 = tcoll__9921.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__9921, cljs.core.key.call(null, e__9923), cljs.core.val.call(null, e__9923));
          es__9920 = G__9929;
          tcoll__9921 = G__9930;
          continue
        }else {
          return tcoll__9921
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9924 = this;
  if(cljs.core.truth_(this__9924.editable_QMARK_)) {
    this__9924.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__9924.len, 2), this__9924.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9925 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9926 = this;
  if(cljs.core.truth_(this__9926.editable_QMARK_)) {
    var idx__9927 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__9927 === -1) {
      return not_found
    }else {
      return this__9926.arr[idx__9927 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__9928 = this;
  if(cljs.core.truth_(this__9928.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__9928.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__9933 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__9934 = 0;
  while(true) {
    if(i__9934 < len) {
      var G__9935 = cljs.core.assoc_BANG_.call(null, out__9933, arr[i__9934], arr[i__9934 + 1]);
      var G__9936 = i__9934 + 2;
      out__9933 = G__9935;
      i__9934 = G__9936;
      continue
    }else {
      return out__9933
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2310__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9941__9942 = arr.slice();
    G__9941__9942[i] = a;
    return G__9941__9942
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9943__9944 = arr.slice();
    G__9943__9944[i] = a;
    G__9943__9944[j] = b;
    return G__9943__9944
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__9946 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__9946, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__9946, 2 * i, new_arr__9946.length - 2 * i);
  return new_arr__9946
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__9949 = inode.ensure_editable(edit);
    editable__9949.arr[i] = a;
    return editable__9949
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__9950 = inode.ensure_editable(edit);
    editable__9950.arr[i] = a;
    editable__9950.arr[j] = b;
    return editable__9950
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__9957 = arr.length;
  var i__9958 = 0;
  var init__9959 = init;
  while(true) {
    if(i__9958 < len__9957) {
      var init__9962 = function() {
        var k__9960 = arr[i__9958];
        if(!(k__9960 == null)) {
          return f.call(null, init__9959, k__9960, arr[i__9958 + 1])
        }else {
          var node__9961 = arr[i__9958 + 1];
          if(!(node__9961 == null)) {
            return node__9961.kv_reduce(f, init__9959)
          }else {
            return init__9959
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9962)) {
        return cljs.core.deref.call(null, init__9962)
      }else {
        var G__9963 = i__9958 + 2;
        var G__9964 = init__9962;
        i__9958 = G__9963;
        init__9959 = G__9964;
        continue
      }
    }else {
      return init__9959
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__9965 = this;
  var inode__9966 = this;
  if(this__9965.bitmap === bit) {
    return null
  }else {
    var editable__9967 = inode__9966.ensure_editable(e);
    var earr__9968 = editable__9967.arr;
    var len__9969 = earr__9968.length;
    editable__9967.bitmap = bit ^ editable__9967.bitmap;
    cljs.core.array_copy.call(null, earr__9968, 2 * (i + 1), earr__9968, 2 * i, len__9969 - 2 * (i + 1));
    earr__9968[len__9969 - 2] = null;
    earr__9968[len__9969 - 1] = null;
    return editable__9967
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9970 = this;
  var inode__9971 = this;
  var bit__9972 = 1 << (hash >>> shift & 31);
  var idx__9973 = cljs.core.bitmap_indexed_node_index.call(null, this__9970.bitmap, bit__9972);
  if((this__9970.bitmap & bit__9972) === 0) {
    var n__9974 = cljs.core.bit_count.call(null, this__9970.bitmap);
    if(2 * n__9974 < this__9970.arr.length) {
      var editable__9975 = inode__9971.ensure_editable(edit);
      var earr__9976 = editable__9975.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__9976, 2 * idx__9973, earr__9976, 2 * (idx__9973 + 1), 2 * (n__9974 - idx__9973));
      earr__9976[2 * idx__9973] = key;
      earr__9976[2 * idx__9973 + 1] = val;
      editable__9975.bitmap = editable__9975.bitmap | bit__9972;
      return editable__9975
    }else {
      if(n__9974 >= 16) {
        var nodes__9977 = cljs.core.make_array.call(null, 32);
        var jdx__9978 = hash >>> shift & 31;
        nodes__9977[jdx__9978] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__9979 = 0;
        var j__9980 = 0;
        while(true) {
          if(i__9979 < 32) {
            if((this__9970.bitmap >>> i__9979 & 1) === 0) {
              var G__10033 = i__9979 + 1;
              var G__10034 = j__9980;
              i__9979 = G__10033;
              j__9980 = G__10034;
              continue
            }else {
              nodes__9977[i__9979] = !(this__9970.arr[j__9980] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__9970.arr[j__9980]), this__9970.arr[j__9980], this__9970.arr[j__9980 + 1], added_leaf_QMARK_) : this__9970.arr[j__9980 + 1];
              var G__10035 = i__9979 + 1;
              var G__10036 = j__9980 + 2;
              i__9979 = G__10035;
              j__9980 = G__10036;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__9974 + 1, nodes__9977)
      }else {
        if("\ufdd0'else") {
          var new_arr__9981 = cljs.core.make_array.call(null, 2 * (n__9974 + 4));
          cljs.core.array_copy.call(null, this__9970.arr, 0, new_arr__9981, 0, 2 * idx__9973);
          new_arr__9981[2 * idx__9973] = key;
          new_arr__9981[2 * idx__9973 + 1] = val;
          cljs.core.array_copy.call(null, this__9970.arr, 2 * idx__9973, new_arr__9981, 2 * (idx__9973 + 1), 2 * (n__9974 - idx__9973));
          added_leaf_QMARK_.val = true;
          var editable__9982 = inode__9971.ensure_editable(edit);
          editable__9982.arr = new_arr__9981;
          editable__9982.bitmap = editable__9982.bitmap | bit__9972;
          return editable__9982
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__9983 = this__9970.arr[2 * idx__9973];
    var val_or_node__9984 = this__9970.arr[2 * idx__9973 + 1];
    if(key_or_nil__9983 == null) {
      var n__9985 = val_or_node__9984.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9985 === val_or_node__9984) {
        return inode__9971
      }else {
        return cljs.core.edit_and_set.call(null, inode__9971, edit, 2 * idx__9973 + 1, n__9985)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9983)) {
        if(val === val_or_node__9984) {
          return inode__9971
        }else {
          return cljs.core.edit_and_set.call(null, inode__9971, edit, 2 * idx__9973 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__9971, edit, 2 * idx__9973, null, 2 * idx__9973 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__9983, val_or_node__9984, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__9986 = this;
  var inode__9987 = this;
  return cljs.core.create_inode_seq.call(null, this__9986.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9988 = this;
  var inode__9989 = this;
  var bit__9990 = 1 << (hash >>> shift & 31);
  if((this__9988.bitmap & bit__9990) === 0) {
    return inode__9989
  }else {
    var idx__9991 = cljs.core.bitmap_indexed_node_index.call(null, this__9988.bitmap, bit__9990);
    var key_or_nil__9992 = this__9988.arr[2 * idx__9991];
    var val_or_node__9993 = this__9988.arr[2 * idx__9991 + 1];
    if(key_or_nil__9992 == null) {
      var n__9994 = val_or_node__9993.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__9994 === val_or_node__9993) {
        return inode__9989
      }else {
        if(!(n__9994 == null)) {
          return cljs.core.edit_and_set.call(null, inode__9989, edit, 2 * idx__9991 + 1, n__9994)
        }else {
          if(this__9988.bitmap === bit__9990) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__9989.edit_and_remove_pair(edit, bit__9990, idx__9991)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9992)) {
        removed_leaf_QMARK_[0] = true;
        return inode__9989.edit_and_remove_pair(edit, bit__9990, idx__9991)
      }else {
        if("\ufdd0'else") {
          return inode__9989
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__9995 = this;
  var inode__9996 = this;
  if(e === this__9995.edit) {
    return inode__9996
  }else {
    var n__9997 = cljs.core.bit_count.call(null, this__9995.bitmap);
    var new_arr__9998 = cljs.core.make_array.call(null, n__9997 < 0 ? 4 : 2 * (n__9997 + 1));
    cljs.core.array_copy.call(null, this__9995.arr, 0, new_arr__9998, 0, 2 * n__9997);
    return new cljs.core.BitmapIndexedNode(e, this__9995.bitmap, new_arr__9998)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__9999 = this;
  var inode__10000 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9999.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10001 = this;
  var inode__10002 = this;
  var bit__10003 = 1 << (hash >>> shift & 31);
  if((this__10001.bitmap & bit__10003) === 0) {
    return not_found
  }else {
    var idx__10004 = cljs.core.bitmap_indexed_node_index.call(null, this__10001.bitmap, bit__10003);
    var key_or_nil__10005 = this__10001.arr[2 * idx__10004];
    var val_or_node__10006 = this__10001.arr[2 * idx__10004 + 1];
    if(key_or_nil__10005 == null) {
      return val_or_node__10006.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10005)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__10005, val_or_node__10006], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__10007 = this;
  var inode__10008 = this;
  var bit__10009 = 1 << (hash >>> shift & 31);
  if((this__10007.bitmap & bit__10009) === 0) {
    return inode__10008
  }else {
    var idx__10010 = cljs.core.bitmap_indexed_node_index.call(null, this__10007.bitmap, bit__10009);
    var key_or_nil__10011 = this__10007.arr[2 * idx__10010];
    var val_or_node__10012 = this__10007.arr[2 * idx__10010 + 1];
    if(key_or_nil__10011 == null) {
      var n__10013 = val_or_node__10012.inode_without(shift + 5, hash, key);
      if(n__10013 === val_or_node__10012) {
        return inode__10008
      }else {
        if(!(n__10013 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__10007.bitmap, cljs.core.clone_and_set.call(null, this__10007.arr, 2 * idx__10010 + 1, n__10013))
        }else {
          if(this__10007.bitmap === bit__10009) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__10007.bitmap ^ bit__10009, cljs.core.remove_pair.call(null, this__10007.arr, idx__10010))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10011)) {
        return new cljs.core.BitmapIndexedNode(null, this__10007.bitmap ^ bit__10009, cljs.core.remove_pair.call(null, this__10007.arr, idx__10010))
      }else {
        if("\ufdd0'else") {
          return inode__10008
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10014 = this;
  var inode__10015 = this;
  var bit__10016 = 1 << (hash >>> shift & 31);
  var idx__10017 = cljs.core.bitmap_indexed_node_index.call(null, this__10014.bitmap, bit__10016);
  if((this__10014.bitmap & bit__10016) === 0) {
    var n__10018 = cljs.core.bit_count.call(null, this__10014.bitmap);
    if(n__10018 >= 16) {
      var nodes__10019 = cljs.core.make_array.call(null, 32);
      var jdx__10020 = hash >>> shift & 31;
      nodes__10019[jdx__10020] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__10021 = 0;
      var j__10022 = 0;
      while(true) {
        if(i__10021 < 32) {
          if((this__10014.bitmap >>> i__10021 & 1) === 0) {
            var G__10037 = i__10021 + 1;
            var G__10038 = j__10022;
            i__10021 = G__10037;
            j__10022 = G__10038;
            continue
          }else {
            nodes__10019[i__10021] = !(this__10014.arr[j__10022] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__10014.arr[j__10022]), this__10014.arr[j__10022], this__10014.arr[j__10022 + 1], added_leaf_QMARK_) : this__10014.arr[j__10022 + 1];
            var G__10039 = i__10021 + 1;
            var G__10040 = j__10022 + 2;
            i__10021 = G__10039;
            j__10022 = G__10040;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__10018 + 1, nodes__10019)
    }else {
      var new_arr__10023 = cljs.core.make_array.call(null, 2 * (n__10018 + 1));
      cljs.core.array_copy.call(null, this__10014.arr, 0, new_arr__10023, 0, 2 * idx__10017);
      new_arr__10023[2 * idx__10017] = key;
      new_arr__10023[2 * idx__10017 + 1] = val;
      cljs.core.array_copy.call(null, this__10014.arr, 2 * idx__10017, new_arr__10023, 2 * (idx__10017 + 1), 2 * (n__10018 - idx__10017));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__10014.bitmap | bit__10016, new_arr__10023)
    }
  }else {
    var key_or_nil__10024 = this__10014.arr[2 * idx__10017];
    var val_or_node__10025 = this__10014.arr[2 * idx__10017 + 1];
    if(key_or_nil__10024 == null) {
      var n__10026 = val_or_node__10025.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10026 === val_or_node__10025) {
        return inode__10015
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__10014.bitmap, cljs.core.clone_and_set.call(null, this__10014.arr, 2 * idx__10017 + 1, n__10026))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10024)) {
        if(val === val_or_node__10025) {
          return inode__10015
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__10014.bitmap, cljs.core.clone_and_set.call(null, this__10014.arr, 2 * idx__10017 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__10014.bitmap, cljs.core.clone_and_set.call(null, this__10014.arr, 2 * idx__10017, null, 2 * idx__10017 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__10024, val_or_node__10025, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10027 = this;
  var inode__10028 = this;
  var bit__10029 = 1 << (hash >>> shift & 31);
  if((this__10027.bitmap & bit__10029) === 0) {
    return not_found
  }else {
    var idx__10030 = cljs.core.bitmap_indexed_node_index.call(null, this__10027.bitmap, bit__10029);
    var key_or_nil__10031 = this__10027.arr[2 * idx__10030];
    var val_or_node__10032 = this__10027.arr[2 * idx__10030 + 1];
    if(key_or_nil__10031 == null) {
      return val_or_node__10032.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10031)) {
        return val_or_node__10032
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__10048 = array_node.arr;
  var len__10049 = 2 * (array_node.cnt - 1);
  var new_arr__10050 = cljs.core.make_array.call(null, len__10049);
  var i__10051 = 0;
  var j__10052 = 1;
  var bitmap__10053 = 0;
  while(true) {
    if(i__10051 < len__10049) {
      if(function() {
        var and__3822__auto____10054 = !(i__10051 === idx);
        if(and__3822__auto____10054) {
          return!(arr__10048[i__10051] == null)
        }else {
          return and__3822__auto____10054
        }
      }()) {
        new_arr__10050[j__10052] = arr__10048[i__10051];
        var G__10055 = i__10051 + 1;
        var G__10056 = j__10052 + 2;
        var G__10057 = bitmap__10053 | 1 << i__10051;
        i__10051 = G__10055;
        j__10052 = G__10056;
        bitmap__10053 = G__10057;
        continue
      }else {
        var G__10058 = i__10051 + 1;
        var G__10059 = j__10052;
        var G__10060 = bitmap__10053;
        i__10051 = G__10058;
        j__10052 = G__10059;
        bitmap__10053 = G__10060;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__10053, new_arr__10050)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10061 = this;
  var inode__10062 = this;
  var idx__10063 = hash >>> shift & 31;
  var node__10064 = this__10061.arr[idx__10063];
  if(node__10064 == null) {
    var editable__10065 = cljs.core.edit_and_set.call(null, inode__10062, edit, idx__10063, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__10065.cnt = editable__10065.cnt + 1;
    return editable__10065
  }else {
    var n__10066 = node__10064.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10066 === node__10064) {
      return inode__10062
    }else {
      return cljs.core.edit_and_set.call(null, inode__10062, edit, idx__10063, n__10066)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__10067 = this;
  var inode__10068 = this;
  return cljs.core.create_array_node_seq.call(null, this__10067.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10069 = this;
  var inode__10070 = this;
  var idx__10071 = hash >>> shift & 31;
  var node__10072 = this__10069.arr[idx__10071];
  if(node__10072 == null) {
    return inode__10070
  }else {
    var n__10073 = node__10072.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__10073 === node__10072) {
      return inode__10070
    }else {
      if(n__10073 == null) {
        if(this__10069.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10070, edit, idx__10071)
        }else {
          var editable__10074 = cljs.core.edit_and_set.call(null, inode__10070, edit, idx__10071, n__10073);
          editable__10074.cnt = editable__10074.cnt - 1;
          return editable__10074
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__10070, edit, idx__10071, n__10073)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__10075 = this;
  var inode__10076 = this;
  if(e === this__10075.edit) {
    return inode__10076
  }else {
    return new cljs.core.ArrayNode(e, this__10075.cnt, this__10075.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__10077 = this;
  var inode__10078 = this;
  var len__10079 = this__10077.arr.length;
  var i__10080 = 0;
  var init__10081 = init;
  while(true) {
    if(i__10080 < len__10079) {
      var node__10082 = this__10077.arr[i__10080];
      if(!(node__10082 == null)) {
        var init__10083 = node__10082.kv_reduce(f, init__10081);
        if(cljs.core.reduced_QMARK_.call(null, init__10083)) {
          return cljs.core.deref.call(null, init__10083)
        }else {
          var G__10102 = i__10080 + 1;
          var G__10103 = init__10083;
          i__10080 = G__10102;
          init__10081 = G__10103;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__10081
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10084 = this;
  var inode__10085 = this;
  var idx__10086 = hash >>> shift & 31;
  var node__10087 = this__10084.arr[idx__10086];
  if(!(node__10087 == null)) {
    return node__10087.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__10088 = this;
  var inode__10089 = this;
  var idx__10090 = hash >>> shift & 31;
  var node__10091 = this__10088.arr[idx__10090];
  if(!(node__10091 == null)) {
    var n__10092 = node__10091.inode_without(shift + 5, hash, key);
    if(n__10092 === node__10091) {
      return inode__10089
    }else {
      if(n__10092 == null) {
        if(this__10088.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10089, null, idx__10090)
        }else {
          return new cljs.core.ArrayNode(null, this__10088.cnt - 1, cljs.core.clone_and_set.call(null, this__10088.arr, idx__10090, n__10092))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__10088.cnt, cljs.core.clone_and_set.call(null, this__10088.arr, idx__10090, n__10092))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__10089
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10093 = this;
  var inode__10094 = this;
  var idx__10095 = hash >>> shift & 31;
  var node__10096 = this__10093.arr[idx__10095];
  if(node__10096 == null) {
    return new cljs.core.ArrayNode(null, this__10093.cnt + 1, cljs.core.clone_and_set.call(null, this__10093.arr, idx__10095, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__10097 = node__10096.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10097 === node__10096) {
      return inode__10094
    }else {
      return new cljs.core.ArrayNode(null, this__10093.cnt, cljs.core.clone_and_set.call(null, this__10093.arr, idx__10095, n__10097))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10098 = this;
  var inode__10099 = this;
  var idx__10100 = hash >>> shift & 31;
  var node__10101 = this__10098.arr[idx__10100];
  if(!(node__10101 == null)) {
    return node__10101.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__10106 = 2 * cnt;
  var i__10107 = 0;
  while(true) {
    if(i__10107 < lim__10106) {
      if(cljs.core.key_test.call(null, key, arr[i__10107])) {
        return i__10107
      }else {
        var G__10108 = i__10107 + 2;
        i__10107 = G__10108;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10109 = this;
  var inode__10110 = this;
  if(hash === this__10109.collision_hash) {
    var idx__10111 = cljs.core.hash_collision_node_find_index.call(null, this__10109.arr, this__10109.cnt, key);
    if(idx__10111 === -1) {
      if(this__10109.arr.length > 2 * this__10109.cnt) {
        var editable__10112 = cljs.core.edit_and_set.call(null, inode__10110, edit, 2 * this__10109.cnt, key, 2 * this__10109.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__10112.cnt = editable__10112.cnt + 1;
        return editable__10112
      }else {
        var len__10113 = this__10109.arr.length;
        var new_arr__10114 = cljs.core.make_array.call(null, len__10113 + 2);
        cljs.core.array_copy.call(null, this__10109.arr, 0, new_arr__10114, 0, len__10113);
        new_arr__10114[len__10113] = key;
        new_arr__10114[len__10113 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__10110.ensure_editable_array(edit, this__10109.cnt + 1, new_arr__10114)
      }
    }else {
      if(this__10109.arr[idx__10111 + 1] === val) {
        return inode__10110
      }else {
        return cljs.core.edit_and_set.call(null, inode__10110, edit, idx__10111 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__10109.collision_hash >>> shift & 31), [null, inode__10110, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__10115 = this;
  var inode__10116 = this;
  return cljs.core.create_inode_seq.call(null, this__10115.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10117 = this;
  var inode__10118 = this;
  var idx__10119 = cljs.core.hash_collision_node_find_index.call(null, this__10117.arr, this__10117.cnt, key);
  if(idx__10119 === -1) {
    return inode__10118
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__10117.cnt === 1) {
      return null
    }else {
      var editable__10120 = inode__10118.ensure_editable(edit);
      var earr__10121 = editable__10120.arr;
      earr__10121[idx__10119] = earr__10121[2 * this__10117.cnt - 2];
      earr__10121[idx__10119 + 1] = earr__10121[2 * this__10117.cnt - 1];
      earr__10121[2 * this__10117.cnt - 1] = null;
      earr__10121[2 * this__10117.cnt - 2] = null;
      editable__10120.cnt = editable__10120.cnt - 1;
      return editable__10120
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__10122 = this;
  var inode__10123 = this;
  if(e === this__10122.edit) {
    return inode__10123
  }else {
    var new_arr__10124 = cljs.core.make_array.call(null, 2 * (this__10122.cnt + 1));
    cljs.core.array_copy.call(null, this__10122.arr, 0, new_arr__10124, 0, 2 * this__10122.cnt);
    return new cljs.core.HashCollisionNode(e, this__10122.collision_hash, this__10122.cnt, new_arr__10124)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__10125 = this;
  var inode__10126 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10125.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10127 = this;
  var inode__10128 = this;
  var idx__10129 = cljs.core.hash_collision_node_find_index.call(null, this__10127.arr, this__10127.cnt, key);
  if(idx__10129 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10127.arr[idx__10129])) {
      return cljs.core.PersistentVector.fromArray([this__10127.arr[idx__10129], this__10127.arr[idx__10129 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__10130 = this;
  var inode__10131 = this;
  var idx__10132 = cljs.core.hash_collision_node_find_index.call(null, this__10130.arr, this__10130.cnt, key);
  if(idx__10132 === -1) {
    return inode__10131
  }else {
    if(this__10130.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__10130.collision_hash, this__10130.cnt - 1, cljs.core.remove_pair.call(null, this__10130.arr, cljs.core.quot.call(null, idx__10132, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10133 = this;
  var inode__10134 = this;
  if(hash === this__10133.collision_hash) {
    var idx__10135 = cljs.core.hash_collision_node_find_index.call(null, this__10133.arr, this__10133.cnt, key);
    if(idx__10135 === -1) {
      var len__10136 = this__10133.arr.length;
      var new_arr__10137 = cljs.core.make_array.call(null, len__10136 + 2);
      cljs.core.array_copy.call(null, this__10133.arr, 0, new_arr__10137, 0, len__10136);
      new_arr__10137[len__10136] = key;
      new_arr__10137[len__10136 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__10133.collision_hash, this__10133.cnt + 1, new_arr__10137)
    }else {
      if(cljs.core._EQ_.call(null, this__10133.arr[idx__10135], val)) {
        return inode__10134
      }else {
        return new cljs.core.HashCollisionNode(null, this__10133.collision_hash, this__10133.cnt, cljs.core.clone_and_set.call(null, this__10133.arr, idx__10135 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__10133.collision_hash >>> shift & 31), [null, inode__10134])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10138 = this;
  var inode__10139 = this;
  var idx__10140 = cljs.core.hash_collision_node_find_index.call(null, this__10138.arr, this__10138.cnt, key);
  if(idx__10140 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10138.arr[idx__10140])) {
      return this__10138.arr[idx__10140 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__10141 = this;
  var inode__10142 = this;
  if(e === this__10141.edit) {
    this__10141.arr = array;
    this__10141.cnt = count;
    return inode__10142
  }else {
    return new cljs.core.HashCollisionNode(this__10141.edit, this__10141.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10147 = cljs.core.hash.call(null, key1);
    if(key1hash__10147 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10147, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10148 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__10147, key1, val1, added_leaf_QMARK___10148).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___10148)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10149 = cljs.core.hash.call(null, key1);
    if(key1hash__10149 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10149, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10150 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__10149, key1, val1, added_leaf_QMARK___10150).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___10150)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10151 = this;
  var h__2192__auto____10152 = this__10151.__hash;
  if(!(h__2192__auto____10152 == null)) {
    return h__2192__auto____10152
  }else {
    var h__2192__auto____10153 = cljs.core.hash_coll.call(null, coll);
    this__10151.__hash = h__2192__auto____10153;
    return h__2192__auto____10153
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10154 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__10155 = this;
  var this__10156 = this;
  return cljs.core.pr_str.call(null, this__10156)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10157 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10158 = this;
  if(this__10158.s == null) {
    return cljs.core.PersistentVector.fromArray([this__10158.nodes[this__10158.i], this__10158.nodes[this__10158.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__10158.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10159 = this;
  if(this__10159.s == null) {
    return cljs.core.create_inode_seq.call(null, this__10159.nodes, this__10159.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__10159.nodes, this__10159.i, cljs.core.next.call(null, this__10159.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10160 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10161 = this;
  return new cljs.core.NodeSeq(meta, this__10161.nodes, this__10161.i, this__10161.s, this__10161.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10162 = this;
  return this__10162.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10163 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10163.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__10170 = nodes.length;
      var j__10171 = i;
      while(true) {
        if(j__10171 < len__10170) {
          if(!(nodes[j__10171] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__10171, null, null)
          }else {
            var temp__3971__auto____10172 = nodes[j__10171 + 1];
            if(cljs.core.truth_(temp__3971__auto____10172)) {
              var node__10173 = temp__3971__auto____10172;
              var temp__3971__auto____10174 = node__10173.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____10174)) {
                var node_seq__10175 = temp__3971__auto____10174;
                return new cljs.core.NodeSeq(null, nodes, j__10171 + 2, node_seq__10175, null)
              }else {
                var G__10176 = j__10171 + 2;
                j__10171 = G__10176;
                continue
              }
            }else {
              var G__10177 = j__10171 + 2;
              j__10171 = G__10177;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10178 = this;
  var h__2192__auto____10179 = this__10178.__hash;
  if(!(h__2192__auto____10179 == null)) {
    return h__2192__auto____10179
  }else {
    var h__2192__auto____10180 = cljs.core.hash_coll.call(null, coll);
    this__10178.__hash = h__2192__auto____10180;
    return h__2192__auto____10180
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10181 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__10182 = this;
  var this__10183 = this;
  return cljs.core.pr_str.call(null, this__10183)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10184 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10185 = this;
  return cljs.core.first.call(null, this__10185.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10186 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__10186.nodes, this__10186.i, cljs.core.next.call(null, this__10186.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10187 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10188 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__10188.nodes, this__10188.i, this__10188.s, this__10188.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10189 = this;
  return this__10189.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10190 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10190.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__10197 = nodes.length;
      var j__10198 = i;
      while(true) {
        if(j__10198 < len__10197) {
          var temp__3971__auto____10199 = nodes[j__10198];
          if(cljs.core.truth_(temp__3971__auto____10199)) {
            var nj__10200 = temp__3971__auto____10199;
            var temp__3971__auto____10201 = nj__10200.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____10201)) {
              var ns__10202 = temp__3971__auto____10201;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__10198 + 1, ns__10202, null)
            }else {
              var G__10203 = j__10198 + 1;
              j__10198 = G__10203;
              continue
            }
          }else {
            var G__10204 = j__10198 + 1;
            j__10198 = G__10204;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10207 = this;
  return new cljs.core.TransientHashMap({}, this__10207.root, this__10207.cnt, this__10207.has_nil_QMARK_, this__10207.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10208 = this;
  var h__2192__auto____10209 = this__10208.__hash;
  if(!(h__2192__auto____10209 == null)) {
    return h__2192__auto____10209
  }else {
    var h__2192__auto____10210 = cljs.core.hash_imap.call(null, coll);
    this__10208.__hash = h__2192__auto____10210;
    return h__2192__auto____10210
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10211 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10212 = this;
  if(k == null) {
    if(this__10212.has_nil_QMARK_) {
      return this__10212.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10212.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__10212.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10213 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____10214 = this__10213.has_nil_QMARK_;
      if(and__3822__auto____10214) {
        return v === this__10213.nil_val
      }else {
        return and__3822__auto____10214
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10213.meta, this__10213.has_nil_QMARK_ ? this__10213.cnt : this__10213.cnt + 1, this__10213.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___10215 = new cljs.core.Box(false);
    var new_root__10216 = (this__10213.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10213.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10215);
    if(new_root__10216 === this__10213.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10213.meta, added_leaf_QMARK___10215.val ? this__10213.cnt + 1 : this__10213.cnt, new_root__10216, this__10213.has_nil_QMARK_, this__10213.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10217 = this;
  if(k == null) {
    return this__10217.has_nil_QMARK_
  }else {
    if(this__10217.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__10217.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10240 = null;
  var G__10240__2 = function(this_sym10218, k) {
    var this__10220 = this;
    var this_sym10218__10221 = this;
    var coll__10222 = this_sym10218__10221;
    return coll__10222.cljs$core$ILookup$_lookup$arity$2(coll__10222, k)
  };
  var G__10240__3 = function(this_sym10219, k, not_found) {
    var this__10220 = this;
    var this_sym10219__10223 = this;
    var coll__10224 = this_sym10219__10223;
    return coll__10224.cljs$core$ILookup$_lookup$arity$3(coll__10224, k, not_found)
  };
  G__10240 = function(this_sym10219, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10240__2.call(this, this_sym10219, k);
      case 3:
        return G__10240__3.call(this, this_sym10219, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10240
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym10205, args10206) {
  var this__10225 = this;
  return this_sym10205.call.apply(this_sym10205, [this_sym10205].concat(args10206.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10226 = this;
  var init__10227 = this__10226.has_nil_QMARK_ ? f.call(null, init, null, this__10226.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__10227)) {
    return cljs.core.deref.call(null, init__10227)
  }else {
    if(!(this__10226.root == null)) {
      return this__10226.root.kv_reduce(f, init__10227)
    }else {
      if("\ufdd0'else") {
        return init__10227
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10228 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__10229 = this;
  var this__10230 = this;
  return cljs.core.pr_str.call(null, this__10230)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10231 = this;
  if(this__10231.cnt > 0) {
    var s__10232 = !(this__10231.root == null) ? this__10231.root.inode_seq() : null;
    if(this__10231.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__10231.nil_val], true), s__10232)
    }else {
      return s__10232
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10233 = this;
  return this__10233.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10234 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10235 = this;
  return new cljs.core.PersistentHashMap(meta, this__10235.cnt, this__10235.root, this__10235.has_nil_QMARK_, this__10235.nil_val, this__10235.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10236 = this;
  return this__10236.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10237 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__10237.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10238 = this;
  if(k == null) {
    if(this__10238.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__10238.meta, this__10238.cnt - 1, this__10238.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__10238.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__10239 = this__10238.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__10239 === this__10238.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__10238.meta, this__10238.cnt - 1, new_root__10239, this__10238.has_nil_QMARK_, this__10238.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__10241 = ks.length;
  var i__10242 = 0;
  var out__10243 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__10242 < len__10241) {
      var G__10244 = i__10242 + 1;
      var G__10245 = cljs.core.assoc_BANG_.call(null, out__10243, ks[i__10242], vs[i__10242]);
      i__10242 = G__10244;
      out__10243 = G__10245;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10243)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10246 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10247 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__10248 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10249 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10250 = this;
  if(k == null) {
    if(this__10250.has_nil_QMARK_) {
      return this__10250.nil_val
    }else {
      return null
    }
  }else {
    if(this__10250.root == null) {
      return null
    }else {
      return this__10250.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10251 = this;
  if(k == null) {
    if(this__10251.has_nil_QMARK_) {
      return this__10251.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10251.root == null) {
      return not_found
    }else {
      return this__10251.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10252 = this;
  if(this__10252.edit) {
    return this__10252.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__10253 = this;
  var tcoll__10254 = this;
  if(this__10253.edit) {
    if(function() {
      var G__10255__10256 = o;
      if(G__10255__10256) {
        if(function() {
          var or__3824__auto____10257 = G__10255__10256.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10257) {
            return or__3824__auto____10257
          }else {
            return G__10255__10256.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10255__10256.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10255__10256)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10255__10256)
      }
    }()) {
      return tcoll__10254.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10258 = cljs.core.seq.call(null, o);
      var tcoll__10259 = tcoll__10254;
      while(true) {
        var temp__3971__auto____10260 = cljs.core.first.call(null, es__10258);
        if(cljs.core.truth_(temp__3971__auto____10260)) {
          var e__10261 = temp__3971__auto____10260;
          var G__10272 = cljs.core.next.call(null, es__10258);
          var G__10273 = tcoll__10259.assoc_BANG_(cljs.core.key.call(null, e__10261), cljs.core.val.call(null, e__10261));
          es__10258 = G__10272;
          tcoll__10259 = G__10273;
          continue
        }else {
          return tcoll__10259
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__10262 = this;
  var tcoll__10263 = this;
  if(this__10262.edit) {
    if(k == null) {
      if(this__10262.nil_val === v) {
      }else {
        this__10262.nil_val = v
      }
      if(this__10262.has_nil_QMARK_) {
      }else {
        this__10262.count = this__10262.count + 1;
        this__10262.has_nil_QMARK_ = true
      }
      return tcoll__10263
    }else {
      var added_leaf_QMARK___10264 = new cljs.core.Box(false);
      var node__10265 = (this__10262.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10262.root).inode_assoc_BANG_(this__10262.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10264);
      if(node__10265 === this__10262.root) {
      }else {
        this__10262.root = node__10265
      }
      if(added_leaf_QMARK___10264.val) {
        this__10262.count = this__10262.count + 1
      }else {
      }
      return tcoll__10263
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__10266 = this;
  var tcoll__10267 = this;
  if(this__10266.edit) {
    if(k == null) {
      if(this__10266.has_nil_QMARK_) {
        this__10266.has_nil_QMARK_ = false;
        this__10266.nil_val = null;
        this__10266.count = this__10266.count - 1;
        return tcoll__10267
      }else {
        return tcoll__10267
      }
    }else {
      if(this__10266.root == null) {
        return tcoll__10267
      }else {
        var removed_leaf_QMARK___10268 = new cljs.core.Box(false);
        var node__10269 = this__10266.root.inode_without_BANG_(this__10266.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___10268);
        if(node__10269 === this__10266.root) {
        }else {
          this__10266.root = node__10269
        }
        if(cljs.core.truth_(removed_leaf_QMARK___10268[0])) {
          this__10266.count = this__10266.count - 1
        }else {
        }
        return tcoll__10267
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__10270 = this;
  var tcoll__10271 = this;
  if(this__10270.edit) {
    this__10270.edit = null;
    return new cljs.core.PersistentHashMap(null, this__10270.count, this__10270.root, this__10270.has_nil_QMARK_, this__10270.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__10276 = node;
  var stack__10277 = stack;
  while(true) {
    if(!(t__10276 == null)) {
      var G__10278 = ascending_QMARK_ ? t__10276.left : t__10276.right;
      var G__10279 = cljs.core.conj.call(null, stack__10277, t__10276);
      t__10276 = G__10278;
      stack__10277 = G__10279;
      continue
    }else {
      return stack__10277
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10280 = this;
  var h__2192__auto____10281 = this__10280.__hash;
  if(!(h__2192__auto____10281 == null)) {
    return h__2192__auto____10281
  }else {
    var h__2192__auto____10282 = cljs.core.hash_coll.call(null, coll);
    this__10280.__hash = h__2192__auto____10282;
    return h__2192__auto____10282
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10283 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__10284 = this;
  var this__10285 = this;
  return cljs.core.pr_str.call(null, this__10285)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10286 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10287 = this;
  if(this__10287.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__10287.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__10288 = this;
  return cljs.core.peek.call(null, this__10288.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__10289 = this;
  var t__10290 = cljs.core.first.call(null, this__10289.stack);
  var next_stack__10291 = cljs.core.tree_map_seq_push.call(null, this__10289.ascending_QMARK_ ? t__10290.right : t__10290.left, cljs.core.next.call(null, this__10289.stack), this__10289.ascending_QMARK_);
  if(!(next_stack__10291 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__10291, this__10289.ascending_QMARK_, this__10289.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10292 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10293 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__10293.stack, this__10293.ascending_QMARK_, this__10293.cnt, this__10293.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10294 = this;
  return this__10294.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____10296 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____10296) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____10296
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____10298 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____10298) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____10298
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__10302 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__10302)) {
    return cljs.core.deref.call(null, init__10302)
  }else {
    var init__10303 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__10302) : init__10302;
    if(cljs.core.reduced_QMARK_.call(null, init__10303)) {
      return cljs.core.deref.call(null, init__10303)
    }else {
      var init__10304 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__10303) : init__10303;
      if(cljs.core.reduced_QMARK_.call(null, init__10304)) {
        return cljs.core.deref.call(null, init__10304)
      }else {
        return init__10304
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10307 = this;
  var h__2192__auto____10308 = this__10307.__hash;
  if(!(h__2192__auto____10308 == null)) {
    return h__2192__auto____10308
  }else {
    var h__2192__auto____10309 = cljs.core.hash_coll.call(null, coll);
    this__10307.__hash = h__2192__auto____10309;
    return h__2192__auto____10309
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10310 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10311 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10312 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10312.key, this__10312.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10360 = null;
  var G__10360__2 = function(this_sym10313, k) {
    var this__10315 = this;
    var this_sym10313__10316 = this;
    var node__10317 = this_sym10313__10316;
    return node__10317.cljs$core$ILookup$_lookup$arity$2(node__10317, k)
  };
  var G__10360__3 = function(this_sym10314, k, not_found) {
    var this__10315 = this;
    var this_sym10314__10318 = this;
    var node__10319 = this_sym10314__10318;
    return node__10319.cljs$core$ILookup$_lookup$arity$3(node__10319, k, not_found)
  };
  G__10360 = function(this_sym10314, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10360__2.call(this, this_sym10314, k);
      case 3:
        return G__10360__3.call(this, this_sym10314, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10360
}();
cljs.core.BlackNode.prototype.apply = function(this_sym10305, args10306) {
  var this__10320 = this;
  return this_sym10305.call.apply(this_sym10305, [this_sym10305].concat(args10306.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10321 = this;
  return cljs.core.PersistentVector.fromArray([this__10321.key, this__10321.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10322 = this;
  return this__10322.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10323 = this;
  return this__10323.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__10324 = this;
  var node__10325 = this;
  return ins.balance_right(node__10325)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__10326 = this;
  var node__10327 = this;
  return new cljs.core.RedNode(this__10326.key, this__10326.val, this__10326.left, this__10326.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__10328 = this;
  var node__10329 = this;
  return cljs.core.balance_right_del.call(null, this__10328.key, this__10328.val, this__10328.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__10330 = this;
  var node__10331 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__10332 = this;
  var node__10333 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10333, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__10334 = this;
  var node__10335 = this;
  return cljs.core.balance_left_del.call(null, this__10334.key, this__10334.val, del, this__10334.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__10336 = this;
  var node__10337 = this;
  return ins.balance_left(node__10337)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__10338 = this;
  var node__10339 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__10339, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__10361 = null;
  var G__10361__0 = function() {
    var this__10340 = this;
    var this__10342 = this;
    return cljs.core.pr_str.call(null, this__10342)
  };
  G__10361 = function() {
    switch(arguments.length) {
      case 0:
        return G__10361__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10361
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__10343 = this;
  var node__10344 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10344, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__10345 = this;
  var node__10346 = this;
  return node__10346
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10347 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10348 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10349 = this;
  return cljs.core.list.call(null, this__10349.key, this__10349.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10350 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10351 = this;
  return this__10351.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10352 = this;
  return cljs.core.PersistentVector.fromArray([this__10352.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10353 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10353.key, this__10353.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10354 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10355 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10355.key, this__10355.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10356 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10357 = this;
  if(n === 0) {
    return this__10357.key
  }else {
    if(n === 1) {
      return this__10357.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10358 = this;
  if(n === 0) {
    return this__10358.key
  }else {
    if(n === 1) {
      return this__10358.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10359 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10364 = this;
  var h__2192__auto____10365 = this__10364.__hash;
  if(!(h__2192__auto____10365 == null)) {
    return h__2192__auto____10365
  }else {
    var h__2192__auto____10366 = cljs.core.hash_coll.call(null, coll);
    this__10364.__hash = h__2192__auto____10366;
    return h__2192__auto____10366
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10367 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10368 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10369 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10369.key, this__10369.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__10417 = null;
  var G__10417__2 = function(this_sym10370, k) {
    var this__10372 = this;
    var this_sym10370__10373 = this;
    var node__10374 = this_sym10370__10373;
    return node__10374.cljs$core$ILookup$_lookup$arity$2(node__10374, k)
  };
  var G__10417__3 = function(this_sym10371, k, not_found) {
    var this__10372 = this;
    var this_sym10371__10375 = this;
    var node__10376 = this_sym10371__10375;
    return node__10376.cljs$core$ILookup$_lookup$arity$3(node__10376, k, not_found)
  };
  G__10417 = function(this_sym10371, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10417__2.call(this, this_sym10371, k);
      case 3:
        return G__10417__3.call(this, this_sym10371, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10417
}();
cljs.core.RedNode.prototype.apply = function(this_sym10362, args10363) {
  var this__10377 = this;
  return this_sym10362.call.apply(this_sym10362, [this_sym10362].concat(args10363.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10378 = this;
  return cljs.core.PersistentVector.fromArray([this__10378.key, this__10378.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10379 = this;
  return this__10379.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10380 = this;
  return this__10380.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__10381 = this;
  var node__10382 = this;
  return new cljs.core.RedNode(this__10381.key, this__10381.val, this__10381.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__10383 = this;
  var node__10384 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__10385 = this;
  var node__10386 = this;
  return new cljs.core.RedNode(this__10385.key, this__10385.val, this__10385.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__10387 = this;
  var node__10388 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__10389 = this;
  var node__10390 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10390, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__10391 = this;
  var node__10392 = this;
  return new cljs.core.RedNode(this__10391.key, this__10391.val, del, this__10391.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__10393 = this;
  var node__10394 = this;
  return new cljs.core.RedNode(this__10393.key, this__10393.val, ins, this__10393.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__10395 = this;
  var node__10396 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10395.left)) {
    return new cljs.core.RedNode(this__10395.key, this__10395.val, this__10395.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__10395.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10395.right)) {
      return new cljs.core.RedNode(this__10395.right.key, this__10395.right.val, new cljs.core.BlackNode(this__10395.key, this__10395.val, this__10395.left, this__10395.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__10395.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__10396, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__10418 = null;
  var G__10418__0 = function() {
    var this__10397 = this;
    var this__10399 = this;
    return cljs.core.pr_str.call(null, this__10399)
  };
  G__10418 = function() {
    switch(arguments.length) {
      case 0:
        return G__10418__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10418
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__10400 = this;
  var node__10401 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10400.right)) {
    return new cljs.core.RedNode(this__10400.key, this__10400.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10400.left, null), this__10400.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10400.left)) {
      return new cljs.core.RedNode(this__10400.left.key, this__10400.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10400.left.left, null), new cljs.core.BlackNode(this__10400.key, this__10400.val, this__10400.left.right, this__10400.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10401, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__10402 = this;
  var node__10403 = this;
  return new cljs.core.BlackNode(this__10402.key, this__10402.val, this__10402.left, this__10402.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10404 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10405 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10406 = this;
  return cljs.core.list.call(null, this__10406.key, this__10406.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10407 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10408 = this;
  return this__10408.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10409 = this;
  return cljs.core.PersistentVector.fromArray([this__10409.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10410 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10410.key, this__10410.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10411 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10412 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10412.key, this__10412.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10413 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10414 = this;
  if(n === 0) {
    return this__10414.key
  }else {
    if(n === 1) {
      return this__10414.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10415 = this;
  if(n === 0) {
    return this__10415.key
  }else {
    if(n === 1) {
      return this__10415.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10416 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__10422 = comp.call(null, k, tree.key);
    if(c__10422 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__10422 < 0) {
        var ins__10423 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__10423 == null)) {
          return tree.add_left(ins__10423)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__10424 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__10424 == null)) {
            return tree.add_right(ins__10424)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__10427 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10427)) {
            return new cljs.core.RedNode(app__10427.key, app__10427.val, new cljs.core.RedNode(left.key, left.val, left.left, app__10427.left, null), new cljs.core.RedNode(right.key, right.val, app__10427.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__10427, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__10428 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10428)) {
              return new cljs.core.RedNode(app__10428.key, app__10428.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__10428.left, null), new cljs.core.BlackNode(right.key, right.val, app__10428.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__10428, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__10434 = comp.call(null, k, tree.key);
    if(c__10434 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__10434 < 0) {
        var del__10435 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____10436 = !(del__10435 == null);
          if(or__3824__auto____10436) {
            return or__3824__auto____10436
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__10435, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__10435, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__10437 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____10438 = !(del__10437 == null);
            if(or__3824__auto____10438) {
              return or__3824__auto____10438
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__10437)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__10437, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__10441 = tree.key;
  var c__10442 = comp.call(null, k, tk__10441);
  if(c__10442 === 0) {
    return tree.replace(tk__10441, v, tree.left, tree.right)
  }else {
    if(c__10442 < 0) {
      return tree.replace(tk__10441, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__10441, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10445 = this;
  var h__2192__auto____10446 = this__10445.__hash;
  if(!(h__2192__auto____10446 == null)) {
    return h__2192__auto____10446
  }else {
    var h__2192__auto____10447 = cljs.core.hash_imap.call(null, coll);
    this__10445.__hash = h__2192__auto____10447;
    return h__2192__auto____10447
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10448 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10449 = this;
  var n__10450 = coll.entry_at(k);
  if(!(n__10450 == null)) {
    return n__10450.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10451 = this;
  var found__10452 = [null];
  var t__10453 = cljs.core.tree_map_add.call(null, this__10451.comp, this__10451.tree, k, v, found__10452);
  if(t__10453 == null) {
    var found_node__10454 = cljs.core.nth.call(null, found__10452, 0);
    if(cljs.core._EQ_.call(null, v, found_node__10454.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10451.comp, cljs.core.tree_map_replace.call(null, this__10451.comp, this__10451.tree, k, v), this__10451.cnt, this__10451.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10451.comp, t__10453.blacken(), this__10451.cnt + 1, this__10451.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10455 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10489 = null;
  var G__10489__2 = function(this_sym10456, k) {
    var this__10458 = this;
    var this_sym10456__10459 = this;
    var coll__10460 = this_sym10456__10459;
    return coll__10460.cljs$core$ILookup$_lookup$arity$2(coll__10460, k)
  };
  var G__10489__3 = function(this_sym10457, k, not_found) {
    var this__10458 = this;
    var this_sym10457__10461 = this;
    var coll__10462 = this_sym10457__10461;
    return coll__10462.cljs$core$ILookup$_lookup$arity$3(coll__10462, k, not_found)
  };
  G__10489 = function(this_sym10457, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10489__2.call(this, this_sym10457, k);
      case 3:
        return G__10489__3.call(this, this_sym10457, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10489
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym10443, args10444) {
  var this__10463 = this;
  return this_sym10443.call.apply(this_sym10443, [this_sym10443].concat(args10444.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10464 = this;
  if(!(this__10464.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__10464.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10465 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10466 = this;
  if(this__10466.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10466.tree, false, this__10466.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__10467 = this;
  var this__10468 = this;
  return cljs.core.pr_str.call(null, this__10468)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10469 = this;
  var coll__10470 = this;
  var t__10471 = this__10469.tree;
  while(true) {
    if(!(t__10471 == null)) {
      var c__10472 = this__10469.comp.call(null, k, t__10471.key);
      if(c__10472 === 0) {
        return t__10471
      }else {
        if(c__10472 < 0) {
          var G__10490 = t__10471.left;
          t__10471 = G__10490;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10491 = t__10471.right;
            t__10471 = G__10491;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10473 = this;
  if(this__10473.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10473.tree, ascending_QMARK_, this__10473.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10474 = this;
  if(this__10474.cnt > 0) {
    var stack__10475 = null;
    var t__10476 = this__10474.tree;
    while(true) {
      if(!(t__10476 == null)) {
        var c__10477 = this__10474.comp.call(null, k, t__10476.key);
        if(c__10477 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10475, t__10476), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10477 < 0) {
              var G__10492 = cljs.core.conj.call(null, stack__10475, t__10476);
              var G__10493 = t__10476.left;
              stack__10475 = G__10492;
              t__10476 = G__10493;
              continue
            }else {
              var G__10494 = stack__10475;
              var G__10495 = t__10476.right;
              stack__10475 = G__10494;
              t__10476 = G__10495;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10477 > 0) {
                var G__10496 = cljs.core.conj.call(null, stack__10475, t__10476);
                var G__10497 = t__10476.right;
                stack__10475 = G__10496;
                t__10476 = G__10497;
                continue
              }else {
                var G__10498 = stack__10475;
                var G__10499 = t__10476.left;
                stack__10475 = G__10498;
                t__10476 = G__10499;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10475 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10475, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10478 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10479 = this;
  return this__10479.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10480 = this;
  if(this__10480.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10480.tree, true, this__10480.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10481 = this;
  return this__10481.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10482 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10483 = this;
  return new cljs.core.PersistentTreeMap(this__10483.comp, this__10483.tree, this__10483.cnt, meta, this__10483.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10484 = this;
  return this__10484.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10485 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10485.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10486 = this;
  var found__10487 = [null];
  var t__10488 = cljs.core.tree_map_remove.call(null, this__10486.comp, this__10486.tree, k, found__10487);
  if(t__10488 == null) {
    if(cljs.core.nth.call(null, found__10487, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10486.comp, null, 0, this__10486.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10486.comp, t__10488.blacken(), this__10486.cnt - 1, this__10486.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10502 = cljs.core.seq.call(null, keyvals);
    var out__10503 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10502) {
        var G__10504 = cljs.core.nnext.call(null, in__10502);
        var G__10505 = cljs.core.assoc_BANG_.call(null, out__10503, cljs.core.first.call(null, in__10502), cljs.core.second.call(null, in__10502));
        in__10502 = G__10504;
        out__10503 = G__10505;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10503)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10506) {
    var keyvals = cljs.core.seq(arglist__10506);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10507) {
    var keyvals = cljs.core.seq(arglist__10507);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__10511 = [];
    var obj__10512 = {};
    var kvs__10513 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__10513) {
        ks__10511.push(cljs.core.first.call(null, kvs__10513));
        obj__10512[cljs.core.first.call(null, kvs__10513)] = cljs.core.second.call(null, kvs__10513);
        var G__10514 = cljs.core.nnext.call(null, kvs__10513);
        kvs__10513 = G__10514;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__10511, obj__10512)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10515) {
    var keyvals = cljs.core.seq(arglist__10515);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10518 = cljs.core.seq.call(null, keyvals);
    var out__10519 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10518) {
        var G__10520 = cljs.core.nnext.call(null, in__10518);
        var G__10521 = cljs.core.assoc.call(null, out__10519, cljs.core.first.call(null, in__10518), cljs.core.second.call(null, in__10518));
        in__10518 = G__10520;
        out__10519 = G__10521;
        continue
      }else {
        return out__10519
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10522) {
    var keyvals = cljs.core.seq(arglist__10522);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10525 = cljs.core.seq.call(null, keyvals);
    var out__10526 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10525) {
        var G__10527 = cljs.core.nnext.call(null, in__10525);
        var G__10528 = cljs.core.assoc.call(null, out__10526, cljs.core.first.call(null, in__10525), cljs.core.second.call(null, in__10525));
        in__10525 = G__10527;
        out__10526 = G__10528;
        continue
      }else {
        return out__10526
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10529) {
    var comparator = cljs.core.first(arglist__10529);
    var keyvals = cljs.core.rest(arglist__10529);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10530_SHARP_, p2__10531_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____10533 = p1__10530_SHARP_;
          if(cljs.core.truth_(or__3824__auto____10533)) {
            return or__3824__auto____10533
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10531_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10534) {
    var maps = cljs.core.seq(arglist__10534);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10542 = function(m, e) {
        var k__10540 = cljs.core.first.call(null, e);
        var v__10541 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10540)) {
          return cljs.core.assoc.call(null, m, k__10540, f.call(null, cljs.core._lookup.call(null, m, k__10540, null), v__10541))
        }else {
          return cljs.core.assoc.call(null, m, k__10540, v__10541)
        }
      };
      var merge2__10544 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10542, function() {
          var or__3824__auto____10543 = m1;
          if(cljs.core.truth_(or__3824__auto____10543)) {
            return or__3824__auto____10543
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10544, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10545) {
    var f = cljs.core.first(arglist__10545);
    var maps = cljs.core.rest(arglist__10545);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10550 = cljs.core.ObjMap.EMPTY;
  var keys__10551 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10551) {
      var key__10552 = cljs.core.first.call(null, keys__10551);
      var entry__10553 = cljs.core._lookup.call(null, map, key__10552, "\ufdd0'cljs.core/not-found");
      var G__10554 = cljs.core.not_EQ_.call(null, entry__10553, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__10550, key__10552, entry__10553) : ret__10550;
      var G__10555 = cljs.core.next.call(null, keys__10551);
      ret__10550 = G__10554;
      keys__10551 = G__10555;
      continue
    }else {
      return ret__10550
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10559 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10559.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10560 = this;
  var h__2192__auto____10561 = this__10560.__hash;
  if(!(h__2192__auto____10561 == null)) {
    return h__2192__auto____10561
  }else {
    var h__2192__auto____10562 = cljs.core.hash_iset.call(null, coll);
    this__10560.__hash = h__2192__auto____10562;
    return h__2192__auto____10562
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10563 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10564 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10564.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10585 = null;
  var G__10585__2 = function(this_sym10565, k) {
    var this__10567 = this;
    var this_sym10565__10568 = this;
    var coll__10569 = this_sym10565__10568;
    return coll__10569.cljs$core$ILookup$_lookup$arity$2(coll__10569, k)
  };
  var G__10585__3 = function(this_sym10566, k, not_found) {
    var this__10567 = this;
    var this_sym10566__10570 = this;
    var coll__10571 = this_sym10566__10570;
    return coll__10571.cljs$core$ILookup$_lookup$arity$3(coll__10571, k, not_found)
  };
  G__10585 = function(this_sym10566, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10585__2.call(this, this_sym10566, k);
      case 3:
        return G__10585__3.call(this, this_sym10566, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10585
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10557, args10558) {
  var this__10572 = this;
  return this_sym10557.call.apply(this_sym10557, [this_sym10557].concat(args10558.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10573 = this;
  return new cljs.core.PersistentHashSet(this__10573.meta, cljs.core.assoc.call(null, this__10573.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10574 = this;
  var this__10575 = this;
  return cljs.core.pr_str.call(null, this__10575)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10576 = this;
  return cljs.core.keys.call(null, this__10576.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10577 = this;
  return new cljs.core.PersistentHashSet(this__10577.meta, cljs.core.dissoc.call(null, this__10577.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10578 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10579 = this;
  var and__3822__auto____10580 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10580) {
    var and__3822__auto____10581 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10581) {
      return cljs.core.every_QMARK_.call(null, function(p1__10556_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10556_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10581
    }
  }else {
    return and__3822__auto____10580
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10582 = this;
  return new cljs.core.PersistentHashSet(meta, this__10582.hash_map, this__10582.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10583 = this;
  return this__10583.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10584 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10584.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__10586 = cljs.core.count.call(null, items);
  var i__10587 = 0;
  var out__10588 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__10587 < len__10586) {
      var G__10589 = i__10587 + 1;
      var G__10590 = cljs.core.conj_BANG_.call(null, out__10588, items[i__10587]);
      i__10587 = G__10589;
      out__10588 = G__10590;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10588)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10608 = null;
  var G__10608__2 = function(this_sym10594, k) {
    var this__10596 = this;
    var this_sym10594__10597 = this;
    var tcoll__10598 = this_sym10594__10597;
    if(cljs.core._lookup.call(null, this__10596.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10608__3 = function(this_sym10595, k, not_found) {
    var this__10596 = this;
    var this_sym10595__10599 = this;
    var tcoll__10600 = this_sym10595__10599;
    if(cljs.core._lookup.call(null, this__10596.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10608 = function(this_sym10595, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10608__2.call(this, this_sym10595, k);
      case 3:
        return G__10608__3.call(this, this_sym10595, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10608
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10592, args10593) {
  var this__10601 = this;
  return this_sym10592.call.apply(this_sym10592, [this_sym10592].concat(args10593.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10602 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10603 = this;
  if(cljs.core._lookup.call(null, this__10603.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10604 = this;
  return cljs.core.count.call(null, this__10604.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10605 = this;
  this__10605.transient_map = cljs.core.dissoc_BANG_.call(null, this__10605.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10606 = this;
  this__10606.transient_map = cljs.core.assoc_BANG_.call(null, this__10606.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10607 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10607.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10611 = this;
  var h__2192__auto____10612 = this__10611.__hash;
  if(!(h__2192__auto____10612 == null)) {
    return h__2192__auto____10612
  }else {
    var h__2192__auto____10613 = cljs.core.hash_iset.call(null, coll);
    this__10611.__hash = h__2192__auto____10613;
    return h__2192__auto____10613
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10614 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10615 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10615.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10641 = null;
  var G__10641__2 = function(this_sym10616, k) {
    var this__10618 = this;
    var this_sym10616__10619 = this;
    var coll__10620 = this_sym10616__10619;
    return coll__10620.cljs$core$ILookup$_lookup$arity$2(coll__10620, k)
  };
  var G__10641__3 = function(this_sym10617, k, not_found) {
    var this__10618 = this;
    var this_sym10617__10621 = this;
    var coll__10622 = this_sym10617__10621;
    return coll__10622.cljs$core$ILookup$_lookup$arity$3(coll__10622, k, not_found)
  };
  G__10641 = function(this_sym10617, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10641__2.call(this, this_sym10617, k);
      case 3:
        return G__10641__3.call(this, this_sym10617, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10641
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10609, args10610) {
  var this__10623 = this;
  return this_sym10609.call.apply(this_sym10609, [this_sym10609].concat(args10610.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10624 = this;
  return new cljs.core.PersistentTreeSet(this__10624.meta, cljs.core.assoc.call(null, this__10624.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10625 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10625.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10626 = this;
  var this__10627 = this;
  return cljs.core.pr_str.call(null, this__10627)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10628 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10628.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10629 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10629.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10630 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10631 = this;
  return cljs.core._comparator.call(null, this__10631.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10632 = this;
  return cljs.core.keys.call(null, this__10632.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10633 = this;
  return new cljs.core.PersistentTreeSet(this__10633.meta, cljs.core.dissoc.call(null, this__10633.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10634 = this;
  return cljs.core.count.call(null, this__10634.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10635 = this;
  var and__3822__auto____10636 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____10636) {
    var and__3822__auto____10637 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____10637) {
      return cljs.core.every_QMARK_.call(null, function(p1__10591_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10591_SHARP_)
      }, other)
    }else {
      return and__3822__auto____10637
    }
  }else {
    return and__3822__auto____10636
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10638 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10638.tree_map, this__10638.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10639 = this;
  return this__10639.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10640 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10640.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10646__delegate = function(keys) {
      var in__10644 = cljs.core.seq.call(null, keys);
      var out__10645 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__10644)) {
          var G__10647 = cljs.core.next.call(null, in__10644);
          var G__10648 = cljs.core.conj_BANG_.call(null, out__10645, cljs.core.first.call(null, in__10644));
          in__10644 = G__10647;
          out__10645 = G__10648;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__10645)
        }
        break
      }
    };
    var G__10646 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10646__delegate.call(this, keys)
    };
    G__10646.cljs$lang$maxFixedArity = 0;
    G__10646.cljs$lang$applyTo = function(arglist__10649) {
      var keys = cljs.core.seq(arglist__10649);
      return G__10646__delegate(keys)
    };
    G__10646.cljs$lang$arity$variadic = G__10646__delegate;
    return G__10646
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10650) {
    var keys = cljs.core.seq(arglist__10650);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10652) {
    var comparator = cljs.core.first(arglist__10652);
    var keys = cljs.core.rest(arglist__10652);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10658 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____10659 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____10659)) {
        var e__10660 = temp__3971__auto____10659;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10660))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10658, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10651_SHARP_) {
      var temp__3971__auto____10661 = cljs.core.find.call(null, smap, p1__10651_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____10661)) {
        var e__10662 = temp__3971__auto____10661;
        return cljs.core.second.call(null, e__10662)
      }else {
        return p1__10651_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10692 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10685, seen) {
        while(true) {
          var vec__10686__10687 = p__10685;
          var f__10688 = cljs.core.nth.call(null, vec__10686__10687, 0, null);
          var xs__10689 = vec__10686__10687;
          var temp__3974__auto____10690 = cljs.core.seq.call(null, xs__10689);
          if(temp__3974__auto____10690) {
            var s__10691 = temp__3974__auto____10690;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10688)) {
              var G__10693 = cljs.core.rest.call(null, s__10691);
              var G__10694 = seen;
              p__10685 = G__10693;
              seen = G__10694;
              continue
            }else {
              return cljs.core.cons.call(null, f__10688, step.call(null, cljs.core.rest.call(null, s__10691), cljs.core.conj.call(null, seen, f__10688)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10692.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__10697 = cljs.core.PersistentVector.EMPTY;
  var s__10698 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10698)) {
      var G__10699 = cljs.core.conj.call(null, ret__10697, cljs.core.first.call(null, s__10698));
      var G__10700 = cljs.core.next.call(null, s__10698);
      ret__10697 = G__10699;
      s__10698 = G__10700;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10697)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____10703 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____10703) {
        return or__3824__auto____10703
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10704 = x.lastIndexOf("/");
      if(i__10704 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10704 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____10707 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____10707) {
      return or__3824__auto____10707
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10708 = x.lastIndexOf("/");
    if(i__10708 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10708)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10715 = cljs.core.ObjMap.EMPTY;
  var ks__10716 = cljs.core.seq.call(null, keys);
  var vs__10717 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____10718 = ks__10716;
      if(and__3822__auto____10718) {
        return vs__10717
      }else {
        return and__3822__auto____10718
      }
    }()) {
      var G__10719 = cljs.core.assoc.call(null, map__10715, cljs.core.first.call(null, ks__10716), cljs.core.first.call(null, vs__10717));
      var G__10720 = cljs.core.next.call(null, ks__10716);
      var G__10721 = cljs.core.next.call(null, vs__10717);
      map__10715 = G__10719;
      ks__10716 = G__10720;
      vs__10717 = G__10721;
      continue
    }else {
      return map__10715
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10724__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10709_SHARP_, p2__10710_SHARP_) {
        return max_key.call(null, k, p1__10709_SHARP_, p2__10710_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10724 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10724__delegate.call(this, k, x, y, more)
    };
    G__10724.cljs$lang$maxFixedArity = 3;
    G__10724.cljs$lang$applyTo = function(arglist__10725) {
      var k = cljs.core.first(arglist__10725);
      var x = cljs.core.first(cljs.core.next(arglist__10725));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10725)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10725)));
      return G__10724__delegate(k, x, y, more)
    };
    G__10724.cljs$lang$arity$variadic = G__10724__delegate;
    return G__10724
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10726__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10722_SHARP_, p2__10723_SHARP_) {
        return min_key.call(null, k, p1__10722_SHARP_, p2__10723_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10726 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10726__delegate.call(this, k, x, y, more)
    };
    G__10726.cljs$lang$maxFixedArity = 3;
    G__10726.cljs$lang$applyTo = function(arglist__10727) {
      var k = cljs.core.first(arglist__10727);
      var x = cljs.core.first(cljs.core.next(arglist__10727));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10727)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10727)));
      return G__10726__delegate(k, x, y, more)
    };
    G__10726.cljs$lang$arity$variadic = G__10726__delegate;
    return G__10726
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10730 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10730) {
        var s__10731 = temp__3974__auto____10730;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__10731), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__10731)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10734 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10734) {
      var s__10735 = temp__3974__auto____10734;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__10735)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10735), take_while.call(null, pred, cljs.core.rest.call(null, s__10735)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__10737 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__10737.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__10749 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____10750 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____10750)) {
        var vec__10751__10752 = temp__3974__auto____10750;
        var e__10753 = cljs.core.nth.call(null, vec__10751__10752, 0, null);
        var s__10754 = vec__10751__10752;
        if(cljs.core.truth_(include__10749.call(null, e__10753))) {
          return s__10754
        }else {
          return cljs.core.next.call(null, s__10754)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10749, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10755 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____10755)) {
      var vec__10756__10757 = temp__3974__auto____10755;
      var e__10758 = cljs.core.nth.call(null, vec__10756__10757, 0, null);
      var s__10759 = vec__10756__10757;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__10758)) ? s__10759 : cljs.core.next.call(null, s__10759))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__10771 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____10772 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____10772)) {
        var vec__10773__10774 = temp__3974__auto____10772;
        var e__10775 = cljs.core.nth.call(null, vec__10773__10774, 0, null);
        var s__10776 = vec__10773__10774;
        if(cljs.core.truth_(include__10771.call(null, e__10775))) {
          return s__10776
        }else {
          return cljs.core.next.call(null, s__10776)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10771, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____10777 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____10777)) {
      var vec__10778__10779 = temp__3974__auto____10777;
      var e__10780 = cljs.core.nth.call(null, vec__10778__10779, 0, null);
      var s__10781 = vec__10778__10779;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__10780)) ? s__10781 : cljs.core.next.call(null, s__10781))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__10782 = this;
  var h__2192__auto____10783 = this__10782.__hash;
  if(!(h__2192__auto____10783 == null)) {
    return h__2192__auto____10783
  }else {
    var h__2192__auto____10784 = cljs.core.hash_coll.call(null, rng);
    this__10782.__hash = h__2192__auto____10784;
    return h__2192__auto____10784
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__10785 = this;
  if(this__10785.step > 0) {
    if(this__10785.start + this__10785.step < this__10785.end) {
      return new cljs.core.Range(this__10785.meta, this__10785.start + this__10785.step, this__10785.end, this__10785.step, null)
    }else {
      return null
    }
  }else {
    if(this__10785.start + this__10785.step > this__10785.end) {
      return new cljs.core.Range(this__10785.meta, this__10785.start + this__10785.step, this__10785.end, this__10785.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__10786 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__10787 = this;
  var this__10788 = this;
  return cljs.core.pr_str.call(null, this__10788)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__10789 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__10790 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__10791 = this;
  if(this__10791.step > 0) {
    if(this__10791.start < this__10791.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__10791.start > this__10791.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__10792 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__10792.end - this__10792.start) / this__10792.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__10793 = this;
  return this__10793.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__10794 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__10794.meta, this__10794.start + this__10794.step, this__10794.end, this__10794.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__10795 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__10796 = this;
  return new cljs.core.Range(meta, this__10796.start, this__10796.end, this__10796.step, this__10796.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__10797 = this;
  return this__10797.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__10798 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10798.start + n * this__10798.step
  }else {
    if(function() {
      var and__3822__auto____10799 = this__10798.start > this__10798.end;
      if(and__3822__auto____10799) {
        return this__10798.step === 0
      }else {
        return and__3822__auto____10799
      }
    }()) {
      return this__10798.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__10800 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10800.start + n * this__10800.step
  }else {
    if(function() {
      var and__3822__auto____10801 = this__10800.start > this__10800.end;
      if(and__3822__auto____10801) {
        return this__10800.step === 0
      }else {
        return and__3822__auto____10801
      }
    }()) {
      return this__10800.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__10802 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10802.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10805 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10805) {
      var s__10806 = temp__3974__auto____10805;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__10806), take_nth.call(null, n, cljs.core.drop.call(null, n, s__10806)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10813 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10813) {
      var s__10814 = temp__3974__auto____10813;
      var fst__10815 = cljs.core.first.call(null, s__10814);
      var fv__10816 = f.call(null, fst__10815);
      var run__10817 = cljs.core.cons.call(null, fst__10815, cljs.core.take_while.call(null, function(p1__10807_SHARP_) {
        return cljs.core._EQ_.call(null, fv__10816, f.call(null, p1__10807_SHARP_))
      }, cljs.core.next.call(null, s__10814)));
      return cljs.core.cons.call(null, run__10817, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__10817), s__10814))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____10832 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____10832) {
        var s__10833 = temp__3971__auto____10832;
        return reductions.call(null, f, cljs.core.first.call(null, s__10833), cljs.core.rest.call(null, s__10833))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10834 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10834) {
        var s__10835 = temp__3974__auto____10834;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__10835)), cljs.core.rest.call(null, s__10835))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10838 = null;
      var G__10838__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__10838__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__10838__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__10838__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__10838__4 = function() {
        var G__10839__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__10839 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10839__delegate.call(this, x, y, z, args)
        };
        G__10839.cljs$lang$maxFixedArity = 3;
        G__10839.cljs$lang$applyTo = function(arglist__10840) {
          var x = cljs.core.first(arglist__10840);
          var y = cljs.core.first(cljs.core.next(arglist__10840));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10840)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10840)));
          return G__10839__delegate(x, y, z, args)
        };
        G__10839.cljs$lang$arity$variadic = G__10839__delegate;
        return G__10839
      }();
      G__10838 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10838__0.call(this);
          case 1:
            return G__10838__1.call(this, x);
          case 2:
            return G__10838__2.call(this, x, y);
          case 3:
            return G__10838__3.call(this, x, y, z);
          default:
            return G__10838__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10838.cljs$lang$maxFixedArity = 3;
      G__10838.cljs$lang$applyTo = G__10838__4.cljs$lang$applyTo;
      return G__10838
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10841 = null;
      var G__10841__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__10841__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__10841__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__10841__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__10841__4 = function() {
        var G__10842__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10842 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10842__delegate.call(this, x, y, z, args)
        };
        G__10842.cljs$lang$maxFixedArity = 3;
        G__10842.cljs$lang$applyTo = function(arglist__10843) {
          var x = cljs.core.first(arglist__10843);
          var y = cljs.core.first(cljs.core.next(arglist__10843));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10843)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10843)));
          return G__10842__delegate(x, y, z, args)
        };
        G__10842.cljs$lang$arity$variadic = G__10842__delegate;
        return G__10842
      }();
      G__10841 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10841__0.call(this);
          case 1:
            return G__10841__1.call(this, x);
          case 2:
            return G__10841__2.call(this, x, y);
          case 3:
            return G__10841__3.call(this, x, y, z);
          default:
            return G__10841__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10841.cljs$lang$maxFixedArity = 3;
      G__10841.cljs$lang$applyTo = G__10841__4.cljs$lang$applyTo;
      return G__10841
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10844 = null;
      var G__10844__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__10844__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__10844__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__10844__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__10844__4 = function() {
        var G__10845__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__10845 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10845__delegate.call(this, x, y, z, args)
        };
        G__10845.cljs$lang$maxFixedArity = 3;
        G__10845.cljs$lang$applyTo = function(arglist__10846) {
          var x = cljs.core.first(arglist__10846);
          var y = cljs.core.first(cljs.core.next(arglist__10846));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10846)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10846)));
          return G__10845__delegate(x, y, z, args)
        };
        G__10845.cljs$lang$arity$variadic = G__10845__delegate;
        return G__10845
      }();
      G__10844 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10844__0.call(this);
          case 1:
            return G__10844__1.call(this, x);
          case 2:
            return G__10844__2.call(this, x, y);
          case 3:
            return G__10844__3.call(this, x, y, z);
          default:
            return G__10844__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10844.cljs$lang$maxFixedArity = 3;
      G__10844.cljs$lang$applyTo = G__10844__4.cljs$lang$applyTo;
      return G__10844
    }()
  };
  var juxt__4 = function() {
    var G__10847__delegate = function(f, g, h, fs) {
      var fs__10837 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10848 = null;
        var G__10848__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10818_SHARP_, p2__10819_SHARP_) {
            return cljs.core.conj.call(null, p1__10818_SHARP_, p2__10819_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__10837)
        };
        var G__10848__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10820_SHARP_, p2__10821_SHARP_) {
            return cljs.core.conj.call(null, p1__10820_SHARP_, p2__10821_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__10837)
        };
        var G__10848__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10822_SHARP_, p2__10823_SHARP_) {
            return cljs.core.conj.call(null, p1__10822_SHARP_, p2__10823_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__10837)
        };
        var G__10848__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10824_SHARP_, p2__10825_SHARP_) {
            return cljs.core.conj.call(null, p1__10824_SHARP_, p2__10825_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__10837)
        };
        var G__10848__4 = function() {
          var G__10849__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10826_SHARP_, p2__10827_SHARP_) {
              return cljs.core.conj.call(null, p1__10826_SHARP_, cljs.core.apply.call(null, p2__10827_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__10837)
          };
          var G__10849 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10849__delegate.call(this, x, y, z, args)
          };
          G__10849.cljs$lang$maxFixedArity = 3;
          G__10849.cljs$lang$applyTo = function(arglist__10850) {
            var x = cljs.core.first(arglist__10850);
            var y = cljs.core.first(cljs.core.next(arglist__10850));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10850)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10850)));
            return G__10849__delegate(x, y, z, args)
          };
          G__10849.cljs$lang$arity$variadic = G__10849__delegate;
          return G__10849
        }();
        G__10848 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10848__0.call(this);
            case 1:
              return G__10848__1.call(this, x);
            case 2:
              return G__10848__2.call(this, x, y);
            case 3:
              return G__10848__3.call(this, x, y, z);
            default:
              return G__10848__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__10848.cljs$lang$maxFixedArity = 3;
        G__10848.cljs$lang$applyTo = G__10848__4.cljs$lang$applyTo;
        return G__10848
      }()
    };
    var G__10847 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10847__delegate.call(this, f, g, h, fs)
    };
    G__10847.cljs$lang$maxFixedArity = 3;
    G__10847.cljs$lang$applyTo = function(arglist__10851) {
      var f = cljs.core.first(arglist__10851);
      var g = cljs.core.first(cljs.core.next(arglist__10851));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10851)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10851)));
      return G__10847__delegate(f, g, h, fs)
    };
    G__10847.cljs$lang$arity$variadic = G__10847__delegate;
    return G__10847
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__10854 = cljs.core.next.call(null, coll);
        coll = G__10854;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____10853 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____10853) {
          return n > 0
        }else {
          return and__3822__auto____10853
        }
      }())) {
        var G__10855 = n - 1;
        var G__10856 = cljs.core.next.call(null, coll);
        n = G__10855;
        coll = G__10856;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__10858 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__10858), s)) {
    if(cljs.core.count.call(null, matches__10858) === 1) {
      return cljs.core.first.call(null, matches__10858)
    }else {
      return cljs.core.vec.call(null, matches__10858)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__10860 = re.exec(s);
  if(matches__10860 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__10860) === 1) {
      return cljs.core.first.call(null, matches__10860)
    }else {
      return cljs.core.vec.call(null, matches__10860)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__10865 = cljs.core.re_find.call(null, re, s);
  var match_idx__10866 = s.search(re);
  var match_str__10867 = cljs.core.coll_QMARK_.call(null, match_data__10865) ? cljs.core.first.call(null, match_data__10865) : match_data__10865;
  var post_match__10868 = cljs.core.subs.call(null, s, match_idx__10866 + cljs.core.count.call(null, match_str__10867));
  if(cljs.core.truth_(match_data__10865)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__10865, re_seq.call(null, re, post_match__10868))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10875__10876 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___10877 = cljs.core.nth.call(null, vec__10875__10876, 0, null);
  var flags__10878 = cljs.core.nth.call(null, vec__10875__10876, 1, null);
  var pattern__10879 = cljs.core.nth.call(null, vec__10875__10876, 2, null);
  return new RegExp(pattern__10879, flags__10878)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__10869_SHARP_) {
    return print_one.call(null, p1__10869_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____10889 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____10889)) {
            var and__3822__auto____10893 = function() {
              var G__10890__10891 = obj;
              if(G__10890__10891) {
                if(function() {
                  var or__3824__auto____10892 = G__10890__10891.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____10892) {
                    return or__3824__auto____10892
                  }else {
                    return G__10890__10891.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__10890__10891.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10890__10891)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10890__10891)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____10893)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____10893
            }
          }else {
            return and__3822__auto____10889
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____10894 = !(obj == null);
          if(and__3822__auto____10894) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____10894
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__10895__10896 = obj;
          if(G__10895__10896) {
            if(function() {
              var or__3824__auto____10897 = G__10895__10896.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____10897) {
                return or__3824__auto____10897
              }else {
                return G__10895__10896.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__10895__10896.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10895__10896)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10895__10896)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__10917 = new goog.string.StringBuffer;
  var G__10918__10919 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10918__10919) {
    var string__10920 = cljs.core.first.call(null, G__10918__10919);
    var G__10918__10921 = G__10918__10919;
    while(true) {
      sb__10917.append(string__10920);
      var temp__3974__auto____10922 = cljs.core.next.call(null, G__10918__10921);
      if(temp__3974__auto____10922) {
        var G__10918__10923 = temp__3974__auto____10922;
        var G__10936 = cljs.core.first.call(null, G__10918__10923);
        var G__10937 = G__10918__10923;
        string__10920 = G__10936;
        G__10918__10921 = G__10937;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10924__10925 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10924__10925) {
    var obj__10926 = cljs.core.first.call(null, G__10924__10925);
    var G__10924__10927 = G__10924__10925;
    while(true) {
      sb__10917.append(" ");
      var G__10928__10929 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10926, opts));
      if(G__10928__10929) {
        var string__10930 = cljs.core.first.call(null, G__10928__10929);
        var G__10928__10931 = G__10928__10929;
        while(true) {
          sb__10917.append(string__10930);
          var temp__3974__auto____10932 = cljs.core.next.call(null, G__10928__10931);
          if(temp__3974__auto____10932) {
            var G__10928__10933 = temp__3974__auto____10932;
            var G__10938 = cljs.core.first.call(null, G__10928__10933);
            var G__10939 = G__10928__10933;
            string__10930 = G__10938;
            G__10928__10931 = G__10939;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____10934 = cljs.core.next.call(null, G__10924__10927);
      if(temp__3974__auto____10934) {
        var G__10924__10935 = temp__3974__auto____10934;
        var G__10940 = cljs.core.first.call(null, G__10924__10935);
        var G__10941 = G__10924__10935;
        obj__10926 = G__10940;
        G__10924__10927 = G__10941;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__10917
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__10943 = cljs.core.pr_sb.call(null, objs, opts);
  sb__10943.append("\n");
  return[cljs.core.str(sb__10943)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__10962__10963 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__10962__10963) {
    var string__10964 = cljs.core.first.call(null, G__10962__10963);
    var G__10962__10965 = G__10962__10963;
    while(true) {
      cljs.core.string_print.call(null, string__10964);
      var temp__3974__auto____10966 = cljs.core.next.call(null, G__10962__10965);
      if(temp__3974__auto____10966) {
        var G__10962__10967 = temp__3974__auto____10966;
        var G__10980 = cljs.core.first.call(null, G__10962__10967);
        var G__10981 = G__10962__10967;
        string__10964 = G__10980;
        G__10962__10965 = G__10981;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__10968__10969 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__10968__10969) {
    var obj__10970 = cljs.core.first.call(null, G__10968__10969);
    var G__10968__10971 = G__10968__10969;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__10972__10973 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10970, opts));
      if(G__10972__10973) {
        var string__10974 = cljs.core.first.call(null, G__10972__10973);
        var G__10972__10975 = G__10972__10973;
        while(true) {
          cljs.core.string_print.call(null, string__10974);
          var temp__3974__auto____10976 = cljs.core.next.call(null, G__10972__10975);
          if(temp__3974__auto____10976) {
            var G__10972__10977 = temp__3974__auto____10976;
            var G__10982 = cljs.core.first.call(null, G__10972__10977);
            var G__10983 = G__10972__10977;
            string__10974 = G__10982;
            G__10972__10975 = G__10983;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____10978 = cljs.core.next.call(null, G__10968__10971);
      if(temp__3974__auto____10978) {
        var G__10968__10979 = temp__3974__auto____10978;
        var G__10984 = cljs.core.first.call(null, G__10968__10979);
        var G__10985 = G__10968__10979;
        obj__10970 = G__10984;
        G__10968__10971 = G__10985;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10986) {
    var objs = cljs.core.seq(arglist__10986);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10987) {
    var objs = cljs.core.seq(arglist__10987);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10988) {
    var objs = cljs.core.seq(arglist__10988);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10989) {
    var objs = cljs.core.seq(arglist__10989);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10990) {
    var objs = cljs.core.seq(arglist__10990);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10991) {
    var objs = cljs.core.seq(arglist__10991);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10992) {
    var objs = cljs.core.seq(arglist__10992);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10993) {
    var objs = cljs.core.seq(arglist__10993);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__10994) {
    var fmt = cljs.core.first(arglist__10994);
    var args = cljs.core.rest(arglist__10994);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10995 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10995, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10996 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10996, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10997 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10997, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____10998 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____10998)) {
        var nspc__10999 = temp__3974__auto____10998;
        return[cljs.core.str(nspc__10999), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____11000 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____11000)) {
          var nspc__11001 = temp__3974__auto____11000;
          return[cljs.core.str(nspc__11001), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11002 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11002, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__11004 = function(n, len) {
    var ns__11003 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__11003) < len) {
        var G__11006 = [cljs.core.str("0"), cljs.core.str(ns__11003)].join("");
        ns__11003 = G__11006;
        continue
      }else {
        return ns__11003
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__11004.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__11004.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__11004.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11004.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11004.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__11004.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11005 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11005, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11007 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11008 = this;
  var G__11009__11010 = cljs.core.seq.call(null, this__11008.watches);
  if(G__11009__11010) {
    var G__11012__11014 = cljs.core.first.call(null, G__11009__11010);
    var vec__11013__11015 = G__11012__11014;
    var key__11016 = cljs.core.nth.call(null, vec__11013__11015, 0, null);
    var f__11017 = cljs.core.nth.call(null, vec__11013__11015, 1, null);
    var G__11009__11018 = G__11009__11010;
    var G__11012__11019 = G__11012__11014;
    var G__11009__11020 = G__11009__11018;
    while(true) {
      var vec__11021__11022 = G__11012__11019;
      var key__11023 = cljs.core.nth.call(null, vec__11021__11022, 0, null);
      var f__11024 = cljs.core.nth.call(null, vec__11021__11022, 1, null);
      var G__11009__11025 = G__11009__11020;
      f__11024.call(null, key__11023, this$, oldval, newval);
      var temp__3974__auto____11026 = cljs.core.next.call(null, G__11009__11025);
      if(temp__3974__auto____11026) {
        var G__11009__11027 = temp__3974__auto____11026;
        var G__11034 = cljs.core.first.call(null, G__11009__11027);
        var G__11035 = G__11009__11027;
        G__11012__11019 = G__11034;
        G__11009__11020 = G__11035;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11028 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11028.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11029 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11029.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__11030 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__11030.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__11031 = this;
  return this__11031.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11032 = this;
  return this__11032.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__11033 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__11047__delegate = function(x, p__11036) {
      var map__11042__11043 = p__11036;
      var map__11042__11044 = cljs.core.seq_QMARK_.call(null, map__11042__11043) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11042__11043) : map__11042__11043;
      var validator__11045 = cljs.core._lookup.call(null, map__11042__11044, "\ufdd0'validator", null);
      var meta__11046 = cljs.core._lookup.call(null, map__11042__11044, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__11046, validator__11045, null)
    };
    var G__11047 = function(x, var_args) {
      var p__11036 = null;
      if(goog.isDef(var_args)) {
        p__11036 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11047__delegate.call(this, x, p__11036)
    };
    G__11047.cljs$lang$maxFixedArity = 1;
    G__11047.cljs$lang$applyTo = function(arglist__11048) {
      var x = cljs.core.first(arglist__11048);
      var p__11036 = cljs.core.rest(arglist__11048);
      return G__11047__delegate(x, p__11036)
    };
    G__11047.cljs$lang$arity$variadic = G__11047__delegate;
    return G__11047
  }();
  atom = function(x, var_args) {
    var p__11036 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____11052 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____11052)) {
    var validate__11053 = temp__3974__auto____11052;
    if(cljs.core.truth_(validate__11053.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__11054 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__11054, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__11055__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__11055 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__11055__delegate.call(this, a, f, x, y, z, more)
    };
    G__11055.cljs$lang$maxFixedArity = 5;
    G__11055.cljs$lang$applyTo = function(arglist__11056) {
      var a = cljs.core.first(arglist__11056);
      var f = cljs.core.first(cljs.core.next(arglist__11056));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11056)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11056))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11056)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__11056)))));
      return G__11055__delegate(a, f, x, y, z, more)
    };
    G__11055.cljs$lang$arity$variadic = G__11055__delegate;
    return G__11055
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11057) {
    var iref = cljs.core.first(arglist__11057);
    var f = cljs.core.first(cljs.core.next(arglist__11057));
    var args = cljs.core.rest(cljs.core.next(arglist__11057));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__11058 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__11058.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__11059 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__11059.state, function(p__11060) {
    var map__11061__11062 = p__11060;
    var map__11061__11063 = cljs.core.seq_QMARK_.call(null, map__11061__11062) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11061__11062) : map__11061__11062;
    var curr_state__11064 = map__11061__11063;
    var done__11065 = cljs.core._lookup.call(null, map__11061__11063, "\ufdd0'done", null);
    if(cljs.core.truth_(done__11065)) {
      return curr_state__11064
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__11059.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__11086__11087 = options;
    var map__11086__11088 = cljs.core.seq_QMARK_.call(null, map__11086__11087) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11086__11087) : map__11086__11087;
    var keywordize_keys__11089 = cljs.core._lookup.call(null, map__11086__11088, "\ufdd0'keywordize-keys", null);
    var keyfn__11090 = cljs.core.truth_(keywordize_keys__11089) ? cljs.core.keyword : cljs.core.str;
    var f__11105 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2462__auto____11104 = function iter__11098(s__11099) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__11099__11102 = s__11099;
                    while(true) {
                      if(cljs.core.seq.call(null, s__11099__11102)) {
                        var k__11103 = cljs.core.first.call(null, s__11099__11102);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__11090.call(null, k__11103), thisfn.call(null, x[k__11103])], true), iter__11098.call(null, cljs.core.rest.call(null, s__11099__11102)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2462__auto____11104.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__11105.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__11106) {
    var x = cljs.core.first(arglist__11106);
    var options = cljs.core.rest(arglist__11106);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__11111 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__11115__delegate = function(args) {
      var temp__3971__auto____11112 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__11111), args, null);
      if(cljs.core.truth_(temp__3971__auto____11112)) {
        var v__11113 = temp__3971__auto____11112;
        return v__11113
      }else {
        var ret__11114 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__11111, cljs.core.assoc, args, ret__11114);
        return ret__11114
      }
    };
    var G__11115 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11115__delegate.call(this, args)
    };
    G__11115.cljs$lang$maxFixedArity = 0;
    G__11115.cljs$lang$applyTo = function(arglist__11116) {
      var args = cljs.core.seq(arglist__11116);
      return G__11115__delegate(args)
    };
    G__11115.cljs$lang$arity$variadic = G__11115__delegate;
    return G__11115
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__11118 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__11118)) {
        var G__11119 = ret__11118;
        f = G__11119;
        continue
      }else {
        return ret__11118
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__11120__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__11120 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11120__delegate.call(this, f, args)
    };
    G__11120.cljs$lang$maxFixedArity = 1;
    G__11120.cljs$lang$applyTo = function(arglist__11121) {
      var f = cljs.core.first(arglist__11121);
      var args = cljs.core.rest(arglist__11121);
      return G__11120__delegate(f, args)
    };
    G__11120.cljs$lang$arity$variadic = G__11120__delegate;
    return G__11120
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__11123 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__11123, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__11123, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____11132 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____11132) {
      return or__3824__auto____11132
    }else {
      var or__3824__auto____11133 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____11133) {
        return or__3824__auto____11133
      }else {
        var and__3822__auto____11134 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____11134) {
          var and__3822__auto____11135 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____11135) {
            var and__3822__auto____11136 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____11136) {
              var ret__11137 = true;
              var i__11138 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____11139 = cljs.core.not.call(null, ret__11137);
                  if(or__3824__auto____11139) {
                    return or__3824__auto____11139
                  }else {
                    return i__11138 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__11137
                }else {
                  var G__11140 = isa_QMARK_.call(null, h, child.call(null, i__11138), parent.call(null, i__11138));
                  var G__11141 = i__11138 + 1;
                  ret__11137 = G__11140;
                  i__11138 = G__11141;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____11136
            }
          }else {
            return and__3822__auto____11135
          }
        }else {
          return and__3822__auto____11134
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__11150 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__11151 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__11152 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__11153 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____11154 = cljs.core.contains_QMARK_.call(null, tp__11150.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__11152.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__11152.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__11150, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__11153.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__11151, parent, ta__11152), "\ufdd0'descendants":tf__11153.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__11152, tag, td__11151)})
    }();
    if(cljs.core.truth_(or__3824__auto____11154)) {
      return or__3824__auto____11154
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__11159 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__11160 = cljs.core.truth_(parentMap__11159.call(null, tag)) ? cljs.core.disj.call(null, parentMap__11159.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__11161 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__11160)) ? cljs.core.assoc.call(null, parentMap__11159, tag, childsParents__11160) : cljs.core.dissoc.call(null, parentMap__11159, tag);
    var deriv_seq__11162 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__11142_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11142_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11142_SHARP_), cljs.core.second.call(null, p1__11142_SHARP_)))
    }, cljs.core.seq.call(null, newParents__11161)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__11159.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11143_SHARP_, p2__11144_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11143_SHARP_, p2__11144_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__11162))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__11170 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____11172 = cljs.core.truth_(function() {
    var and__3822__auto____11171 = xprefs__11170;
    if(cljs.core.truth_(and__3822__auto____11171)) {
      return xprefs__11170.call(null, y)
    }else {
      return and__3822__auto____11171
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____11172)) {
    return or__3824__auto____11172
  }else {
    var or__3824__auto____11174 = function() {
      var ps__11173 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__11173) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__11173), prefer_table))) {
          }else {
          }
          var G__11177 = cljs.core.rest.call(null, ps__11173);
          ps__11173 = G__11177;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____11174)) {
      return or__3824__auto____11174
    }else {
      var or__3824__auto____11176 = function() {
        var ps__11175 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__11175) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__11175), y, prefer_table))) {
            }else {
            }
            var G__11178 = cljs.core.rest.call(null, ps__11175);
            ps__11175 = G__11178;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____11176)) {
        return or__3824__auto____11176
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____11180 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____11180)) {
    return or__3824__auto____11180
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__11198 = cljs.core.reduce.call(null, function(be, p__11190) {
    var vec__11191__11192 = p__11190;
    var k__11193 = cljs.core.nth.call(null, vec__11191__11192, 0, null);
    var ___11194 = cljs.core.nth.call(null, vec__11191__11192, 1, null);
    var e__11195 = vec__11191__11192;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__11193)) {
      var be2__11197 = cljs.core.truth_(function() {
        var or__3824__auto____11196 = be == null;
        if(or__3824__auto____11196) {
          return or__3824__auto____11196
        }else {
          return cljs.core.dominates.call(null, k__11193, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__11195 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__11197), k__11193, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__11193), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__11197)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__11197
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__11198)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__11198));
      return cljs.core.second.call(null, best_entry__11198)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____11203 = mf;
    if(and__3822__auto____11203) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____11203
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2363__auto____11204 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11205 = cljs.core._reset[goog.typeOf(x__2363__auto____11204)];
      if(or__3824__auto____11205) {
        return or__3824__auto____11205
      }else {
        var or__3824__auto____11206 = cljs.core._reset["_"];
        if(or__3824__auto____11206) {
          return or__3824__auto____11206
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____11211 = mf;
    if(and__3822__auto____11211) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____11211
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2363__auto____11212 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11213 = cljs.core._add_method[goog.typeOf(x__2363__auto____11212)];
      if(or__3824__auto____11213) {
        return or__3824__auto____11213
      }else {
        var or__3824__auto____11214 = cljs.core._add_method["_"];
        if(or__3824__auto____11214) {
          return or__3824__auto____11214
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11219 = mf;
    if(and__3822__auto____11219) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____11219
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____11220 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11221 = cljs.core._remove_method[goog.typeOf(x__2363__auto____11220)];
      if(or__3824__auto____11221) {
        return or__3824__auto____11221
      }else {
        var or__3824__auto____11222 = cljs.core._remove_method["_"];
        if(or__3824__auto____11222) {
          return or__3824__auto____11222
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____11227 = mf;
    if(and__3822__auto____11227) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____11227
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2363__auto____11228 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11229 = cljs.core._prefer_method[goog.typeOf(x__2363__auto____11228)];
      if(or__3824__auto____11229) {
        return or__3824__auto____11229
      }else {
        var or__3824__auto____11230 = cljs.core._prefer_method["_"];
        if(or__3824__auto____11230) {
          return or__3824__auto____11230
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____11235 = mf;
    if(and__3822__auto____11235) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____11235
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2363__auto____11236 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11237 = cljs.core._get_method[goog.typeOf(x__2363__auto____11236)];
      if(or__3824__auto____11237) {
        return or__3824__auto____11237
      }else {
        var or__3824__auto____11238 = cljs.core._get_method["_"];
        if(or__3824__auto____11238) {
          return or__3824__auto____11238
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____11243 = mf;
    if(and__3822__auto____11243) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____11243
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2363__auto____11244 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11245 = cljs.core._methods[goog.typeOf(x__2363__auto____11244)];
      if(or__3824__auto____11245) {
        return or__3824__auto____11245
      }else {
        var or__3824__auto____11246 = cljs.core._methods["_"];
        if(or__3824__auto____11246) {
          return or__3824__auto____11246
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____11251 = mf;
    if(and__3822__auto____11251) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____11251
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2363__auto____11252 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11253 = cljs.core._prefers[goog.typeOf(x__2363__auto____11252)];
      if(or__3824__auto____11253) {
        return or__3824__auto____11253
      }else {
        var or__3824__auto____11254 = cljs.core._prefers["_"];
        if(or__3824__auto____11254) {
          return or__3824__auto____11254
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____11259 = mf;
    if(and__3822__auto____11259) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____11259
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2363__auto____11260 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____11261 = cljs.core._dispatch[goog.typeOf(x__2363__auto____11260)];
      if(or__3824__auto____11261) {
        return or__3824__auto____11261
      }else {
        var or__3824__auto____11262 = cljs.core._dispatch["_"];
        if(or__3824__auto____11262) {
          return or__3824__auto____11262
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__11265 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__11266 = cljs.core._get_method.call(null, mf, dispatch_val__11265);
  if(cljs.core.truth_(target_fn__11266)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__11265)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__11266, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11267 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__11268 = this;
  cljs.core.swap_BANG_.call(null, this__11268.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11268.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11268.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11268.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__11269 = this;
  cljs.core.swap_BANG_.call(null, this__11269.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__11269.method_cache, this__11269.method_table, this__11269.cached_hierarchy, this__11269.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__11270 = this;
  cljs.core.swap_BANG_.call(null, this__11270.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__11270.method_cache, this__11270.method_table, this__11270.cached_hierarchy, this__11270.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__11271 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__11271.cached_hierarchy), cljs.core.deref.call(null, this__11271.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__11271.method_cache, this__11271.method_table, this__11271.cached_hierarchy, this__11271.hierarchy)
  }
  var temp__3971__auto____11272 = cljs.core.deref.call(null, this__11271.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____11272)) {
    var target_fn__11273 = temp__3971__auto____11272;
    return target_fn__11273
  }else {
    var temp__3971__auto____11274 = cljs.core.find_and_cache_best_method.call(null, this__11271.name, dispatch_val, this__11271.hierarchy, this__11271.method_table, this__11271.prefer_table, this__11271.method_cache, this__11271.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____11274)) {
      var target_fn__11275 = temp__3971__auto____11274;
      return target_fn__11275
    }else {
      return cljs.core.deref.call(null, this__11271.method_table).call(null, this__11271.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__11276 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__11276.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__11276.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__11276.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__11276.method_cache, this__11276.method_table, this__11276.cached_hierarchy, this__11276.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__11277 = this;
  return cljs.core.deref.call(null, this__11277.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__11278 = this;
  return cljs.core.deref.call(null, this__11278.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__11279 = this;
  return cljs.core.do_dispatch.call(null, mf, this__11279.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__11281__delegate = function(_, args) {
    var self__11280 = this;
    return cljs.core._dispatch.call(null, self__11280, args)
  };
  var G__11281 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__11281__delegate.call(this, _, args)
  };
  G__11281.cljs$lang$maxFixedArity = 1;
  G__11281.cljs$lang$applyTo = function(arglist__11282) {
    var _ = cljs.core.first(arglist__11282);
    var args = cljs.core.rest(arglist__11282);
    return G__11281__delegate(_, args)
  };
  G__11281.cljs$lang$arity$variadic = G__11281__delegate;
  return G__11281
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__11283 = this;
  return cljs.core._dispatch.call(null, self__11283, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11284 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_11286, _) {
  var this__11285 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__11285.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__11287 = this;
  var and__3822__auto____11288 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____11288) {
    return this__11287.uuid === other.uuid
  }else {
    return and__3822__auto____11288
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__11289 = this;
  var this__11290 = this;
  return cljs.core.pr_str.call(null, this__11290)
};
cljs.core.UUID;
goog.provide("sm.sql");
goog.require("cljs.core");
sm.sql.CURR_DB_VER = "1.0";
sm.sql.db = openDatabase("smriti", "", "smriti", 10240);
sm.sql.alert_results = function alert_results(r) {
  var res__13750 = function() {
    var iter__2462__auto____13749 = function iter__13743(s__13744) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__13744__13747 = s__13744;
        while(true) {
          if(cljs.core.seq.call(null, s__13744__13747)) {
            var i__13748 = cljs.core.first.call(null, s__13744__13747);
            return cljs.core.cons.call(null, [cljs.core.str("#"), cljs.core.str(r.rows.item(i__13748).uid), cljs.core.str(": "), cljs.core.str(r.rows.item(i__13748).name), cljs.core.str("\n")].join(""), iter__13743.call(null, cljs.core.rest.call(null, s__13744__13747)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____13749.call(null, cljs.core.range.call(null, r.rows.length))
  }();
  return alert(cljs.core.reduce.call(null, function(p1__13733_SHARP_, p2__13734_SHARP_) {
    return[cljs.core.str(p1__13733_SHARP_), cljs.core.str(p2__13734_SHARP_)].join("")
  }, res__13750))
};
sm.sql.err_alert = function err_alert(rq, res) {
  return alert([cljs.core.str("Error: "), cljs.core.str(res.message), cljs.core.str("\n\nRows affected: "), cljs.core.str(res.rowsAffected), cljs.core.str("REQUEST:\n"), cljs.core.str(rq)].join(""))
};
sm.sql.select = function() {
  var select__delegate = function(p__13757) {
    var map__13767__13768 = p__13757;
    var map__13767__13769 = cljs.core.seq_QMARK_.call(null, map__13767__13768) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13767__13768) : map__13767__13768;
    var f__13770 = cljs.core._lookup.call(null, map__13767__13769, "\ufdd0'f", sm.sql.alert_results);
    var order__13771 = cljs.core._lookup.call(null, map__13767__13769, "\ufdd0'order", "");
    var where__13772 = cljs.core._lookup.call(null, map__13767__13769, "\ufdd0'where", "");
    var cols__13773 = cljs.core._lookup.call(null, map__13767__13769, "\ufdd0'cols", "*");
    var table__13774 = cljs.core._lookup.call(null, map__13767__13769, "\ufdd0'table", null);
    var rq__13775 = [cljs.core.str("SELECT "), cljs.core.str(cols__13773), cljs.core.str(" FROM "), cljs.core.str(table__13774), cljs.core.str(" "), cljs.core.str(where__13772), cljs.core.str(" "), cljs.core.str(order__13771), cljs.core.str(";")].join("");
    return sm.sql.db.transaction(function(t, r) {
      return t.executeSql(rq__13775, null, function(p1__13752_SHARP_, p2__13751_SHARP_) {
        return f__13770.call(null, p2__13751_SHARP_)
      }, function(p1__13754_SHARP_, p2__13753_SHARP_) {
        return sm.sql.err_alert.call(null, rq__13775, p2__13753_SHARP_)
      })
    })
  };
  var select = function(var_args) {
    var p__13757 = null;
    if(goog.isDef(var_args)) {
      p__13757 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return select__delegate.call(this, p__13757)
  };
  select.cljs$lang$maxFixedArity = 0;
  select.cljs$lang$applyTo = function(arglist__13776) {
    var p__13757 = cljs.core.seq(arglist__13776);
    return select__delegate(p__13757)
  };
  select.cljs$lang$arity$variadic = select__delegate;
  return select
}();
sm.sql.update = function() {
  var update__delegate = function(p__13779) {
    var map__13787__13788 = p__13779;
    var map__13787__13789 = cljs.core.seq_QMARK_.call(null, map__13787__13788) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13787__13788) : map__13787__13788;
    var values__13790 = cljs.core._lookup.call(null, map__13787__13789, "\ufdd0'values", null);
    var uid__13791 = cljs.core._lookup.call(null, map__13787__13789, "\ufdd0'uid", null);
    var table__13792 = cljs.core._lookup.call(null, map__13787__13789, "\ufdd0'table", null);
    var rq__13793 = [cljs.core.str("UPDATE "), cljs.core.str(table__13792), cljs.core.str(" SET "), cljs.core.str(values__13790), cljs.core.str(" WHERE uid="), cljs.core.str(uid__13791), cljs.core.str(";")].join("");
    return sm.sql.db.transaction(function(t, r) {
      return t.executeSql(rq__13793, null, null, function(p1__13756_SHARP_, p2__13755_SHARP_) {
        return sm.sql.err_alert.call(null, rq__13793, p2__13755_SHARP_)
      })
    })
  };
  var update = function(var_args) {
    var p__13779 = null;
    if(goog.isDef(var_args)) {
      p__13779 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return update__delegate.call(this, p__13779)
  };
  update.cljs$lang$maxFixedArity = 0;
  update.cljs$lang$applyTo = function(arglist__13794) {
    var p__13779 = cljs.core.seq(arglist__13794);
    return update__delegate(p__13779)
  };
  update.cljs$lang$arity$variadic = update__delegate;
  return update
}();
sm.sql.delete$ = function() {
  var delete$__delegate = function(p__13797) {
    var map__13804__13805 = p__13797;
    var map__13804__13806 = cljs.core.seq_QMARK_.call(null, map__13804__13805) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13804__13805) : map__13804__13805;
    var uid__13807 = cljs.core._lookup.call(null, map__13804__13806, "\ufdd0'uid", null);
    var table__13808 = cljs.core._lookup.call(null, map__13804__13806, "\ufdd0'table", null);
    var rq__13809 = [cljs.core.str("DELETE FROM "), cljs.core.str(table__13808), cljs.core.str(" WHERE uid="), cljs.core.str(uid__13807), cljs.core.str(";")].join("");
    return sm.sql.db.transaction(function(t, r) {
      return t.executeSql(rq__13809, null, null, function(p1__13778_SHARP_, p2__13777_SHARP_) {
        return sm.sql.err_alert.call(null, rq__13809, p2__13777_SHARP_)
      })
    })
  };
  var delete$ = function(var_args) {
    var p__13797 = null;
    if(goog.isDef(var_args)) {
      p__13797 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return delete$__delegate.call(this, p__13797)
  };
  delete$.cljs$lang$maxFixedArity = 0;
  delete$.cljs$lang$applyTo = function(arglist__13810) {
    var p__13797 = cljs.core.seq(arglist__13810);
    return delete$__delegate(p__13797)
  };
  delete$.cljs$lang$arity$variadic = delete$__delegate;
  return delete$
}();
sm.sql.insert = function() {
  var insert__delegate = function(p__13813) {
    var map__13821__13822 = p__13813;
    var map__13821__13823 = cljs.core.seq_QMARK_.call(null, map__13821__13822) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13821__13822) : map__13821__13822;
    var values__13824 = cljs.core._lookup.call(null, map__13821__13823, "\ufdd0'values", null);
    var cols__13825 = cljs.core._lookup.call(null, map__13821__13823, "\ufdd0'cols", "");
    var table__13826 = cljs.core._lookup.call(null, map__13821__13823, "\ufdd0'table", null);
    var rq__13827 = [cljs.core.str("INSERT INTO "), cljs.core.str(table__13826), cljs.core.str(" "), cljs.core.str(cols__13825), cljs.core.str(" VALUES "), cljs.core.str(values__13824), cljs.core.str(";")].join("");
    return sm.sql.db.transaction(function(t, r) {
      return t.executeSql(rq__13827, null, null, function(p1__13796_SHARP_, p2__13795_SHARP_) {
        return sm.sql.err_alert.call(null, rq__13827, p2__13795_SHARP_)
      })
    })
  };
  var insert = function(var_args) {
    var p__13813 = null;
    if(goog.isDef(var_args)) {
      p__13813 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return insert__delegate.call(this, p__13813)
  };
  insert.cljs$lang$maxFixedArity = 0;
  insert.cljs$lang$applyTo = function(arglist__13828) {
    var p__13813 = cljs.core.seq(arglist__13828);
    return insert__delegate(p__13813)
  };
  insert.cljs$lang$arity$variadic = insert__delegate;
  return insert
}();
sm.sql.dropandcreate = function dropandcreate(table, structure) {
  return sm.sql.db.transaction(function(t) {
    var drq__13831 = [cljs.core.str("DROP TABLE IF EXISTS "), cljs.core.str(table), cljs.core.str(";")].join("");
    var crq__13832 = [cljs.core.str("CREATE TABLE IF NOT EXISTS "), cljs.core.str(table), cljs.core.str(" ("), cljs.core.str(structure), cljs.core.str(");")].join("");
    t.executeSql(drq__13831);
    return t.executeSql(crq__13832, null, null, function(p1__13812_SHARP_, p2__13811_SHARP_) {
      return alert([cljs.core.str("Couldn't create DB ["), cljs.core.str(table), cljs.core.str("]\n\n->"), cljs.core.str(crq__13832), cljs.core.str("\n\n"), cljs.core.str(p2__13811_SHARP_.message)].join(""))
    })
  })
};
sm.sql.reset_db = function reset_db() {
  var tables__13853 = cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray(["projects", "uid INTEGER PRIMARY KEY AUTOINCREMENT, name TINYTEXT UNIQUE NOT NULL, birth TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP"], true), cljs.core.PersistentVector.fromArray(["priorities", "uid INTEGER PRIMARY KEY AUTOINCREMENT, name TINYTEXT UNIQUE NOT NULL"], true), cljs.core.PersistentVector.fromArray(["categories", "uid INTEGER PRIMARY KEY AUTOINCREMENT, name TINYTEXT UNIQUE NOT NULL"], true), 
  cljs.core.PersistentVector.fromArray(["members", "uid INTEGER PRIMARY KEY AUTOINCREMENT, name TINYTEXT UNIQUE NOT NULL"], true), cljs.core.PersistentVector.fromArray(["tasks", "uid INTEGER PRIMARY KEY AUTOINCREMENT, projkey REFERENCES projects(uid) DEFAULT NULL, priorikey REFERENCES priorities(uid) DEFAULT NULL, categokey REFERENCES categories(uid) DEFAULT NULL, memkey REFERENCES members(uid) DEFAULT NULL, name TINYTEXT NOT NULL, desc TEXT NOT NULL DEFAULT 'NO_DESCRIPTION', birth TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP"], 
  true)], true);
  var G__13854__13855 = cljs.core.seq.call(null, tables__13853);
  if(G__13854__13855) {
    var G__13857__13859 = cljs.core.first.call(null, G__13854__13855);
    var vec__13858__13860 = G__13857__13859;
    var t__13861 = cljs.core.nth.call(null, vec__13858__13860, 0, null);
    var s__13862 = cljs.core.nth.call(null, vec__13858__13860, 1, null);
    var G__13854__13863 = G__13854__13855;
    var G__13857__13864 = G__13857__13859;
    var G__13854__13865 = G__13854__13863;
    while(true) {
      var vec__13866__13867 = G__13857__13864;
      var t__13868 = cljs.core.nth.call(null, vec__13866__13867, 0, null);
      var s__13869 = cljs.core.nth.call(null, vec__13866__13867, 1, null);
      var G__13854__13870 = G__13854__13865;
      sm.sql.dropandcreate.call(null, t__13868, s__13869);
      var temp__3974__auto____13871 = cljs.core.next.call(null, G__13854__13870);
      if(temp__3974__auto____13871) {
        var G__13854__13872 = temp__3974__auto____13871;
        var G__13873 = cljs.core.first.call(null, G__13854__13872);
        var G__13874 = G__13854__13872;
        G__13857__13864 = G__13873;
        G__13854__13865 = G__13874;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sm.sql.db.changeVersion("", sm.sql.CURR_DB_VER, null)
};
sm.sql.populate_db = function populate_db() {
  return sm.sql.db.transaction(function(t) {
    var priorities__13935 = cljs.core.PersistentArrayMap.fromArrays([1, 2, 3, 4, 5, 6], ["Abandonned", "Done", "Low", "Normal", "High", "APOCALYPTIC"]);
    var members__13936 = cljs.core.PersistentArrayMap.fromArrays([1, 2, 3, 4], ["Anybody", "Landolphia", "Wonko7", "Everybody"]);
    var categories__13937 = cljs.core.PersistentArrayMap.fromArrays([1, 2, 3], ["Bug fix", "New feature", "Update"]);
    var G__13938__13939 = cljs.core.seq.call(null, priorities__13935);
    if(G__13938__13939) {
      var G__13941__13943 = cljs.core.first.call(null, G__13938__13939);
      var vec__13942__13944 = G__13941__13943;
      var x__13945 = cljs.core.nth.call(null, vec__13942__13944, 0, null);
      var y__13946 = cljs.core.nth.call(null, vec__13942__13944, 1, null);
      var G__13938__13947 = G__13938__13939;
      var G__13941__13948 = G__13941__13943;
      var G__13938__13949 = G__13938__13947;
      while(true) {
        var vec__13950__13951 = G__13941__13948;
        var x__13952 = cljs.core.nth.call(null, vec__13950__13951, 0, null);
        var y__13953 = cljs.core.nth.call(null, vec__13950__13951, 1, null);
        var G__13938__13954 = G__13938__13949;
        t.executeSql([cljs.core.str("INSERT INTO priorities (uid, name) VALUES ("), cljs.core.str(x__13952), cljs.core.str(", '"), cljs.core.str(y__13953), cljs.core.str("');")].join(""));
        var temp__3974__auto____13955 = cljs.core.next.call(null, G__13938__13954);
        if(temp__3974__auto____13955) {
          var G__13938__13956 = temp__3974__auto____13955;
          var G__13995 = cljs.core.first.call(null, G__13938__13956);
          var G__13996 = G__13938__13956;
          G__13941__13948 = G__13995;
          G__13938__13949 = G__13996;
          continue
        }else {
        }
        break
      }
    }else {
    }
    var G__13957__13958 = cljs.core.seq.call(null, members__13936);
    if(G__13957__13958) {
      var G__13960__13962 = cljs.core.first.call(null, G__13957__13958);
      var vec__13961__13963 = G__13960__13962;
      var x__13964 = cljs.core.nth.call(null, vec__13961__13963, 0, null);
      var y__13965 = cljs.core.nth.call(null, vec__13961__13963, 1, null);
      var G__13957__13966 = G__13957__13958;
      var G__13960__13967 = G__13960__13962;
      var G__13957__13968 = G__13957__13966;
      while(true) {
        var vec__13969__13970 = G__13960__13967;
        var x__13971 = cljs.core.nth.call(null, vec__13969__13970, 0, null);
        var y__13972 = cljs.core.nth.call(null, vec__13969__13970, 1, null);
        var G__13957__13973 = G__13957__13968;
        t.executeSql([cljs.core.str("INSERT INTO members VALUES ("), cljs.core.str(x__13971), cljs.core.str(", '"), cljs.core.str(y__13972), cljs.core.str("');")].join(""));
        var temp__3974__auto____13974 = cljs.core.next.call(null, G__13957__13973);
        if(temp__3974__auto____13974) {
          var G__13957__13975 = temp__3974__auto____13974;
          var G__13997 = cljs.core.first.call(null, G__13957__13975);
          var G__13998 = G__13957__13975;
          G__13960__13967 = G__13997;
          G__13957__13968 = G__13998;
          continue
        }else {
        }
        break
      }
    }else {
    }
    var G__13976__13977 = cljs.core.seq.call(null, categories__13937);
    if(G__13976__13977) {
      var G__13979__13981 = cljs.core.first.call(null, G__13976__13977);
      var vec__13980__13982 = G__13979__13981;
      var x__13983 = cljs.core.nth.call(null, vec__13980__13982, 0, null);
      var y__13984 = cljs.core.nth.call(null, vec__13980__13982, 1, null);
      var G__13976__13985 = G__13976__13977;
      var G__13979__13986 = G__13979__13981;
      var G__13976__13987 = G__13976__13985;
      while(true) {
        var vec__13988__13989 = G__13979__13986;
        var x__13990 = cljs.core.nth.call(null, vec__13988__13989, 0, null);
        var y__13991 = cljs.core.nth.call(null, vec__13988__13989, 1, null);
        var G__13976__13992 = G__13976__13987;
        t.executeSql([cljs.core.str("INSERT INTO categories VALUES ("), cljs.core.str(x__13990), cljs.core.str(", '"), cljs.core.str(y__13991), cljs.core.str("');")].join(""));
        var temp__3974__auto____13993 = cljs.core.next.call(null, G__13976__13992);
        if(temp__3974__auto____13993) {
          var G__13976__13994 = temp__3974__auto____13993;
          var G__13999 = cljs.core.first.call(null, G__13976__13994);
          var G__14000 = G__13976__13994;
          G__13979__13986 = G__13999;
          G__13976__13987 = G__14000;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  })
};
sm.sql.update_db = function update_db() {
  var G__14003__14004 = sm.sql.db.version;
  if(cljs.core._EQ_.call(null, "1.0", G__14003__14004)) {
    return null
  }else {
    if("\ufdd0'else") {
      return alert("The database version is invalid, reset the database")
    }else {
      return null
    }
  }
};
sm.sql.update_proj = function update_proj(puid, newname) {
  var rq__14006 = [cljs.core.str('UPDATE projects SET name="'), cljs.core.str(newname), cljs.core.str('" WHERE uid="'), cljs.core.str(puid), cljs.core.str('";')].join("");
  return sm.sql.db.transaction(function(t, r) {
    return t.executeSql(rq__14006, null, null)
  })
};
sm.sql.update_task = function update_task(tuid, tname, desc, prio, cat, mem) {
  var rq__14008 = [cljs.core.str('UPDATE tasks SET name="'), cljs.core.str(tname), cljs.core.str('", desc="'), cljs.core.str(desc), cljs.core.str('", priorikey='), cljs.core.str(prio), cljs.core.str(", categokey="), cljs.core.str(cat), cljs.core.str(", memkey="), cljs.core.str(mem), cljs.core.str(" WHERE uid="), cljs.core.str(tuid), cljs.core.str(";")].join("");
  return sm.sql.db.transaction(function(t, r) {
    return t.executeSql(rq__14008, null)
  })
};
sm.sql.delete_proj = function delete_proj(puid) {
  var rqp__14011 = [cljs.core.str('DELETE FROM projects WHERE uid="'), cljs.core.str(puid), cljs.core.str('"')].join("");
  var rqt__14012 = [cljs.core.str('DELETE FROM tasks WHERE projkey="'), cljs.core.str(puid), cljs.core.str('"')].join("");
  return sm.sql.db.transaction(function(t, r) {
    t.executeSql(rqp__14011, null, null);
    return t.executeSql(rqt__14012, null, null)
  })
};
sm.sql.delete_task = function delete_task(tuid) {
  var rq__14016 = [cljs.core.str('DELETE FROM tasks WHERE uid="'), cljs.core.str(tuid), cljs.core.str('"')].join("");
  return sm.sql.db.transaction(function(t, r) {
    return t.executeSql(rq__14016, null, null)
  })
};
sm.sql.add_proj = function add_proj(projname) {
  var rq__14020 = [cljs.core.str("INSERT INTO projects (name) VALUES ('"), cljs.core.str(projname), cljs.core.str("');")].join("");
  return sm.sql.db.transaction(function(t, r) {
    return t.executeSql(rq__14020, null, null, function(p1__14014_SHARP_, p2__14013_SHARP_) {
      return sm.sql.err_alert.call(null, rq__14020, p2__14013_SHARP_)
    })
  })
};
sm.sql.add_task = function add_task(taskname, projid) {
  var rq__14022 = [cljs.core.str("INSERT INTO tasks (name, projkey) VALUES ('"), cljs.core.str(taskname), cljs.core.str("',"), cljs.core.str(projid), cljs.core.str(");")].join("");
  return sm.sql.db.transaction(function(t, r) {
    return t.executeSql(rq__14022, null, null, function(p1__14018_SHARP_, p2__14017_SHARP_) {
      return sm.sql.err_alert.call(null, rq__14022, p2__14017_SHARP_)
    })
  })
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.fx.Animation");
goog.provide("goog.fx.Animation.EventType");
goog.provide("goog.fx.Animation.State");
goog.provide("goog.fx.AnimationEvent");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.object");
goog.fx.Animation = function(start, end, duration, opt_acc) {
  goog.events.EventTarget.call(this);
  if(!goog.isArray(start) || !goog.isArray(end)) {
    throw Error("Start and end parameters must be arrays");
  }
  if(start.length != end.length) {
    throw Error("Start and end points must be the same length");
  }
  this.startPoint = start;
  this.endPoint = end;
  this.duration = duration;
  this.accel_ = opt_acc;
  this.coords = []
};
goog.inherits(goog.fx.Animation, goog.events.EventTarget);
goog.fx.Animation.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause", ANIMATE:"animate", DESTROY:"destroy"};
goog.fx.Animation.State = {STOPPED:0, PAUSED:-1, PLAYING:1};
goog.fx.Animation.TIMEOUT = 20;
goog.fx.Animation.activeAnimations_ = {};
goog.fx.Animation.globalTimer_ = null;
goog.fx.Animation.cycleAnimations_ = function() {
  goog.Timer.defaultTimerObject.clearTimeout(goog.fx.Animation.globalTimer_);
  var now = goog.now();
  for(var uid in goog.fx.Animation.activeAnimations_) {
    goog.fx.Animation.activeAnimations_[uid].cycle(now)
  }
  goog.fx.Animation.globalTimer_ = goog.object.isEmpty(goog.fx.Animation.activeAnimations_) ? null : goog.Timer.defaultTimerObject.setTimeout(goog.fx.Animation.cycleAnimations_, goog.fx.Animation.TIMEOUT)
};
goog.fx.Animation.registerAnimation = function(animation) {
  var uid = goog.getUid(animation);
  if(!(uid in goog.fx.Animation.activeAnimations_)) {
    goog.fx.Animation.activeAnimations_[uid] = animation
  }
  if(!goog.fx.Animation.globalTimer_) {
    goog.fx.Animation.globalTimer_ = goog.Timer.defaultTimerObject.setTimeout(goog.fx.Animation.cycleAnimations_, goog.fx.Animation.TIMEOUT)
  }
};
goog.fx.Animation.unregisterAnimation = function(animation) {
  var uid = goog.getUid(animation);
  delete goog.fx.Animation.activeAnimations_[uid];
  if(goog.fx.Animation.globalTimer_ && goog.object.isEmpty(goog.fx.Animation.activeAnimations_)) {
    goog.Timer.defaultTimerObject.clearTimeout(goog.fx.Animation.globalTimer_);
    goog.fx.Animation.globalTimer_ = null
  }
};
goog.fx.Animation.prototype.state_ = goog.fx.Animation.State.STOPPED;
goog.fx.Animation.prototype.fps_ = 0;
goog.fx.Animation.prototype.progress = 0;
goog.fx.Animation.prototype.startTime = null;
goog.fx.Animation.prototype.endTime = null;
goog.fx.Animation.prototype.lastFrame = null;
goog.fx.Animation.prototype.getStateInternal = function() {
  return this.state_
};
goog.fx.Animation.prototype.play = function(opt_restart) {
  if(opt_restart || this.state_ == goog.fx.Animation.State.STOPPED) {
    this.progress = 0;
    this.coords = this.startPoint
  }else {
    if(this.state_ == goog.fx.Animation.State.PLAYING) {
      return false
    }
  }
  goog.fx.Animation.unregisterAnimation(this);
  this.startTime = goog.now();
  if(this.state_ == goog.fx.Animation.State.PAUSED) {
    this.startTime -= this.duration * this.progress
  }
  this.endTime = this.startTime + this.duration;
  this.lastFrame = this.startTime;
  if(!this.progress) {
    this.onBegin()
  }
  this.onPlay();
  if(this.state_ == goog.fx.Animation.State.PAUSED) {
    this.onResume()
  }
  this.state_ = goog.fx.Animation.State.PLAYING;
  goog.fx.Animation.registerAnimation(this);
  this.cycle(this.startTime);
  return true
};
goog.fx.Animation.prototype.stop = function(gotoEnd) {
  goog.fx.Animation.unregisterAnimation(this);
  this.state_ = goog.fx.Animation.State.STOPPED;
  if(gotoEnd) {
    this.progress = 1
  }
  this.updateCoords_(this.progress);
  this.onStop();
  this.onEnd()
};
goog.fx.Animation.prototype.pause = function() {
  if(this.state_ == goog.fx.Animation.State.PLAYING) {
    goog.fx.Animation.unregisterAnimation(this);
    this.state_ = goog.fx.Animation.State.PAUSED;
    this.onPause()
  }
};
goog.fx.Animation.prototype.disposeInternal = function() {
  if(this.state_ != goog.fx.Animation.State.STOPPED) {
    this.stop(false)
  }
  this.onDestroy();
  goog.fx.Animation.superClass_.disposeInternal.call(this)
};
goog.fx.Animation.prototype.destroy = function() {
  this.dispose()
};
goog.fx.Animation.prototype.cycle = function(now) {
  this.progress = (now - this.startTime) / (this.endTime - this.startTime);
  if(this.progress >= 1) {
    this.progress = 1
  }
  this.fps_ = 1E3 / (now - this.lastFrame);
  this.lastFrame = now;
  if(goog.isFunction(this.accel_)) {
    this.updateCoords_(this.accel_(this.progress))
  }else {
    this.updateCoords_(this.progress)
  }
  if(this.progress == 1) {
    this.state_ = goog.fx.Animation.State.STOPPED;
    goog.fx.Animation.unregisterAnimation(this);
    this.onFinish();
    this.onEnd()
  }else {
    if(this.state_ == goog.fx.Animation.State.PLAYING) {
      this.onAnimate()
    }
  }
};
goog.fx.Animation.prototype.updateCoords_ = function(t) {
  this.coords = new Array(this.startPoint.length);
  for(var i = 0;i < this.startPoint.length;i++) {
    this.coords[i] = (this.endPoint[i] - this.startPoint[i]) * t + this.startPoint[i]
  }
};
goog.fx.Animation.prototype.onAnimate = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.ANIMATE)
};
goog.fx.Animation.prototype.onBegin = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.BEGIN)
};
goog.fx.Animation.prototype.onDestroy = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.DESTROY)
};
goog.fx.Animation.prototype.onEnd = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.END)
};
goog.fx.Animation.prototype.onFinish = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.FINISH)
};
goog.fx.Animation.prototype.onPause = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.PAUSE)
};
goog.fx.Animation.prototype.onPlay = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.PLAY)
};
goog.fx.Animation.prototype.onResume = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.RESUME)
};
goog.fx.Animation.prototype.onStop = function() {
  this.dispatchAnimationEvent_(goog.fx.Animation.EventType.STOP)
};
goog.fx.Animation.prototype.dispatchAnimationEvent_ = function(type) {
  this.dispatchEvent(new goog.fx.AnimationEvent(type, this))
};
goog.fx.AnimationEvent = function(type, anim) {
  goog.events.Event.call(this, type);
  this.coords = anim.coords;
  this.x = anim.coords[0];
  this.y = anim.coords[1];
  this.z = anim.coords[2];
  this.duration = anim.duration;
  this.progress = anim.progress;
  this.fps = anim.fps_;
  this.state = anim.state_;
  this.anim = anim
};
goog.inherits(goog.fx.AnimationEvent, goog.events.Event);
goog.fx.AnimationEvent.prototype.coordsAsInts = function() {
  return goog.array.map(this.coords, Math.round)
};
goog.provide("goog.fx.easing");
goog.fx.easing.easeIn = function(t) {
  return t * t * t
};
goog.fx.easing.easeOut = function(t) {
  return 1 - Math.pow(1 - t, 3)
};
goog.fx.easing.inAndOut = function(t) {
  return 3 * t * t - 2 * t * t * t
};
goog.provide("goog.fx");
goog.require("goog.asserts");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.fx.Animation.State");
goog.require("goog.fx.AnimationEvent");
goog.require("goog.fx.easing");
goog.provide("goog.color.names");
goog.color.names = {"aliceblue":"#f0f8ff", "antiquewhite":"#faebd7", "aqua":"#00ffff", "aquamarine":"#7fffd4", "azure":"#f0ffff", "beige":"#f5f5dc", "bisque":"#ffe4c4", "black":"#000000", "blanchedalmond":"#ffebcd", "blue":"#0000ff", "blueviolet":"#8a2be2", "brown":"#a52a2a", "burlywood":"#deb887", "cadetblue":"#5f9ea0", "chartreuse":"#7fff00", "chocolate":"#d2691e", "coral":"#ff7f50", "cornflowerblue":"#6495ed", "cornsilk":"#fff8dc", "crimson":"#dc143c", "cyan":"#00ffff", "darkblue":"#00008b", "darkcyan":"#008b8b", 
"darkgoldenrod":"#b8860b", "darkgray":"#a9a9a9", "darkgreen":"#006400", "darkgrey":"#a9a9a9", "darkkhaki":"#bdb76b", "darkmagenta":"#8b008b", "darkolivegreen":"#556b2f", "darkorange":"#ff8c00", "darkorchid":"#9932cc", "darkred":"#8b0000", "darksalmon":"#e9967a", "darkseagreen":"#8fbc8f", "darkslateblue":"#483d8b", "darkslategray":"#2f4f4f", "darkslategrey":"#2f4f4f", "darkturquoise":"#00ced1", "darkviolet":"#9400d3", "deeppink":"#ff1493", "deepskyblue":"#00bfff", "dimgray":"#696969", "dimgrey":"#696969", 
"dodgerblue":"#1e90ff", "firebrick":"#b22222", "floralwhite":"#fffaf0", "forestgreen":"#228b22", "fuchsia":"#ff00ff", "gainsboro":"#dcdcdc", "ghostwhite":"#f8f8ff", "gold":"#ffd700", "goldenrod":"#daa520", "gray":"#808080", "green":"#008000", "greenyellow":"#adff2f", "grey":"#808080", "honeydew":"#f0fff0", "hotpink":"#ff69b4", "indianred":"#cd5c5c", "indigo":"#4b0082", "ivory":"#fffff0", "khaki":"#f0e68c", "lavender":"#e6e6fa", "lavenderblush":"#fff0f5", "lawngreen":"#7cfc00", "lemonchiffon":"#fffacd", 
"lightblue":"#add8e6", "lightcoral":"#f08080", "lightcyan":"#e0ffff", "lightgoldenrodyellow":"#fafad2", "lightgray":"#d3d3d3", "lightgreen":"#90ee90", "lightgrey":"#d3d3d3", "lightpink":"#ffb6c1", "lightsalmon":"#ffa07a", "lightseagreen":"#20b2aa", "lightskyblue":"#87cefa", "lightslategray":"#778899", "lightslategrey":"#778899", "lightsteelblue":"#b0c4de", "lightyellow":"#ffffe0", "lime":"#00ff00", "limegreen":"#32cd32", "linen":"#faf0e6", "magenta":"#ff00ff", "maroon":"#800000", "mediumaquamarine":"#66cdaa", 
"mediumblue":"#0000cd", "mediumorchid":"#ba55d3", "mediumpurple":"#9370d8", "mediumseagreen":"#3cb371", "mediumslateblue":"#7b68ee", "mediumspringgreen":"#00fa9a", "mediumturquoise":"#48d1cc", "mediumvioletred":"#c71585", "midnightblue":"#191970", "mintcream":"#f5fffa", "mistyrose":"#ffe4e1", "moccasin":"#ffe4b5", "navajowhite":"#ffdead", "navy":"#000080", "oldlace":"#fdf5e6", "olive":"#808000", "olivedrab":"#6b8e23", "orange":"#ffa500", "orangered":"#ff4500", "orchid":"#da70d6", "palegoldenrod":"#eee8aa", 
"palegreen":"#98fb98", "paleturquoise":"#afeeee", "palevioletred":"#d87093", "papayawhip":"#ffefd5", "peachpuff":"#ffdab9", "peru":"#cd853f", "pink":"#ffc0cb", "plum":"#dda0dd", "powderblue":"#b0e0e6", "purple":"#800080", "red":"#ff0000", "rosybrown":"#bc8f8f", "royalblue":"#4169e1", "saddlebrown":"#8b4513", "salmon":"#fa8072", "sandybrown":"#f4a460", "seagreen":"#2e8b57", "seashell":"#fff5ee", "sienna":"#a0522d", "silver":"#c0c0c0", "skyblue":"#87ceeb", "slateblue":"#6a5acd", "slategray":"#708090", 
"slategrey":"#708090", "snow":"#fffafa", "springgreen":"#00ff7f", "steelblue":"#4682b4", "tan":"#d2b48c", "teal":"#008080", "thistle":"#d8bfd8", "tomato":"#ff6347", "turquoise":"#40e0d0", "violet":"#ee82ee", "wheat":"#f5deb3", "white":"#ffffff", "whitesmoke":"#f5f5f5", "yellow":"#ffff00", "yellowgreen":"#9acd32"};
goog.provide("goog.math");
goog.require("goog.array");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1.0E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0)
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.provide("goog.color");
goog.require("goog.color.names");
goog.require("goog.math");
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependPoundIfNecessary_(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    result.hex = goog.color.normalizeHex(maybeHex);
    result.type = "hex";
    return result
  }else {
    var rgb = goog.color.isValidRgbColor_(str);
    if(rgb.length) {
      result.hex = goog.color.rgbArrayToHex(rgb);
      result.type = "rgb";
      return result
    }else {
      if(goog.color.names) {
        var hex = goog.color.names[str.toLowerCase()];
        if(hex) {
          result.hex = hex;
          result.type = "named";
          return result
        }
      }
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  if(hexColor.length == 4) {
    hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3")
  }
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16);
  var g = parseInt(hexColor.substr(3, 2), 16);
  var b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || r < 0 || r > 255 || isNaN(g) || g < 0 || g > 255 || isNaN(b) || b < 0 || b > 255) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessary_(r.toString(16));
  var hexG = goog.color.prependZeroIfNecessary_(g.toString(16));
  var hexB = goog.color.prependZeroIfNecessary_(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255;
  var normG = g / 255;
  var normB = b / 255;
  var max = Math.max(normR, normG, normB);
  var min = Math.min(normR, normG, normB);
  var h = 0;
  var s = 0;
  var l = 0.5 * (max + min);
  if(max != min) {
    if(max == normR) {
      h = 60 * (normG - normB) / (max - min)
    }else {
      if(max == normG) {
        h = 60 * (normB - normR) / (max - min) + 120
      }else {
        if(max == normB) {
          h = 60 * (normR - normG) / (max - min) + 240
        }
      }
    }
    if(0 < l && l <= 0.5) {
      s = (max - min) / (2 * l)
    }else {
      s = (max - min) / (2 - 2 * l)
    }
  }
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  if(vH < 0) {
    vH += 1
  }else {
    if(vH > 1) {
      vH -= 1
    }
  }
  if(6 * vH < 1) {
    return v1 + (v2 - v1) * 6 * vH
  }else {
    if(2 * vH < 1) {
      return v2
    }else {
      if(3 * vH < 2) {
        return v1 + (v2 - v1) * (2 / 3 - vH) * 6
      }
    }
  }
  return v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0;
  var g = 0;
  var b = 0;
  var normH = h / 360;
  if(s == 0) {
    r = g = b = l * 255
  }else {
    var temp1 = 0;
    var temp2 = 0;
    if(l < 0.5) {
      temp2 = l * (1 + s)
    }else {
      temp2 = l + s - s * l
    }
    temp1 = 2 * l - temp2;
    r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3);
    g = 255 * goog.color.hueToRgb_(temp1, temp2, normH);
    b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]);
    var g = Number(regExpResultArray[2]);
    var b = Number(regExpResultArray[3]);
    if(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessary_ = function(hex) {
  return hex.length == 1 ? "0" + hex : hex
};
goog.color.prependPoundIfNecessary_ = function(str) {
  return str.charAt(0) == "#" ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0;
  var green = 0;
  var blue = 0;
  if(s == 0) {
    red = brightness;
    green = brightness;
    blue = brightness
  }else {
    var sextant = Math.floor(h / 60);
    var remainder = h / 60 - sextant;
    var val1 = brightness * (1 - s);
    var val2 = brightness * (1 - s * remainder);
    var val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness;
        green = val3;
        blue = val1;
        break
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue);
  var min = Math.min(Math.min(red, green), blue);
  var hue;
  var saturation;
  var value = max;
  if(min == max) {
    hue = 0;
    saturation = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    if(red == max) {
      hue = (green - blue) / delta
    }else {
      if(green == max) {
        hue = 2 + (blue - red) / delta
      }else {
        hue = 4 + (red - green) / delta
      }
    }
    hue *= 60;
    if(hue < 0) {
      hue += 360
    }
    if(hue > 360) {
      hue -= 360
    }
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  if(hsl1[2] <= 0.5) {
    sl1 = hsl1[1] * hsl1[2]
  }else {
    sl1 = hsl1[1] * (1 - hsl1[2])
  }
  if(hsl2[2] <= 0.5) {
    sl2 = hsl2[1] * hsl2[2]
  }else {
    sl2 = hsl2[1] * (1 - hsl2[2])
  }
  var h1 = hsl1[0] / 360;
  var h2 = hsl2[0] / 360;
  var dh = (h1 - h2) * 2 * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  var suggestionsWithDiff = [];
  for(var i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("goog.fx.dom");
goog.provide("goog.fx.dom.BgColorTransform");
goog.provide("goog.fx.dom.ColorTransform");
goog.provide("goog.fx.dom.Fade");
goog.provide("goog.fx.dom.FadeIn");
goog.provide("goog.fx.dom.FadeInAndShow");
goog.provide("goog.fx.dom.FadeOut");
goog.provide("goog.fx.dom.FadeOutAndHide");
goog.provide("goog.fx.dom.PredefinedEffect");
goog.provide("goog.fx.dom.Resize");
goog.provide("goog.fx.dom.ResizeHeight");
goog.provide("goog.fx.dom.ResizeWidth");
goog.provide("goog.fx.dom.Scroll");
goog.provide("goog.fx.dom.Slide");
goog.provide("goog.fx.dom.SlideFrom");
goog.provide("goog.fx.dom.Swipe");
goog.require("goog.color");
goog.require("goog.events");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Animation.EventType");
goog.require("goog.style");
goog.fx.dom.PredefinedEffect = function(element, start, end, time, opt_acc) {
  goog.fx.Animation.call(this, start, end, time, opt_acc);
  this.element = element
};
goog.inherits(goog.fx.dom.PredefinedEffect, goog.fx.Animation);
goog.fx.dom.PredefinedEffect.prototype.updateStyle = goog.nullFunction;
goog.fx.dom.PredefinedEffect.prototype.onAnimate = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onEnd = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onBegin = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)
};
goog.fx.dom.Slide = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Slide, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Slide.prototype.updateStyle = function() {
  this.element.style.left = Math.round(this.coords[0]) + "px";
  this.element.style.top = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.SlideFrom = function(element, end, time, opt_acc) {
  var start = [element.offsetLeft, element.offsetTop];
  goog.fx.dom.Slide.call(this, element, start, end, time, opt_acc)
};
goog.inherits(goog.fx.dom.SlideFrom, goog.fx.dom.Slide);
goog.fx.dom.SlideFrom.prototype.onBegin = function() {
  this.startPoint = [this.element.offsetLeft, this.element.offsetTop];
  goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)
};
goog.fx.dom.Swipe = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments);
  this.maxWidth_ = Math.max(this.endPoint[0], this.startPoint[0]);
  this.maxHeight_ = Math.max(this.endPoint[1], this.startPoint[1])
};
goog.inherits(goog.fx.dom.Swipe, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle = function() {
  var x = this.coords[0];
  var y = this.coords[1];
  this.clip_(Math.round(x), Math.round(y), this.maxWidth_, this.maxHeight_);
  this.element.style.width = Math.round(x) + "px";
  this.element.style.marginLeft = Math.round(x) - this.maxWidth_ + "px";
  this.element.style.marginTop = Math.round(y) - this.maxHeight_ + "px"
};
goog.fx.dom.Swipe.prototype.clip_ = function(x, y, w, h) {
  this.element.style.clip = "rect(" + (h - y) + "px " + w + "px " + h + "px " + (w - x) + "px)"
};
goog.fx.dom.Scroll = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Scroll, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle = function() {
  this.element.scrollLeft = Math.round(this.coords[0]);
  this.element.scrollTop = Math.round(this.coords[1])
};
goog.fx.dom.Resize = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Resize, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px";
  this.element.style.height = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.ResizeWidth = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeWidth, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeWidth.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.ResizeHeight = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeHeight, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeHeight.prototype.updateStyle = function() {
  this.element.style.height = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.Fade = function(element, start, end, time, opt_acc) {
  if(goog.isNumber(start)) {
    start = [start]
  }
  if(goog.isNumber(end)) {
    end = [end]
  }
  goog.fx.dom.PredefinedEffect.call(this, element, start, end, time, opt_acc);
  if(start.length != 1 || end.length != 1) {
    throw Error("Start and end points must be 1D");
  }
};
goog.inherits(goog.fx.dom.Fade, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Fade.prototype.updateStyle = function() {
  goog.style.setOpacity(this.element, this.coords[0])
};
goog.fx.dom.Fade.prototype.show = function() {
  this.element.style.display = ""
};
goog.fx.dom.Fade.prototype.hide = function() {
  this.element.style.display = "none"
};
goog.fx.dom.FadeOut = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOut, goog.fx.dom.Fade);
goog.fx.dom.FadeIn = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeIn, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOutAndHide, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)
};
goog.fx.dom.FadeOutAndHide.prototype.onEnd = function() {
  this.hide();
  goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)
};
goog.fx.dom.FadeInAndShow = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeInAndShow, goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)
};
goog.fx.dom.BgColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.BgColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.backgroundColor = color
};
goog.fx.dom.BgColorTransform.prototype.updateStyle = function() {
  this.setColor()
};
goog.fx.dom.bgColorFadeIn = function(element, start, time, opt_eventHandler) {
  var initialBgColor = element.style.backgroundColor || "";
  var computedBgColor = goog.style.getBackgroundColor(element);
  var end;
  if(computedBgColor != "transparent" && computedBgColor != "rgba(0, 0, 0, 0)") {
    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex)
  }else {
    end = [255, 255, 255]
  }
  var anim = new goog.fx.dom.BgColorTransform(element, start, end, time);
  function setBgColor() {
    element.style.backgroundColor = initialBgColor
  }
  if(opt_eventHandler) {
    opt_eventHandler.listen(anim, goog.fx.Animation.EventType.END, setBgColor)
  }else {
    goog.events.listen(anim, goog.fx.Animation.EventType.END, setBgColor)
  }
  anim.play()
};
goog.fx.dom.ColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.ColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ColorTransform.prototype.updateStyle = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.color = color
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_)
};
goog.async.Delay.prototype.stop = function() {
  if(this.isActive()) {
    goog.Timer.clear(this.id_)
  }
  this.id_ = 0
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.Delay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if(this.listener_) {
    this.listener_.call(this.handler_)
  }
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f) {
  return function() {
    return f.call(this)
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
/*
 Portions of this code are from the Dojo Toolkit, received by
 The Closure Library Authors under the BSD license. All other code is
 Copyright 2005-2009 The Closure Library Authors. All Rights Reserved.

The "New" BSD License:

Copyright (c) 2005-2009, The Dojo Foundation
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

 Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.
 Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
 Neither the name of the Dojo Foundation nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
goog.provide("goog.dom.query");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.functions");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.query = function() {
  var cssCaseBug = goog.userAgent.WEBKIT && goog.dom.getDocument().compatMode == "BackCompat";
  var childNodesName = !!goog.dom.getDocument().firstChild["children"] ? "children" : "childNodes";
  var specials = ">~+";
  var caseSensitive = false;
  var getQueryParts = function(query) {
    if(specials.indexOf(query.slice(-1)) >= 0) {
      query += " * "
    }else {
      query += " "
    }
    var ts = function(s, e) {
      return goog.string.trim(query.slice(s, e))
    };
    var queryParts = [];
    var inBrackets = -1, inParens = -1, inMatchFor = -1, inPseudo = -1, inClass = -1, inId = -1, inTag = -1, lc = "", cc = "", pStart;
    var x = 0, ql = query.length, currentPart = null, cp = null;
    var endTag = function() {
      if(inTag >= 0) {
        var tv = inTag == x ? null : ts(inTag, x);
        if(specials.indexOf(tv) < 0) {
          currentPart.tag = tv
        }else {
          currentPart.oper = tv
        }
        inTag = -1
      }
    };
    var endId = function() {
      if(inId >= 0) {
        currentPart.id = ts(inId, x).replace(/\\/g, "");
        inId = -1
      }
    };
    var endClass = function() {
      if(inClass >= 0) {
        currentPart.classes.push(ts(inClass + 1, x).replace(/\\/g, ""));
        inClass = -1
      }
    };
    var endAll = function() {
      endId();
      endTag();
      endClass()
    };
    var endPart = function() {
      endAll();
      if(inPseudo >= 0) {
        currentPart.pseudos.push({name:ts(inPseudo + 1, x)})
      }
      currentPart.loops = currentPart.pseudos.length || currentPart.attrs.length || currentPart.classes.length;
      currentPart.oquery = currentPart.query = ts(pStart, x);
      currentPart.otag = currentPart.tag = currentPart.oper ? null : currentPart.tag || "*";
      if(currentPart.tag) {
        currentPart.tag = currentPart.tag.toUpperCase()
      }
      if(queryParts.length && queryParts[queryParts.length - 1].oper) {
        currentPart.infixOper = queryParts.pop();
        currentPart.query = currentPart.infixOper.query + " " + currentPart.query
      }
      queryParts.push(currentPart);
      currentPart = null
    };
    for(;lc = cc, cc = query.charAt(x), x < ql;x++) {
      if(lc == "\\") {
        continue
      }
      if(!currentPart) {
        pStart = x;
        currentPart = {query:null, pseudos:[], attrs:[], classes:[], tag:null, oper:null, id:null, getTag:function() {
          return caseSensitive ? this.otag : this.tag
        }};
        inTag = x
      }
      if(inBrackets >= 0) {
        if(cc == "]") {
          if(!cp.attr) {
            cp.attr = ts(inBrackets + 1, x)
          }else {
            cp.matchFor = ts(inMatchFor || inBrackets + 1, x)
          }
          var cmf = cp.matchFor;
          if(cmf) {
            if(cmf.charAt(0) == '"' || cmf.charAt(0) == "'") {
              cp.matchFor = cmf.slice(1, -1)
            }
          }
          currentPart.attrs.push(cp);
          cp = null;
          inBrackets = inMatchFor = -1
        }else {
          if(cc == "=") {
            var addToCc = "|~^$*".indexOf(lc) >= 0 ? lc : "";
            cp.type = addToCc + cc;
            cp.attr = ts(inBrackets + 1, x - addToCc.length);
            inMatchFor = x + 1
          }
        }
      }else {
        if(inParens >= 0) {
          if(cc == ")") {
            if(inPseudo >= 0) {
              cp.value = ts(inParens + 1, x)
            }
            inPseudo = inParens = -1
          }
        }else {
          if(cc == "#") {
            endAll();
            inId = x + 1
          }else {
            if(cc == ".") {
              endAll();
              inClass = x
            }else {
              if(cc == ":") {
                endAll();
                inPseudo = x
              }else {
                if(cc == "[") {
                  endAll();
                  inBrackets = x;
                  cp = {}
                }else {
                  if(cc == "(") {
                    if(inPseudo >= 0) {
                      cp = {name:ts(inPseudo + 1, x), value:null};
                      currentPart.pseudos.push(cp)
                    }
                    inParens = x
                  }else {
                    if(cc == " " && lc != cc) {
                      endPart()
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    return queryParts
  };
  var agree = function(first, second) {
    if(!first) {
      return second
    }
    if(!second) {
      return first
    }
    return function() {
      return first.apply(window, arguments) && second.apply(window, arguments)
    }
  };
  function getArr(i, opt_arr) {
    var r = opt_arr || [];
    if(i) {
      r.push(i)
    }
    return r
  }
  var isElement = function(n) {
    return 1 == n.nodeType
  };
  var blank = "";
  var getAttr = function(elem, attr) {
    if(!elem) {
      return blank
    }
    if(attr == "class") {
      return elem.className || blank
    }
    if(attr == "for") {
      return elem.htmlFor || blank
    }
    if(attr == "style") {
      return elem.style.cssText || blank
    }
    return(caseSensitive ? elem.getAttribute(attr) : elem.getAttribute(attr, 2)) || blank
  };
  var attrs = {"*=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) >= 0
    }
  }, "^=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr).indexOf(value) == 0
    }
  }, "$=":function(attr, value) {
    var tval = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea.lastIndexOf(value) == ea.length - value.length
    }
  }, "~=":function(attr, value) {
    var tval = " " + value + " ";
    return function(elem) {
      var ea = " " + getAttr(elem, attr) + " ";
      return ea.indexOf(tval) >= 0
    }
  }, "|=":function(attr, value) {
    value = " " + value;
    return function(elem) {
      var ea = " " + getAttr(elem, attr);
      return ea == value || ea.indexOf(value + "-") == 0
    }
  }, "=":function(attr, value) {
    return function(elem) {
      return getAttr(elem, attr) == value
    }
  }};
  var noNextElementSibling = typeof goog.dom.getDocument().firstChild.nextElementSibling == "undefined";
  var nSibling = !noNextElementSibling ? "nextElementSibling" : "nextSibling";
  var pSibling = !noNextElementSibling ? "previousElementSibling" : "previousSibling";
  var simpleNodeTest = noNextElementSibling ? isElement : goog.functions.TRUE;
  var _lookLeft = function(node) {
    while(node = node[pSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var _lookRight = function(node) {
    while(node = node[nSibling]) {
      if(simpleNodeTest(node)) {
        return false
      }
    }
    return true
  };
  var getNodeIndex = function(node) {
    var root = node.parentNode;
    var i = 0, tret = root[childNodesName], ci = node["_i"] || -1, cl = root["_l"] || -1;
    if(!tret) {
      return-1
    }
    var l = tret.length;
    if(cl == l && ci >= 0 && cl >= 0) {
      return ci
    }
    root["_l"] = l;
    ci = -1;
    var te = root["firstElementChild"] || root["firstChild"];
    for(;te;te = te[nSibling]) {
      if(simpleNodeTest(te)) {
        te["_i"] = ++i;
        if(node === te) {
          ci = i
        }
      }
    }
    return ci
  };
  var isEven = function(elem) {
    return!(getNodeIndex(elem) % 2)
  };
  var isOdd = function(elem) {
    return getNodeIndex(elem) % 2
  };
  var pseudos = {"checked":function(name, condition) {
    return function(elem) {
      return elem.checked || elem.attributes["checked"]
    }
  }, "first-child":function() {
    return _lookLeft
  }, "last-child":function() {
    return _lookRight
  }, "only-child":function(name, condition) {
    return function(node) {
      if(!_lookLeft(node)) {
        return false
      }
      if(!_lookRight(node)) {
        return false
      }
      return true
    }
  }, "empty":function(name, condition) {
    return function(elem) {
      var cn = elem.childNodes;
      var cnl = elem.childNodes.length;
      for(var x = cnl - 1;x >= 0;x--) {
        var nt = cn[x].nodeType;
        if(nt === 1 || nt == 3) {
          return false
        }
      }
      return true
    }
  }, "contains":function(name, condition) {
    var cz = condition.charAt(0);
    if(cz == '"' || cz == "'") {
      condition = condition.slice(1, -1)
    }
    return function(elem) {
      return elem.innerHTML.indexOf(condition) >= 0
    }
  }, "not":function(name, condition) {
    var p = getQueryParts(condition)[0];
    var ignores = {el:1};
    if(p.tag != "*") {
      ignores.tag = 1
    }
    if(!p.classes.length) {
      ignores.classes = 1
    }
    var ntf = getSimpleFilterFunc(p, ignores);
    return function(elem) {
      return!ntf(elem)
    }
  }, "nth-child":function(name, condition) {
    function pi(n) {
      return parseInt(n, 10)
    }
    if(condition == "odd") {
      return isOdd
    }else {
      if(condition == "even") {
        return isEven
      }
    }
    if(condition.indexOf("n") != -1) {
      var tparts = condition.split("n", 2);
      var pred = tparts[0] ? tparts[0] == "-" ? -1 : pi(tparts[0]) : 1;
      var idx = tparts[1] ? pi(tparts[1]) : 0;
      var lb = 0, ub = -1;
      if(pred > 0) {
        if(idx < 0) {
          idx = idx % pred && pred + idx % pred
        }else {
          if(idx > 0) {
            if(idx >= pred) {
              lb = idx - idx % pred
            }
            idx = idx % pred
          }
        }
      }else {
        if(pred < 0) {
          pred *= -1;
          if(idx > 0) {
            ub = idx;
            idx = idx % pred
          }
        }
      }
      if(pred > 0) {
        return function(elem) {
          var i = getNodeIndex(elem);
          return i >= lb && (ub < 0 || i <= ub) && i % pred == idx
        }
      }else {
        condition = idx
      }
    }
    var ncount = pi(condition);
    return function(elem) {
      return getNodeIndex(elem) == ncount
    }
  }};
  var defaultGetter = goog.userAgent.IE ? function(cond) {
    var clc = cond.toLowerCase();
    if(clc == "class") {
      cond = "className"
    }
    return function(elem) {
      return caseSensitive ? elem.getAttribute(cond) : elem[cond] || elem[clc]
    }
  } : function(cond) {
    return function(elem) {
      return elem && elem.getAttribute && elem.hasAttribute(cond)
    }
  };
  var getSimpleFilterFunc = function(query, ignores) {
    if(!query) {
      return goog.functions.TRUE
    }
    ignores = ignores || {};
    var ff = null;
    if(!ignores.el) {
      ff = agree(ff, isElement)
    }
    if(!ignores.tag) {
      if(query.tag != "*") {
        ff = agree(ff, function(elem) {
          return elem && elem.tagName == query.getTag()
        })
      }
    }
    if(!ignores.classes) {
      goog.array.forEach(query.classes, function(cname, idx, arr) {
        var re = new RegExp("(?:^|\\s)" + cname + "(?:\\s|$)");
        ff = agree(ff, function(elem) {
          return re.test(elem.className)
        });
        ff.count = idx
      })
    }
    if(!ignores.pseudos) {
      goog.array.forEach(query.pseudos, function(pseudo) {
        var pn = pseudo.name;
        if(pseudos[pn]) {
          ff = agree(ff, pseudos[pn](pn, pseudo.value))
        }
      })
    }
    if(!ignores.attrs) {
      goog.array.forEach(query.attrs, function(attr) {
        var matcher;
        var a = attr.attr;
        if(attr.type && attrs[attr.type]) {
          matcher = attrs[attr.type](a, attr.matchFor)
        }else {
          if(a.length) {
            matcher = defaultGetter(a)
          }
        }
        if(matcher) {
          ff = agree(ff, matcher)
        }
      })
    }
    if(!ignores.id) {
      if(query.id) {
        ff = agree(ff, function(elem) {
          return!!elem && elem.id == query.id
        })
      }
    }
    if(!ff) {
      if(!("default" in ignores)) {
        ff = goog.functions.TRUE
      }
    }
    return ff
  };
  var nextSiblingIterator = function(filterFunc) {
    return function(node, ret, bag) {
      while(node = node[nSibling]) {
        if(noNextElementSibling && !isElement(node)) {
          continue
        }
        if((!bag || _isUnique(node, bag)) && filterFunc(node)) {
          ret.push(node)
        }
        break
      }
      return ret
    }
  };
  var nextSiblingsIterator = function(filterFunc) {
    return function(root, ret, bag) {
      var te = root[nSibling];
      while(te) {
        if(simpleNodeTest(te)) {
          if(bag && !_isUnique(te, bag)) {
            break
          }
          if(filterFunc(te)) {
            ret.push(te)
          }
        }
        te = te[nSibling]
      }
      return ret
    }
  };
  var _childElements = function(filterFunc) {
    filterFunc = filterFunc || goog.functions.TRUE;
    return function(root, ret, bag) {
      var te, x = 0, tret = root[childNodesName];
      while(te = tret[x++]) {
        if(simpleNodeTest(te) && (!bag || _isUnique(te, bag)) && filterFunc(te, x)) {
          ret.push(te)
        }
      }
      return ret
    }
  };
  var _isDescendant = function(node, root) {
    var pn = node.parentNode;
    while(pn) {
      if(pn == root) {
        break
      }
      pn = pn.parentNode
    }
    return!!pn
  };
  var _getElementsFuncCache = {};
  var getElementsFunc = function(query) {
    var retFunc = _getElementsFuncCache[query.query];
    if(retFunc) {
      return retFunc
    }
    var io = query.infixOper;
    var oper = io ? io.oper : "";
    var filterFunc = getSimpleFilterFunc(query, {el:1});
    var qt = query.tag;
    var wildcardTag = "*" == qt;
    var ecs = goog.dom.getDocument()["getElementsByClassName"];
    if(!oper) {
      if(query.id) {
        filterFunc = !query.loops && wildcardTag ? goog.functions.TRUE : getSimpleFilterFunc(query, {el:1, id:1});
        retFunc = function(root, arr) {
          var te = goog.dom.getDomHelper(root).getElement(query.id);
          if(!te || !filterFunc(te)) {
            return
          }
          if(9 == root.nodeType) {
            return getArr(te, arr)
          }else {
            if(_isDescendant(te, root)) {
              return getArr(te, arr)
            }
          }
        }
      }else {
        if(ecs && /\{\s*\[native code\]\s*\}/.test(String(ecs)) && query.classes.length && !cssCaseBug) {
          filterFunc = getSimpleFilterFunc(query, {el:1, classes:1, id:1});
          var classesString = query.classes.join(" ");
          retFunc = function(root, arr) {
            var ret = getArr(0, arr), te, x = 0;
            var tret = root.getElementsByClassName(classesString);
            while(te = tret[x++]) {
              if(filterFunc(te, root)) {
                ret.push(te)
              }
            }
            return ret
          }
        }else {
          if(!wildcardTag && !query.loops) {
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                ret.push(te)
              }
              return ret
            }
          }else {
            filterFunc = getSimpleFilterFunc(query, {el:1, tag:1, id:1});
            retFunc = function(root, arr) {
              var ret = getArr(0, arr), te, x = 0;
              var tret = root.getElementsByTagName(query.getTag());
              while(te = tret[x++]) {
                if(filterFunc(te, root)) {
                  ret.push(te)
                }
              }
              return ret
            }
          }
        }
      }
    }else {
      var skipFilters = {el:1};
      if(wildcardTag) {
        skipFilters.tag = 1
      }
      filterFunc = getSimpleFilterFunc(query, skipFilters);
      if("+" == oper) {
        retFunc = nextSiblingIterator(filterFunc)
      }else {
        if("~" == oper) {
          retFunc = nextSiblingsIterator(filterFunc)
        }else {
          if(">" == oper) {
            retFunc = _childElements(filterFunc)
          }
        }
      }
    }
    return _getElementsFuncCache[query.query] = retFunc
  };
  var filterDown = function(root, queryParts) {
    var candidates = getArr(root), qp, x, te, qpl = queryParts.length, bag, ret;
    for(var i = 0;i < qpl;i++) {
      ret = [];
      qp = queryParts[i];
      x = candidates.length - 1;
      if(x > 0) {
        bag = {};
        ret.nozip = true
      }
      var gef = getElementsFunc(qp);
      for(var j = 0;te = candidates[j];j++) {
        gef(te, ret, bag)
      }
      if(!ret.length) {
        break
      }
      candidates = ret
    }
    return ret
  };
  var _queryFuncCacheDOM = {}, _queryFuncCacheQSA = {};
  var getStepQueryFunc = function(query) {
    var qparts = getQueryParts(goog.string.trim(query));
    if(qparts.length == 1) {
      var tef = getElementsFunc(qparts[0]);
      return function(root) {
        var r = tef(root, []);
        if(r) {
          r.nozip = true
        }
        return r
      }
    }
    return function(root) {
      return filterDown(root, qparts)
    }
  };
  var qsa = "querySelectorAll";
  var qsaAvail = !!goog.dom.getDocument()[qsa] && (!goog.userAgent.WEBKIT || goog.userAgent.isVersion("526"));
  var getQueryFunc = function(query, opt_forceDOM) {
    if(qsaAvail) {
      var qsaCached = _queryFuncCacheQSA[query];
      if(qsaCached && !opt_forceDOM) {
        return qsaCached
      }
    }
    var domCached = _queryFuncCacheDOM[query];
    if(domCached) {
      return domCached
    }
    var qcz = query.charAt(0);
    var nospace = -1 == query.indexOf(" ");
    if(query.indexOf("#") >= 0 && nospace) {
      opt_forceDOM = true
    }
    var useQSA = qsaAvail && !opt_forceDOM && specials.indexOf(qcz) == -1 && (!goog.userAgent.IE || query.indexOf(":") == -1) && !(cssCaseBug && query.indexOf(".") >= 0) && query.indexOf(":contains") == -1 && query.indexOf("|=") == -1;
    if(useQSA) {
      var tq = specials.indexOf(query.charAt(query.length - 1)) >= 0 ? query + " *" : query;
      return _queryFuncCacheQSA[query] = function(root) {
        try {
          if(!(9 == root.nodeType || nospace)) {
            throw"";
          }
          var r = root[qsa](tq);
          if(goog.userAgent.IE) {
            r.commentStrip = true
          }else {
            r.nozip = true
          }
          return r
        }catch(e) {
          return getQueryFunc(query, true)(root)
        }
      }
    }else {
      var parts = query.split(/\s*,\s*/);
      return _queryFuncCacheDOM[query] = parts.length < 2 ? getStepQueryFunc(query) : function(root) {
        var pindex = 0, ret = [], tp;
        while(tp = parts[pindex++]) {
          ret = ret.concat(getStepQueryFunc(tp)(root))
        }
        return ret
      }
    }
  };
  var _zipIdx = 0;
  var _nodeUID = goog.userAgent.IE ? function(node) {
    if(caseSensitive) {
      return node.getAttribute("_uid") || node.setAttribute("_uid", ++_zipIdx) || _zipIdx
    }else {
      return node.uniqueID
    }
  } : function(node) {
    return node["_uid"] || (node["_uid"] = ++_zipIdx)
  };
  var _isUnique = function(node, bag) {
    if(!bag) {
      return 1
    }
    var id = _nodeUID(node);
    if(!bag[id]) {
      return bag[id] = 1
    }
    return 0
  };
  var _zipIdxName = "_zipIdx";
  var _zip = function(arr) {
    if(arr && arr.nozip) {
      return arr
    }
    var ret = [];
    if(!arr || !arr.length) {
      return ret
    }
    if(arr[0]) {
      ret.push(arr[0])
    }
    if(arr.length < 2) {
      return ret
    }
    _zipIdx++;
    if(goog.userAgent.IE && caseSensitive) {
      var szidx = _zipIdx + "";
      arr[0].setAttribute(_zipIdxName, szidx);
      for(var x = 1, te;te = arr[x];x++) {
        if(arr[x].getAttribute(_zipIdxName) != szidx) {
          ret.push(te)
        }
        te.setAttribute(_zipIdxName, szidx)
      }
    }else {
      if(goog.userAgent.IE && arr.commentStrip) {
        try {
          for(var x = 1, te;te = arr[x];x++) {
            if(isElement(te)) {
              ret.push(te)
            }
          }
        }catch(e) {
        }
      }else {
        if(arr[0]) {
          arr[0][_zipIdxName] = _zipIdx
        }
        for(var x = 1, te;te = arr[x];x++) {
          if(arr[x][_zipIdxName] != _zipIdx) {
            ret.push(te)
          }
          te[_zipIdxName] = _zipIdx
        }
      }
    }
    return ret
  };
  var query = function(query, root) {
    if(!query) {
      return[]
    }
    if(query.constructor == Array) {
      return query
    }
    if(!goog.isString(query)) {
      return[query]
    }
    if(goog.isString(root)) {
      root = goog.dom.getElement(root);
      if(!root) {
        return[]
      }
    }
    root = root || goog.dom.getDocument();
    var od = root.ownerDocument || root.documentElement;
    caseSensitive = root.contentType && root.contentType == "application/xml" || goog.userAgent.OPERA && (root.doctype || od.toString() == "[object XMLDocument]") || !!od && (goog.userAgent.IE ? od.xml : root.xmlVersion || od.xmlVersion);
    var r = getQueryFunc(query)(root);
    if(r && r.nozip) {
      return r
    }
    return _zip(r)
  };
  query.pseudos = pseudos;
  return query
}();
goog.exportSymbol("goog.dom.query", goog.dom.query);
goog.exportSymbol("goog.dom.query.pseudos", goog.dom.query.pseudos);
goog.provide("goog.dom.ViewportSizeMonitor");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Size");
goog.require("goog.userAgent");
goog.dom.ViewportSizeMonitor = function(opt_window) {
  goog.events.EventTarget.call(this);
  this.window_ = opt_window || window;
  this.listenerKey_ = goog.events.listen(this.window_, goog.events.EventType.RESIZE, this.handleResize_, false, this);
  this.size_ = goog.dom.getViewportSize(this.window_);
  if(this.isPollingRequired_()) {
    this.windowSizePollInterval_ = window.setInterval(goog.bind(this.checkForSizeChange_, this), goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE)
  }
};
goog.inherits(goog.dom.ViewportSizeMonitor, goog.events.EventTarget);
goog.dom.ViewportSizeMonitor.getInstanceForWindow = function(opt_window) {
  var currentWindow = opt_window || window;
  var uid = goog.getUid(currentWindow);
  return goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] = goog.dom.ViewportSizeMonitor.windowInstanceMap_[uid] || new goog.dom.ViewportSizeMonitor(currentWindow)
};
goog.dom.ViewportSizeMonitor.windowInstanceMap_ = {};
goog.dom.ViewportSizeMonitor.WINDOW_SIZE_POLL_RATE = 500;
goog.dom.ViewportSizeMonitor.prototype.listenerKey_ = null;
goog.dom.ViewportSizeMonitor.prototype.window_ = null;
goog.dom.ViewportSizeMonitor.prototype.size_ = null;
goog.dom.ViewportSizeMonitor.prototype.windowSizePollInterval_ = null;
goog.dom.ViewportSizeMonitor.prototype.isPollingRequired_ = function() {
  return goog.userAgent.WEBKIT && goog.userAgent.WINDOWS || goog.userAgent.OPERA && this.window_.self != this.window_.top
};
goog.dom.ViewportSizeMonitor.prototype.getSize = function() {
  return this.size_ ? this.size_.clone() : null
};
goog.dom.ViewportSizeMonitor.prototype.disposeInternal = function() {
  goog.dom.ViewportSizeMonitor.superClass_.disposeInternal.call(this);
  if(this.listenerKey_) {
    goog.events.unlistenByKey(this.listenerKey_);
    this.listenerKey_ = null
  }
  if(this.windowSizePollInterval_) {
    window.clearInterval(this.windowSizePollInterval_);
    this.windowSizePollInterval_ = null
  }
  this.window_ = null;
  this.size_ = null
};
goog.dom.ViewportSizeMonitor.prototype.handleResize_ = function(event) {
  this.checkForSizeChange_()
};
goog.dom.ViewportSizeMonitor.prototype.checkForSizeChange_ = function() {
  var size = goog.dom.getViewportSize(this.window_);
  if(!goog.math.Size.equals(size, this.size_)) {
    this.size_ = size;
    this.dispatchEvent(goog.events.EventType.RESIZE)
  }
};
goog.provide("enfocus.enlive.syntax");
goog.require("cljs.core");
enfocus.enlive.syntax.sel_to_string = function sel_to_string(item) {
  if(cljs.core.keyword_QMARK_.call(null, item)) {
    return cljs.core.name.call(null, item)
  }else {
    if(cljs.core.string_QMARK_.call(null, item)) {
      return item
    }else {
      if(cljs.core.coll_QMARK_.call(null, item)) {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__12332_SHARP_) {
          return sel_to_string.call(null, p1__12332_SHARP_)
        }, item))
      }else {
        return null
      }
    }
  }
};
enfocus.enlive.syntax.convert = function convert(sel) {
  if(cljs.core.string_QMARK_.call(null, sel)) {
    return sel
  }else {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.map.call(null, enfocus.enlive.syntax.sel_to_string, sel)))
  }
};
enfocus.enlive.syntax.attr_pairs = function attr_pairs(op, elms) {
  var ts__12345 = function(p__12340) {
    var vec__12341__12342 = p__12340;
    var x__12343 = cljs.core.nth.call(null, vec__12341__12342, 0, null);
    var y__12344 = cljs.core.nth.call(null, vec__12341__12342, 1, null);
    return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x__12343)), cljs.core.str(op), cljs.core.str("='"), cljs.core.str(y__12344), cljs.core.str("']")].join("")
  };
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts__12345, cljs.core.partition.call(null, 2, elms)))
};
enfocus.enlive.syntax.attr_QMARK_ = function() {
  var attr_QMARK___delegate = function(elms) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__12333_SHARP_) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, p1__12333_SHARP_)), cljs.core.str("]")].join("")
    }, elms))
  };
  var attr_QMARK_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_QMARK___delegate.call(this, elms)
  };
  attr_QMARK_.cljs$lang$maxFixedArity = 0;
  attr_QMARK_.cljs$lang$applyTo = function(arglist__12346) {
    var elms = cljs.core.seq(arglist__12346);
    return attr_QMARK___delegate(elms)
  };
  attr_QMARK_.cljs$lang$arity$variadic = attr_QMARK___delegate;
  return attr_QMARK_
}();
enfocus.enlive.syntax.attr_EQ_ = function() {
  var attr_EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "", elms)
  };
  var attr_EQ_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_EQ___delegate.call(this, elms)
  };
  attr_EQ_.cljs$lang$maxFixedArity = 0;
  attr_EQ_.cljs$lang$applyTo = function(arglist__12347) {
    var elms = cljs.core.seq(arglist__12347);
    return attr_EQ___delegate(elms)
  };
  attr_EQ_.cljs$lang$arity$variadic = attr_EQ___delegate;
  return attr_EQ_
}();
enfocus.enlive.syntax.attr_has = function() {
  var attr_has__delegate = function(x, vals) {
    var ts__12349 = function(y) {
      return[cljs.core.str("["), cljs.core.str(cljs.core.name.call(null, x)), cljs.core.str("~='"), cljs.core.str(y), cljs.core.str("']")].join("")
    };
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, ts__12349, vals))
  };
  var attr_has = function(x, var_args) {
    var vals = null;
    if(goog.isDef(var_args)) {
      vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return attr_has__delegate.call(this, x, vals)
  };
  attr_has.cljs$lang$maxFixedArity = 1;
  attr_has.cljs$lang$applyTo = function(arglist__12350) {
    var x = cljs.core.first(arglist__12350);
    var vals = cljs.core.rest(arglist__12350);
    return attr_has__delegate(x, vals)
  };
  attr_has.cljs$lang$arity$variadic = attr_has__delegate;
  return attr_has
}();
enfocus.enlive.syntax.attr_starts = function() {
  var attr_starts__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "^", elms)
  };
  var attr_starts = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_starts__delegate.call(this, elms)
  };
  attr_starts.cljs$lang$maxFixedArity = 0;
  attr_starts.cljs$lang$applyTo = function(arglist__12351) {
    var elms = cljs.core.seq(arglist__12351);
    return attr_starts__delegate(elms)
  };
  attr_starts.cljs$lang$arity$variadic = attr_starts__delegate;
  return attr_starts
}();
enfocus.enlive.syntax.attr_ends = function() {
  var attr_ends__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "$", elms)
  };
  var attr_ends = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_ends__delegate.call(this, elms)
  };
  attr_ends.cljs$lang$maxFixedArity = 0;
  attr_ends.cljs$lang$applyTo = function(arglist__12352) {
    var elms = cljs.core.seq(arglist__12352);
    return attr_ends__delegate(elms)
  };
  attr_ends.cljs$lang$arity$variadic = attr_ends__delegate;
  return attr_ends
}();
enfocus.enlive.syntax.attr_contains = function() {
  var attr_contains__delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "*", elms)
  };
  var attr_contains = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_contains__delegate.call(this, elms)
  };
  attr_contains.cljs$lang$maxFixedArity = 0;
  attr_contains.cljs$lang$applyTo = function(arglist__12353) {
    var elms = cljs.core.seq(arglist__12353);
    return attr_contains__delegate(elms)
  };
  attr_contains.cljs$lang$arity$variadic = attr_contains__delegate;
  return attr_contains
}();
enfocus.enlive.syntax.attr_BAR__EQ_ = function() {
  var attr_BAR__EQ___delegate = function(elms) {
    return enfocus.enlive.syntax.attr_pairs.call(null, "|", elms)
  };
  var attr_BAR__EQ_ = function(var_args) {
    var elms = null;
    if(goog.isDef(var_args)) {
      elms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_BAR__EQ___delegate.call(this, elms)
  };
  attr_BAR__EQ_.cljs$lang$maxFixedArity = 0;
  attr_BAR__EQ_.cljs$lang$applyTo = function(arglist__12354) {
    var elms = cljs.core.seq(arglist__12354);
    return attr_BAR__EQ___delegate(elms)
  };
  attr_BAR__EQ_.cljs$lang$arity$variadic = attr_BAR__EQ___delegate;
  return attr_BAR__EQ_
}();
enfocus.enlive.syntax.nth_op = function() {
  var nth_op = null;
  var nth_op__2 = function(op, x) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str(")")].join("")
  };
  var nth_op__3 = function(op, x, y) {
    return[cljs.core.str(":nth-"), cljs.core.str(op), cljs.core.str("("), cljs.core.str(x), cljs.core.str("n"), cljs.core.str(y > 0 ? "+" : null), cljs.core.str(y)].join("")
  };
  nth_op = function(op, x, y) {
    switch(arguments.length) {
      case 2:
        return nth_op__2.call(this, op, x);
      case 3:
        return nth_op__3.call(this, op, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_op.cljs$lang$arity$2 = nth_op__2;
  nth_op.cljs$lang$arity$3 = nth_op__3;
  return nth_op
}();
enfocus.enlive.syntax.nth_child = function() {
  var nth_child = null;
  var nth_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x)
  };
  var nth_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "child", x, y)
  };
  nth_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_child__1.call(this, x);
      case 2:
        return nth_child__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_child.cljs$lang$arity$1 = nth_child__1;
  nth_child.cljs$lang$arity$2 = nth_child__2;
  return nth_child
}();
enfocus.enlive.syntax.nth_last_child = function() {
  var nth_last_child = null;
  var nth_last_child__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x)
  };
  var nth_last_child__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-child", x, y)
  };
  nth_last_child = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_child__1.call(this, x);
      case 2:
        return nth_last_child__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_last_child.cljs$lang$arity$1 = nth_last_child__1;
  nth_last_child.cljs$lang$arity$2 = nth_last_child__2;
  return nth_last_child
}();
enfocus.enlive.syntax.nth_of_type = function() {
  var nth_of_type = null;
  var nth_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x)
  };
  var nth_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "of-type", x, y)
  };
  nth_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_of_type__1.call(this, x);
      case 2:
        return nth_of_type__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_of_type.cljs$lang$arity$1 = nth_of_type__1;
  nth_of_type.cljs$lang$arity$2 = nth_of_type__2;
  return nth_of_type
}();
enfocus.enlive.syntax.nth_last_of_type = function() {
  var nth_last_of_type = null;
  var nth_last_of_type__1 = function(x) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x)
  };
  var nth_last_of_type__2 = function(x, y) {
    return enfocus.enlive.syntax.nth_op.call(null, "last-of-type", x, y)
  };
  nth_last_of_type = function(x, y) {
    switch(arguments.length) {
      case 1:
        return nth_last_of_type__1.call(this, x);
      case 2:
        return nth_last_of_type__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_last_of_type.cljs$lang$arity$1 = nth_last_of_type__1;
  nth_last_of_type.cljs$lang$arity$2 = nth_last_of_type__2;
  return nth_last_of_type
}();
enfocus.enlive.syntax.but = function() {
  var but__delegate = function(sel) {
    return[cljs.core.str("not("), cljs.core.str(enfocus.enlive.syntax.convert.call(null, sel)), cljs.core.str(")")].join("")
  };
  var but = function(var_args) {
    var sel = null;
    if(goog.isDef(var_args)) {
      sel = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return but__delegate.call(this, sel)
  };
  but.cljs$lang$maxFixedArity = 0;
  but.cljs$lang$applyTo = function(arglist__12355) {
    var sel = cljs.core.seq(arglist__12355);
    return but__delegate(sel)
  };
  but.cljs$lang$arity$variadic = but__delegate;
  return but
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__12297 = s;
      var limit__12298 = limit;
      var parts__12299 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__12298, 1)) {
          return cljs.core.conj.call(null, parts__12299, s__12297)
        }else {
          var temp__3971__auto____12300 = cljs.core.re_find.call(null, re, s__12297);
          if(cljs.core.truth_(temp__3971__auto____12300)) {
            var m__12301 = temp__3971__auto____12300;
            var index__12302 = s__12297.indexOf(m__12301);
            var G__12303 = s__12297.substring(index__12302 + cljs.core.count.call(null, m__12301));
            var G__12304 = limit__12298 - 1;
            var G__12305 = cljs.core.conj.call(null, parts__12299, s__12297.substring(0, index__12302));
            s__12297 = G__12303;
            limit__12298 = G__12304;
            parts__12299 = G__12305;
            continue
          }else {
            return cljs.core.conj.call(null, parts__12299, s__12297)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__12309 = s.length;
  while(true) {
    if(index__12309 === 0) {
      return""
    }else {
      var ch__12310 = cljs.core._lookup.call(null, s, index__12309 - 1, null);
      if(function() {
        var or__3824__auto____12311 = cljs.core._EQ_.call(null, ch__12310, "\n");
        if(or__3824__auto____12311) {
          return or__3824__auto____12311
        }else {
          return cljs.core._EQ_.call(null, ch__12310, "\r")
        }
      }()) {
        var G__12312 = index__12309 - 1;
        index__12309 = G__12312;
        continue
      }else {
        return s.substring(0, index__12309)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__12316 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____12317 = cljs.core.not.call(null, s__12316);
    if(or__3824__auto____12317) {
      return or__3824__auto____12317
    }else {
      var or__3824__auto____12318 = cljs.core._EQ_.call(null, "", s__12316);
      if(or__3824__auto____12318) {
        return or__3824__auto____12318
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__12316)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__12325 = new goog.string.StringBuffer;
  var length__12326 = s.length;
  var index__12327 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__12326, index__12327)) {
      return buffer__12325.toString()
    }else {
      var ch__12328 = s.charAt(index__12327);
      var temp__3971__auto____12329 = cljs.core._lookup.call(null, cmap, ch__12328, null);
      if(cljs.core.truth_(temp__3971__auto____12329)) {
        var replacement__12330 = temp__3971__auto____12329;
        buffer__12325.append([cljs.core.str(replacement__12330)].join(""))
      }else {
        buffer__12325.append(ch__12328)
      }
      var G__12331 = index__12327 + 1;
      index__12327 = G__12331;
      continue
    }
    break
  }
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__12289 = document.createElement("div");
var test_html__12290 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__12289.innerHTML = test_html__12290;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__12289.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__12289.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__12289.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__11882 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__11883 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__11884 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__11883, "caption":table_section_wrapper__11883, "optgroup":opt_wrapper__11882, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__11884, "thead":table_section_wrapper__11883, "th":cell_wrapper__11884, "option":opt_wrapper__11882, "tbody":table_section_wrapper__11883, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__11883});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___11897 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__11901 = function() {
    var and__3822__auto____11898 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3822__auto____11898) {
      return no_tbody_QMARK___11897
    }else {
      return and__3822__auto____11898
    }
  }() ? function() {
    var and__3822__auto____11899 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____11899)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____11899
    }
  }() : function() {
    var and__3822__auto____11900 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3822__auto____11900) {
      return no_tbody_QMARK___11897
    }else {
      return and__3822__auto____11900
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__11902__11903 = cljs.core.seq.call(null, tbody__11901);
  if(G__11902__11903) {
    var child__11904 = cljs.core.first.call(null, G__11902__11903);
    var G__11902__11905 = G__11902__11903;
    while(true) {
      if(function() {
        var and__3822__auto____11906 = cljs.core._EQ_.call(null, child__11904.nodeName, "tbody");
        if(and__3822__auto____11906) {
          return cljs.core._EQ_.call(null, child__11904.childNodes.length, 0)
        }else {
          return and__3822__auto____11906
        }
      }()) {
        child__11904.parentNode.removeChild(child__11904)
      }else {
      }
      var temp__3974__auto____11907 = cljs.core.next.call(null, G__11902__11905);
      if(temp__3974__auto____11907) {
        var G__11902__11908 = temp__3974__auto____11907;
        var G__11909 = cljs.core.first.call(null, G__11902__11908);
        var G__11910 = G__11902__11908;
        child__11904 = G__11909;
        G__11902__11905 = G__11910;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__11924 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__11925 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__11924)))].join("").toLowerCase();
  var vec__11923__11926 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__11925, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__11927 = cljs.core.nth.call(null, vec__11923__11926, 0, null);
  var start_wrap__11928 = cljs.core.nth.call(null, vec__11923__11926, 1, null);
  var end_wrap__11929 = cljs.core.nth.call(null, vec__11923__11926, 2, null);
  var div__11933 = function() {
    var wrapper__11931 = function() {
      var div__11930 = document.createElement("div");
      div__11930.innerHTML = [cljs.core.str(start_wrap__11928), cljs.core.str(html__11924), cljs.core.str(end_wrap__11929)].join("");
      return div__11930
    }();
    var level__11932 = depth__11927;
    while(true) {
      if(level__11932 > 0) {
        var G__11935 = wrapper__11931.lastChild;
        var G__11936 = level__11932 - 1;
        wrapper__11931 = G__11935;
        level__11932 = G__11936;
        continue
      }else {
        return wrapper__11931
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__11933, html__11924)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____11934 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____11934) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__11924)
    }else {
      return and__3822__auto____11934
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__11933, html__11924)
  }else {
  }
  return div__11933.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____11941 = content;
    if(and__3822__auto____11941) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____11941
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2363__auto____11942 = content == null ? null : content;
    return function() {
      var or__3824__auto____11943 = domina.nodes[goog.typeOf(x__2363__auto____11942)];
      if(or__3824__auto____11943) {
        return or__3824__auto____11943
      }else {
        var or__3824__auto____11944 = domina.nodes["_"];
        if(or__3824__auto____11944) {
          return or__3824__auto____11944
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____11949 = nodeseq;
    if(and__3822__auto____11949) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____11949
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2363__auto____11950 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3824__auto____11951 = domina.single_node[goog.typeOf(x__2363__auto____11950)];
      if(or__3824__auto____11951) {
        return or__3824__auto____11951
      }else {
        var or__3824__auto____11952 = domina.single_node["_"];
        if(or__3824__auto____11952) {
          return or__3824__auto____11952
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____11954 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____11954)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____11954
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__11955) {
    var mesg = cljs.core.seq(arglist__11955);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__11956) {
    var mesg = cljs.core.seq(arglist__11956);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t11964) {
    domina.t11964 = function(class_name, by_class, meta11965) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta11965 = meta11965;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t11964.cljs$lang$type = true;
    domina.t11964.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
      return cljs.core.list.call(null, "domina/t11964")
    };
    domina.t11964.prototype.domina$DomContent$ = true;
    domina.t11964.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__11967 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__11967.class_name)))
    };
    domina.t11964.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__11968 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__11968.class_name)))
    };
    domina.t11964.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11966) {
      var this__11969 = this;
      return this__11969.meta11965
    };
    domina.t11964.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11966, meta11965) {
      var this__11970 = this;
      return new domina.t11964(this__11970.class_name, this__11970.by_class, meta11965)
    };
    domina.t11964
  }else {
  }
  return new domina.t11964(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__11971_SHARP_) {
    return p1__11971_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__11972_SHARP_, p2__11973_SHARP_) {
    return goog.dom.insertChildAt(p1__11972_SHARP_, p2__11973_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11975_SHARP_, p2__11974_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__11974_SHARP_, p1__11975_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11977_SHARP_, p2__11976_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__11976_SHARP_, p1__11977_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11979_SHARP_, p2__11978_SHARP_) {
    return goog.dom.replaceNode(p2__11978_SHARP_, p1__11979_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__11981 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__11981))) {
    return null
  }else {
    return s__11981
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__11988__11989 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11988__11989) {
      var n__11990 = cljs.core.first.call(null, G__11988__11989);
      var G__11988__11991 = G__11988__11989;
      while(true) {
        goog.style.setStyle(n__11990, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____11992 = cljs.core.next.call(null, G__11988__11991);
        if(temp__3974__auto____11992) {
          var G__11988__11993 = temp__3974__auto____11992;
          var G__11994 = cljs.core.first.call(null, G__11988__11993);
          var G__11995 = G__11988__11993;
          n__11990 = G__11994;
          G__11988__11991 = G__11995;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__11996) {
    var content = cljs.core.first(arglist__11996);
    var name = cljs.core.first(cljs.core.next(arglist__11996));
    var value = cljs.core.rest(cljs.core.next(arglist__11996));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__12003__12004 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__12003__12004) {
      var n__12005 = cljs.core.first.call(null, G__12003__12004);
      var G__12003__12006 = G__12003__12004;
      while(true) {
        n__12005.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____12007 = cljs.core.next.call(null, G__12003__12006);
        if(temp__3974__auto____12007) {
          var G__12003__12008 = temp__3974__auto____12007;
          var G__12009 = cljs.core.first.call(null, G__12003__12008);
          var G__12010 = G__12003__12008;
          n__12005 = G__12009;
          G__12003__12006 = G__12010;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__12011) {
    var content = cljs.core.first(arglist__12011);
    var name = cljs.core.first(cljs.core.next(arglist__12011));
    var value = cljs.core.rest(cljs.core.next(arglist__12011));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__12018__12019 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12018__12019) {
    var n__12020 = cljs.core.first.call(null, G__12018__12019);
    var G__12018__12021 = G__12018__12019;
    while(true) {
      n__12020.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____12022 = cljs.core.next.call(null, G__12018__12021);
      if(temp__3974__auto____12022) {
        var G__12018__12023 = temp__3974__auto____12022;
        var G__12024 = cljs.core.first.call(null, G__12018__12023);
        var G__12025 = G__12018__12023;
        n__12020 = G__12024;
        G__12018__12021 = G__12025;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__12031__12032 = pair.split(/\s*:\s*/);
    var k__12033 = cljs.core.nth.call(null, vec__12031__12032, 0, null);
    var v__12034 = cljs.core.nth.call(null, vec__12031__12032, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____12035 = k__12033;
      if(cljs.core.truth_(and__3822__auto____12035)) {
        return v__12034
      }else {
        return and__3822__auto____12035
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__12033.toLowerCase()), v__12034)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__12038 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__12038)) {
    return domina.parse_style_attributes.call(null, style__12038)
  }else {
    if(cljs.core.truth_(style__12038.cssText)) {
      return domina.parse_style_attributes.call(null, style__12038.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__12044 = domina.single_node.call(null, content);
  var attrs__12045 = node__12044.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__12036_SHARP_) {
    var attr__12046 = attrs__12045.item(p1__12036_SHARP_);
    var value__12047 = attr__12046.nodeValue;
    if(function() {
      var and__3822__auto____12048 = cljs.core.not_EQ_.call(null, null, value__12047);
      if(and__3822__auto____12048) {
        return cljs.core.not_EQ_.call(null, "", value__12047)
      }else {
        return and__3822__auto____12048
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__12046.nodeName.toLowerCase())], [attr__12046.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__12045.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__12068__12069 = cljs.core.seq.call(null, styles);
  if(G__12068__12069) {
    var G__12071__12073 = cljs.core.first.call(null, G__12068__12069);
    var vec__12072__12074 = G__12071__12073;
    var name__12075 = cljs.core.nth.call(null, vec__12072__12074, 0, null);
    var value__12076 = cljs.core.nth.call(null, vec__12072__12074, 1, null);
    var G__12068__12077 = G__12068__12069;
    var G__12071__12078 = G__12071__12073;
    var G__12068__12079 = G__12068__12077;
    while(true) {
      var vec__12080__12081 = G__12071__12078;
      var name__12082 = cljs.core.nth.call(null, vec__12080__12081, 0, null);
      var value__12083 = cljs.core.nth.call(null, vec__12080__12081, 1, null);
      var G__12068__12084 = G__12068__12079;
      domina.set_style_BANG_.call(null, content, name__12082, value__12083);
      var temp__3974__auto____12085 = cljs.core.next.call(null, G__12068__12084);
      if(temp__3974__auto____12085) {
        var G__12068__12086 = temp__3974__auto____12085;
        var G__12087 = cljs.core.first.call(null, G__12068__12086);
        var G__12088 = G__12068__12086;
        G__12071__12078 = G__12087;
        G__12068__12079 = G__12088;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__12108__12109 = cljs.core.seq.call(null, attrs);
  if(G__12108__12109) {
    var G__12111__12113 = cljs.core.first.call(null, G__12108__12109);
    var vec__12112__12114 = G__12111__12113;
    var name__12115 = cljs.core.nth.call(null, vec__12112__12114, 0, null);
    var value__12116 = cljs.core.nth.call(null, vec__12112__12114, 1, null);
    var G__12108__12117 = G__12108__12109;
    var G__12111__12118 = G__12111__12113;
    var G__12108__12119 = G__12108__12117;
    while(true) {
      var vec__12120__12121 = G__12111__12118;
      var name__12122 = cljs.core.nth.call(null, vec__12120__12121, 0, null);
      var value__12123 = cljs.core.nth.call(null, vec__12120__12121, 1, null);
      var G__12108__12124 = G__12108__12119;
      domina.set_attr_BANG_.call(null, content, name__12122, value__12123);
      var temp__3974__auto____12125 = cljs.core.next.call(null, G__12108__12124);
      if(temp__3974__auto____12125) {
        var G__12108__12126 = temp__3974__auto____12125;
        var G__12127 = cljs.core.first.call(null, G__12108__12126);
        var G__12128 = G__12108__12126;
        G__12111__12118 = G__12127;
        G__12108__12119 = G__12128;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__12135__12136 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12135__12136) {
    var node__12137 = cljs.core.first.call(null, G__12135__12136);
    var G__12135__12138 = G__12135__12136;
    while(true) {
      goog.dom.classes.add(node__12137, class$);
      var temp__3974__auto____12139 = cljs.core.next.call(null, G__12135__12138);
      if(temp__3974__auto____12139) {
        var G__12135__12140 = temp__3974__auto____12139;
        var G__12141 = cljs.core.first.call(null, G__12135__12140);
        var G__12142 = G__12135__12140;
        node__12137 = G__12141;
        G__12135__12138 = G__12142;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__12149__12150 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12149__12150) {
    var node__12151 = cljs.core.first.call(null, G__12149__12150);
    var G__12149__12152 = G__12149__12150;
    while(true) {
      goog.dom.classes.remove(node__12151, class$);
      var temp__3974__auto____12153 = cljs.core.next.call(null, G__12149__12152);
      if(temp__3974__auto____12153) {
        var G__12149__12154 = temp__3974__auto____12153;
        var G__12155 = cljs.core.first.call(null, G__12149__12154);
        var G__12156 = G__12149__12154;
        node__12151 = G__12155;
        G__12149__12152 = G__12156;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__12164 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__12165__12166 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12165__12166) {
    var node__12167 = cljs.core.first.call(null, G__12165__12166);
    var G__12165__12168 = G__12165__12166;
    while(true) {
      goog.dom.classes.set(node__12167, classes__12164);
      var temp__3974__auto____12169 = cljs.core.next.call(null, G__12165__12168);
      if(temp__3974__auto____12169) {
        var G__12165__12170 = temp__3974__auto____12169;
        var G__12171 = cljs.core.first.call(null, G__12165__12170);
        var G__12172 = G__12165__12170;
        node__12167 = G__12171;
        G__12165__12168 = G__12172;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__12179__12180 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12179__12180) {
    var node__12181 = cljs.core.first.call(null, G__12179__12180);
    var G__12179__12182 = G__12179__12180;
    while(true) {
      goog.dom.setTextContent(node__12181, value);
      var temp__3974__auto____12183 = cljs.core.next.call(null, G__12179__12182);
      if(temp__3974__auto____12183) {
        var G__12179__12184 = temp__3974__auto____12183;
        var G__12185 = cljs.core.first.call(null, G__12179__12184);
        var G__12186 = G__12179__12184;
        node__12181 = G__12185;
        G__12179__12182 = G__12186;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__12193__12194 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12193__12194) {
    var node__12195 = cljs.core.first.call(null, G__12193__12194);
    var G__12193__12196 = G__12193__12194;
    while(true) {
      goog.dom.forms.setValue(node__12195, value);
      var temp__3974__auto____12197 = cljs.core.next.call(null, G__12193__12196);
      if(temp__3974__auto____12197) {
        var G__12193__12198 = temp__3974__auto____12197;
        var G__12199 = cljs.core.first.call(null, G__12193__12198);
        var G__12200 = G__12193__12198;
        node__12195 = G__12199;
        G__12193__12196 = G__12200;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___12217 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___12218 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__12219 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___12220 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__12219);
  if(cljs.core.truth_(function() {
    var and__3822__auto____12221 = allows_inner_html_QMARK___12217;
    if(and__3822__auto____12221) {
      var and__3822__auto____12223 = function() {
        var or__3824__auto____12222 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____12222)) {
          return or__3824__auto____12222
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___12218)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____12223)) {
        return!special_tag_QMARK___12220
      }else {
        return and__3822__auto____12223
      }
    }else {
      return and__3822__auto____12221
    }
  }())) {
    var value__12224 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__12227__12228 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__12227__12228) {
        var node__12229 = cljs.core.first.call(null, G__12227__12228);
        var G__12227__12230 = G__12227__12228;
        while(true) {
          goog.events.removeAll(node__12229);
          node__12229.innerHTML = value__12224;
          var temp__3974__auto____12231 = cljs.core.next.call(null, G__12227__12230);
          if(temp__3974__auto____12231) {
            var G__12227__12232 = temp__3974__auto____12231;
            var G__12233 = cljs.core.first.call(null, G__12227__12232);
            var G__12234 = G__12227__12232;
            node__12229 = G__12233;
            G__12227__12230 = G__12234;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e12225) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e12225)) {
        var e__12226 = e12225;
        domina.replace_children_BANG_.call(null, content, value__12224)
      }else {
        if("\ufdd0'else") {
          throw e12225;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__12240 = domina.single_node.call(null, node).__domina_data;
    var value__12241 = cljs.core.truth_(m__12240) ? cljs.core._lookup.call(null, m__12240, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____12242 = bubble;
      if(cljs.core.truth_(and__3822__auto____12242)) {
        return value__12241 == null
      }else {
        return and__3822__auto____12242
      }
    }())) {
      var temp__3974__auto____12243 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____12243)) {
        var parent__12244 = temp__3974__auto____12243;
        return get_data.call(null, parent__12244, key, true)
      }else {
        return null
      }
    }else {
      return value__12241
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__12250 = function() {
    var or__3824__auto____12249 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____12249)) {
      return or__3824__auto____12249
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__12250, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__12262 = domina.nodes.call(null, parent_content);
  var children__12263 = domina.nodes.call(null, child_content);
  var first_child__12271 = function() {
    var frag__12264 = document.createDocumentFragment();
    var G__12265__12266 = cljs.core.seq.call(null, children__12263);
    if(G__12265__12266) {
      var child__12267 = cljs.core.first.call(null, G__12265__12266);
      var G__12265__12268 = G__12265__12266;
      while(true) {
        frag__12264.appendChild(child__12267);
        var temp__3974__auto____12269 = cljs.core.next.call(null, G__12265__12268);
        if(temp__3974__auto____12269) {
          var G__12265__12270 = temp__3974__auto____12269;
          var G__12273 = cljs.core.first.call(null, G__12265__12270);
          var G__12274 = G__12265__12270;
          child__12267 = G__12273;
          G__12265__12268 = G__12274;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__12264
  }();
  var other_children__12272 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__12262) - 1, function() {
    return first_child__12271.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__12262)) {
    f.call(null, cljs.core.first.call(null, parents__12262), first_child__12271);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__12245_SHARP_, p2__12246_SHARP_) {
      return f.call(null, p1__12245_SHARP_, p2__12246_SHARP_)
    }, cljs.core.rest.call(null, parents__12262), other_children__12272))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____12276 = obj;
  if(cljs.core.truth_(and__3822__auto____12276)) {
    return obj.length
  }else {
    return and__3822__auto____12276
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12280__12281 = list_thing;
      if(G__12280__12281) {
        if(function() {
          var or__3824__auto____12282 = G__12280__12281.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12282) {
            return or__3824__auto____12282
          }else {
            return G__12280__12281.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12280__12281.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12280__12281)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12280__12281)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12283__12284 = content;
      if(G__12283__12284) {
        if(function() {
          var or__3824__auto____12285 = G__12283__12284.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12285) {
            return or__3824__auto____12285
          }else {
            return G__12283__12284.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12283__12284.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12283__12284)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12283__12284)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__12286__12287 = content;
      if(G__12286__12287) {
        if(function() {
          var or__3824__auto____12288 = G__12286__12287.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12288) {
            return or__3824__auto____12288
          }else {
            return G__12286__12287.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12286__12287.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12286__12287)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12286__12287)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.css");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.dom");
goog.require("domina");
domina.css.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.css.sel = function() {
  var sel = null;
  var sel__1 = function(expr) {
    return sel.call(null, domina.css.root_element.call(null), expr)
  };
  var sel__2 = function(base, expr) {
    if(void 0 === domina.css.t11875) {
      domina.css.t11875 = function(expr, base, sel, meta11876) {
        this.expr = expr;
        this.base = base;
        this.sel = sel;
        this.meta11876 = meta11876;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.css.t11875.cljs$lang$type = true;
      domina.css.t11875.cljs$lang$ctorPrSeq = function(this__2309__auto__) {
        return cljs.core.list.call(null, "domina.css/t11875")
      };
      domina.css.t11875.prototype.domina$DomContent$ = true;
      domina.css.t11875.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var this__11878 = this;
        return cljs.core.mapcat.call(null, function(p1__11866_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__11878.expr, p1__11866_SHARP_))
        }, domina.nodes.call(null, this__11878.base))
      };
      domina.css.t11875.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var this__11879 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.mapcat.call(null, function(p1__11867_SHARP_) {
          return domina.normalize_seq.call(null, goog.dom.query(this__11879.expr, p1__11867_SHARP_))
        }, domina.nodes.call(null, this__11879.base))))
      };
      domina.css.t11875.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11877) {
        var this__11880 = this;
        return this__11880.meta11876
      };
      domina.css.t11875.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11877, meta11876) {
        var this__11881 = this;
        return new domina.css.t11875(this__11881.expr, this__11881.base, this__11881.sel, meta11876)
      };
      domina.css.t11875
    }else {
    }
    return new domina.css.t11875(expr, base, sel, null)
  };
  sel = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return sel__1.call(this, base);
      case 2:
        return sel__2.call(this, base, expr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sel.cljs$lang$arity$1 = sel__1;
  sel.cljs$lang$arity$2 = sel__2;
  return sel
}();
goog.provide("enfocus.core");
goog.require("cljs.core");
goog.require("goog.dom.query");
goog.require("goog.async.Delay");
goog.require("goog.dom.classes");
goog.require("goog.dom.ViewportSizeMonitor");
goog.require("goog.events");
goog.require("enfocus.enlive.syntax");
goog.require("goog.dom");
goog.require("clojure.string");
goog.require("goog.fx.dom");
goog.require("goog.Timer");
goog.require("goog.style");
goog.require("domina");
goog.require("goog.net.XhrIo");
goog.require("domina.css");
goog.require("goog.fx");
enfocus.core.debug = false;
enfocus.core.log_debug = function log_debug(mesg) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____11292 = enfocus.core.debug;
    if(cljs.core.truth_(and__3822__auto____11292)) {
      return!cljs.core._EQ_.call(null, window.console, undefined)
    }else {
      return and__3822__auto____11292
    }
  }())) {
    return console.log(mesg)
  }else {
    return null
  }
};
enfocus.core.setTimeout = function setTimeout(func, ttime) {
  return goog.Timer.callOnce(func, ttime)
};
enfocus.core.node_QMARK_ = function node_QMARK_(tst) {
  return goog.dom.isNodeLike(tst)
};
enfocus.core.nodelist_QMARK_ = function nodelist_QMARK_(tst) {
  return cljs.core.instance_QMARK_.call(null, NodeList, tst)
};
enfocus.core.nodes__GT_coll = function nodes__GT_coll(nl) {
  return domina.nodes.call(null, nl)
};
enfocus.core.flatten_nodes_coll = function flatten_nodes_coll(values) {
  return cljs.core.mapcat.call(null, function(p1__11293_SHARP_) {
    if(cljs.core.string_QMARK_.call(null, p1__11293_SHARP_)) {
      return cljs.core.PersistentVector.fromArray([goog.dom.createTextNode(p1__11293_SHARP_)], true)
    }else {
      if("\ufdd0'else") {
        return enfocus.core.nodes__GT_coll.call(null, p1__11293_SHARP_)
      }else {
        return null
      }
    }
  }, values)
};
enfocus.core.style_set = function style_set(obj, values) {
  var G__11313__11314 = cljs.core.seq.call(null, cljs.core.apply.call(null, cljs.core.hash_map, values));
  if(G__11313__11314) {
    var G__11316__11318 = cljs.core.first.call(null, G__11313__11314);
    var vec__11317__11319 = G__11316__11318;
    var attr__11320 = cljs.core.nth.call(null, vec__11317__11319, 0, null);
    var value__11321 = cljs.core.nth.call(null, vec__11317__11319, 1, null);
    var G__11313__11322 = G__11313__11314;
    var G__11316__11323 = G__11316__11318;
    var G__11313__11324 = G__11313__11322;
    while(true) {
      var vec__11325__11326 = G__11316__11323;
      var attr__11327 = cljs.core.nth.call(null, vec__11325__11326, 0, null);
      var value__11328 = cljs.core.nth.call(null, vec__11325__11326, 1, null);
      var G__11313__11329 = G__11313__11324;
      goog.style.setStyle(obj, cljs.core.name.call(null, attr__11327), value__11328);
      var temp__3974__auto____11330 = cljs.core.next.call(null, G__11313__11329);
      if(temp__3974__auto____11330) {
        var G__11313__11331 = temp__3974__auto____11330;
        var G__11332 = cljs.core.first.call(null, G__11313__11331);
        var G__11333 = G__11313__11331;
        G__11316__11323 = G__11332;
        G__11313__11324 = G__11333;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
enfocus.core.style_remove = function style_remove(obj, values) {
  var G__11340__11341 = cljs.core.seq.call(null, values);
  if(G__11340__11341) {
    var attr__11342 = cljs.core.first.call(null, G__11340__11341);
    var G__11340__11343 = G__11340__11341;
    while(true) {
      if(cljs.core.truth_(goog.userAgent.IE)) {
        goog.style.setStyle(obj, cljs.core.name.call(null, attr__11342), "")
      }else {
        obj.style.removeProperty(cljs.core.name.call(null, attr__11342))
      }
      var temp__3974__auto____11344 = cljs.core.next.call(null, G__11340__11343);
      if(temp__3974__auto____11344) {
        var G__11340__11345 = temp__3974__auto____11344;
        var G__11346 = cljs.core.first.call(null, G__11340__11345);
        var G__11347 = G__11340__11345;
        attr__11342 = G__11346;
        G__11340__11343 = G__11347;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
enfocus.core.get_eff_prop_name = function get_eff_prop_name(etype) {
  return[cljs.core.str("__ef_effect_"), cljs.core.str(etype)].join("")
};
enfocus.core.get_mills = function get_mills() {
  return(new Date).getMilliseconds()
};
enfocus.core.child_of_QMARK_ = function child_of_QMARK_(parent, child) {
  while(true) {
    if(cljs.core.not.call(null, child)) {
      return false
    }else {
      if(parent === child) {
        return false
      }else {
        if(child.parentNode === parent) {
          return true
        }else {
          if("\ufdd0'else") {
            var G__11348 = parent;
            var G__11349 = child.parentNode;
            parent = G__11348;
            child = G__11349;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
enfocus.core.mouse_enter_leave = function mouse_enter_leave(func) {
  return function(e) {
    var re__11353 = e.relatedTarget;
    var this__11354 = e.currentTarget;
    if(function() {
      var and__3822__auto____11355 = !(re__11353 === this__11354);
      if(and__3822__auto____11355) {
        return cljs.core.not.call(null, enfocus.core.child_of_QMARK_.call(null, this__11354, re__11353))
      }else {
        return and__3822__auto____11355
      }
    }()) {
      return func.call(null, e)
    }else {
      return null
    }
  }
};
enfocus.core.pix_round = function pix_round(step) {
  if(step < 0) {
    return Math.floor.call(null, step)
  }else {
    return Math.ceil.call(null, step)
  }
};
enfocus.core.add_map_attrs = function() {
  var add_map_attrs = null;
  var add_map_attrs__2 = function(elem, ats) {
    if(cljs.core.truth_(elem)) {
      if(cljs.core.map_QMARK_.call(null, ats)) {
        var G__11375__11376 = cljs.core.seq.call(null, ats);
        if(G__11375__11376) {
          var G__11378__11380 = cljs.core.first.call(null, G__11375__11376);
          var vec__11379__11381 = G__11378__11380;
          var k__11382 = cljs.core.nth.call(null, vec__11379__11381, 0, null);
          var v__11383 = cljs.core.nth.call(null, vec__11379__11381, 1, null);
          var G__11375__11384 = G__11375__11376;
          var G__11378__11385 = G__11378__11380;
          var G__11375__11386 = G__11375__11384;
          while(true) {
            var vec__11387__11388 = G__11378__11385;
            var k__11389 = cljs.core.nth.call(null, vec__11387__11388, 0, null);
            var v__11390 = cljs.core.nth.call(null, vec__11387__11388, 1, null);
            var G__11375__11391 = G__11375__11386;
            add_map_attrs.call(null, elem, k__11389, v__11390);
            var temp__3974__auto____11392 = cljs.core.next.call(null, G__11375__11391);
            if(temp__3974__auto____11392) {
              var G__11375__11393 = temp__3974__auto____11392;
              var G__11394 = cljs.core.first.call(null, G__11375__11393);
              var G__11395 = G__11375__11393;
              G__11378__11385 = G__11394;
              G__11375__11386 = G__11395;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return elem
      }else {
        return null
      }
    }else {
      return null
    }
  };
  var add_map_attrs__3 = function(elem, k, v) {
    elem.setAttribute(cljs.core.name.call(null, k), v);
    return elem
  };
  add_map_attrs = function(elem, k, v) {
    switch(arguments.length) {
      case 2:
        return add_map_attrs__2.call(this, elem, k);
      case 3:
        return add_map_attrs__3.call(this, elem, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  add_map_attrs.cljs$lang$arity$2 = add_map_attrs__2;
  add_map_attrs.cljs$lang$arity$3 = add_map_attrs__3;
  return add_map_attrs
}();
enfocus.core.tpl_load_cnt = cljs.core.atom.call(null, 0);
enfocus.core.tpl_cache = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
enfocus.core.hide_style = cljs.core.ObjMap.fromObject(["style"], {"style":"display: none; width: 0px; height: 0px"}).strobj;
enfocus.core.create_hidden_dom = function create_hidden_dom(child) {
  var div__11403 = goog.dom.createDom("div", enfocus.core.hide_style);
  if(cljs.core.instance_QMARK_.call(null, DocumentFragment, child)) {
    goog.dom.appendChild(div__11403, child)
  }else {
    enfocus.core.log_debug.call(null, cljs.core.count.call(null, domina.nodes.call(null, child)));
    var G__11404__11405 = cljs.core.seq.call(null, domina.nodes.call(null, child));
    if(G__11404__11405) {
      var node__11406 = cljs.core.first.call(null, G__11404__11405);
      var G__11404__11407 = G__11404__11405;
      while(true) {
        goog.dom.appendChild(div__11403, node__11406);
        var temp__3974__auto____11408 = cljs.core.next.call(null, G__11404__11407);
        if(temp__3974__auto____11408) {
          var G__11404__11409 = temp__3974__auto____11408;
          var G__11410 = cljs.core.first.call(null, G__11404__11409);
          var G__11411 = G__11404__11409;
          node__11406 = G__11410;
          G__11404__11407 = G__11411;
          continue
        }else {
        }
        break
      }
    }else {
    }
  }
  goog.dom.appendChild(goog.dom.getDocument().body, div__11403);
  return div__11403
};
enfocus.core.remove_node_return_child = function remove_node_return_child(div) {
  var child__11414 = div.childNodes;
  var frag__11415 = document.createDocumentFragment();
  goog.dom.append(frag__11415, child__11414);
  goog.dom.removeNode(div);
  return frag__11415
};
enfocus.core.replace_ids = function replace_ids(text) {
  var re__11419 = new RegExp("(<.*?\\sid=['\"])(.*?)(['\"].*?>)", "g");
  var sym__11420 = [cljs.core.str(cljs.core.name.call(null, cljs.core.gensym.call(null, "id"))), cljs.core.str("_")].join("");
  return cljs.core.PersistentVector.fromArray([[cljs.core.str(sym__11420)].join(""), text.replace(re__11419, function(a, b, c, d) {
    return[cljs.core.str(b), cljs.core.str(sym__11420), cljs.core.str(c), cljs.core.str(d)].join("")
  })], true)
};
enfocus.core.reset_ids = function reset_ids(sym, nod) {
  var id_nodes__11425 = enfocus.core.css_select.call(null, nod, "*[id]");
  var nod_col__11426 = enfocus.core.nodes__GT_coll.call(null, id_nodes__11425);
  return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__11416_SHARP_) {
    var id__11427 = p1__11416_SHARP_.getAttribute("id");
    var rid__11428 = id__11427.replace(sym, "");
    return p1__11416_SHARP_.setAttribute("id", rid__11428)
  }, nod_col__11426))
};
enfocus.core.load_remote_dom = function load_remote_dom(uri) {
  if(cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri) == null) {
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.inc);
    var req__11437 = new goog.net.XhrIo;
    var callback__11444 = function(req) {
      var text__11439 = req.getResponseText();
      var vec__11438__11440 = enfocus.core.replace_ids.call(null, text__11439);
      var sym__11441 = cljs.core.nth.call(null, vec__11438__11440, 0, null);
      var txt__11442 = cljs.core.nth.call(null, vec__11438__11440, 1, null);
      var data__11443 = goog.dom.htmlToDocumentFragment(txt__11442);
      return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, uri, cljs.core.PersistentVector.fromArray([sym__11441, data__11443], true))
    };
    goog.events.listen(req__11437, goog.net.EventType.COMPLETE, function() {
      callback__11444.call(null, req__11437);
      return cljs.core.swap_BANG_.call(null, enfocus.core.tpl_load_cnt, cljs.core.dec)
    });
    return req__11437.send(uri, "GET")
  }else {
    return null
  }
};
enfocus.core.get_cached_dom = function get_cached_dom(uri) {
  var nod__11446 = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, uri);
  if(cljs.core.truth_(nod__11446)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, nod__11446), cljs.core.second.call(null, nod__11446).cloneNode(true)], true)
  }else {
    return null
  }
};
enfocus.core.get_cached_snippet = function get_cached_snippet(uri, sel) {
  var sel_str__11456 = enfocus.core.create_sel_str.call(null, sel);
  var cache__11457 = cljs.core.deref.call(null, enfocus.core.tpl_cache).call(null, [cljs.core.str(uri), cljs.core.str(sel_str__11456)].join(""));
  if(cljs.core.truth_(cache__11457)) {
    return cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, cache__11457), cljs.core.second.call(null, cache__11457).cloneNode(true)], true)
  }else {
    var vec__11458__11459 = enfocus.core.get_cached_dom.call(null, uri);
    var sym__11460 = cljs.core.nth.call(null, vec__11458__11459, 0, null);
    var tdom__11461 = cljs.core.nth.call(null, vec__11458__11459, 1, null);
    var dom__11462 = enfocus.core.create_hidden_dom.call(null, tdom__11461);
    var tsnip__11463 = domina.nodes.call(null, enfocus.core.css_select.call(null, sym__11460, dom__11462, sel));
    var snip__11464 = cljs.core.first.call(null, tsnip__11463);
    enfocus.core.remove_node_return_child.call(null, dom__11462);
    cljs.core.swap_BANG_.call(null, enfocus.core.tpl_cache, cljs.core.assoc, [cljs.core.str(uri), cljs.core.str(sel_str__11456)].join(""), cljs.core.PersistentVector.fromArray([sym__11460, snip__11464], true));
    return cljs.core.PersistentVector.fromArray([sym__11460, snip__11464], true)
  }
};
enfocus.core.extr_multi_node = function extr_multi_node(func) {
  return function trans(pnodes) {
    var pnod_col__11471 = enfocus.core.nodes__GT_coll.call(null, pnodes);
    var result__11472 = cljs.core.map.call(null, func, pnod_col__11471);
    if(cljs.core.count.call(null, result__11472) <= 1) {
      return cljs.core.first.call(null, result__11472)
    }else {
      return result__11472
    }
  }
};
enfocus.core.chainable_standard = function chainable_standard(func) {
  return function() {
    var trans = null;
    var trans__1 = function(pnodes) {
      return trans.call(null, pnodes, null)
    };
    var trans__2 = function(pnodes, chain) {
      var pnod_col__11476 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      cljs.core.doall.call(null, cljs.core.map.call(null, func, pnod_col__11476));
      if(!(chain == null)) {
        return chain.call(null, pnodes)
      }else {
        return null
      }
    };
    trans = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return trans__1.call(this, pnodes);
        case 2:
          return trans__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    trans.cljs$lang$arity$1 = trans__1;
    trans.cljs$lang$arity$2 = trans__2;
    return trans
  }()
};
enfocus.core.chainable_effect = function chainable_effect(func, callback) {
  return function() {
    var trans = null;
    var trans__1 = function(pnodes) {
      return trans.call(null, pnodes, null)
    };
    var trans__2 = function(pnodes, chain) {
      var pnod_col__11505 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var cnt__11506 = cljs.core.atom.call(null, cljs.core.count.call(null, pnod_col__11505));
      var partial_cback__11507 = function() {
        cljs.core.swap_BANG_.call(null, cnt__11506, cljs.core.dec);
        if(cljs.core._EQ_.call(null, 0, cljs.core.deref.call(null, cnt__11506))) {
          if(!(callback == null)) {
            callback.call(null, pnodes)
          }else {
          }
          if(!(chain == null)) {
            return chain.call(null, pnodes)
          }else {
            return null
          }
        }else {
          return null
        }
      };
      var G__11508__11509 = cljs.core.seq.call(null, pnod_col__11505);
      if(G__11508__11509) {
        var pnod__11510 = cljs.core.first.call(null, G__11508__11509);
        var G__11508__11511 = G__11508__11509;
        while(true) {
          func.call(null, pnod__11510, partial_cback__11507);
          var temp__3974__auto____11512 = cljs.core.next.call(null, G__11508__11511);
          if(temp__3974__auto____11512) {
            var G__11508__11513 = temp__3974__auto____11512;
            var G__11514 = cljs.core.first.call(null, G__11508__11513);
            var G__11515 = G__11508__11513;
            pnod__11510 = G__11514;
            G__11508__11511 = G__11515;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    };
    trans = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return trans__1.call(this, pnodes);
        case 2:
          return trans__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    trans.cljs$lang$arity$1 = trans__1;
    trans.cljs$lang$arity$2 = trans__2;
    return trans
  }()
};
enfocus.core.domina_chain = function() {
  var domina_chain = null;
  var domina_chain__1 = function(func) {
    return function() {
      var trans = null;
      var trans__1 = function(nodes) {
        return trans.call(null, nodes, null)
      };
      var trans__2 = function(nodes, chain) {
        func.call(null, nodes);
        if(!(chain == null)) {
          return chain.call(null, nodes)
        }else {
          return null
        }
      };
      trans = function(nodes, chain) {
        switch(arguments.length) {
          case 1:
            return trans__1.call(this, nodes);
          case 2:
            return trans__2.call(this, nodes, chain)
        }
        throw"Invalid arity: " + arguments.length;
      };
      trans.cljs$lang$arity$1 = trans__1;
      trans.cljs$lang$arity$2 = trans__2;
      return trans
    }()
  };
  var domina_chain__2 = function(values, func) {
    return function() {
      var trans = null;
      var trans__1 = function(nodes) {
        return trans.call(null, nodes, null)
      };
      var trans__2 = function(nodes, chain) {
        var vnodes__11521 = cljs.core.mapcat.call(null, function(p1__11477_SHARP_) {
          return domina.nodes.call(null, p1__11477_SHARP_)
        }, values);
        func.call(null, nodes, vnodes__11521);
        if(!(chain == null)) {
          return chain.call(null, nodes)
        }else {
          return null
        }
      };
      trans = function(nodes, chain) {
        switch(arguments.length) {
          case 1:
            return trans__1.call(this, nodes);
          case 2:
            return trans__2.call(this, nodes, chain)
        }
        throw"Invalid arity: " + arguments.length;
      };
      trans.cljs$lang$arity$1 = trans__1;
      trans.cljs$lang$arity$2 = trans__2;
      return trans
    }()
  };
  domina_chain = function(values, func) {
    switch(arguments.length) {
      case 1:
        return domina_chain__1.call(this, values);
      case 2:
        return domina_chain__2.call(this, values, func)
    }
    throw"Invalid arity: " + arguments.length;
  };
  domina_chain.cljs$lang$arity$1 = domina_chain__1;
  domina_chain.cljs$lang$arity$2 = domina_chain__2;
  return domina_chain
}();
enfocus.core.en_content = function() {
  var en_content__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11516_SHARP_, p2__11517_SHARP_) {
      domina.destroy_children_BANG_.call(null, p1__11516_SHARP_);
      return domina.append_BANG_.call(null, p1__11516_SHARP_, p2__11517_SHARP_)
    })
  };
  var en_content = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_content__delegate.call(this, values)
  };
  en_content.cljs$lang$maxFixedArity = 0;
  en_content.cljs$lang$applyTo = function(arglist__11523) {
    var values = cljs.core.seq(arglist__11523);
    return en_content__delegate(values)
  };
  en_content.cljs$lang$arity$variadic = en_content__delegate;
  return en_content
}();
enfocus.core.en_html_content = function en_html_content(txt) {
  return enfocus.core.domina_chain.call(null, function(p1__11522_SHARP_) {
    return domina.set_html_BANG_.call(null, p1__11522_SHARP_, txt)
  })
};
enfocus.core.en_set_attr = function() {
  var en_set_attr__delegate = function(values) {
    var pairs__11546 = cljs.core.partition.call(null, 2, values);
    return enfocus.core.domina_chain.call(null, function(p1__11524_SHARP_) {
      var G__11547__11548 = cljs.core.seq.call(null, pairs__11546);
      if(G__11547__11548) {
        var G__11550__11552 = cljs.core.first.call(null, G__11547__11548);
        var vec__11551__11553 = G__11550__11552;
        var name__11554 = cljs.core.nth.call(null, vec__11551__11553, 0, null);
        var value__11555 = cljs.core.nth.call(null, vec__11551__11553, 1, null);
        var G__11547__11556 = G__11547__11548;
        var G__11550__11557 = G__11550__11552;
        var G__11547__11558 = G__11547__11556;
        while(true) {
          var vec__11559__11560 = G__11550__11557;
          var name__11561 = cljs.core.nth.call(null, vec__11559__11560, 0, null);
          var value__11562 = cljs.core.nth.call(null, vec__11559__11560, 1, null);
          var G__11547__11563 = G__11547__11558;
          domina.set_attr_BANG_.call(null, p1__11524_SHARP_, name__11561, value__11562);
          var temp__3974__auto____11564 = cljs.core.next.call(null, G__11547__11563);
          if(temp__3974__auto____11564) {
            var G__11547__11565 = temp__3974__auto____11564;
            var G__11566 = cljs.core.first.call(null, G__11547__11565);
            var G__11567 = G__11547__11565;
            G__11550__11557 = G__11566;
            G__11547__11558 = G__11567;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_set_attr = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_attr__delegate.call(this, values)
  };
  en_set_attr.cljs$lang$maxFixedArity = 0;
  en_set_attr.cljs$lang$applyTo = function(arglist__11568) {
    var values = cljs.core.seq(arglist__11568);
    return en_set_attr__delegate(values)
  };
  en_set_attr.cljs$lang$arity$variadic = en_set_attr__delegate;
  return en_set_attr
}();
enfocus.core.en_remove_attr = function() {
  var en_remove_attr__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11525_SHARP_) {
      var G__11575__11576 = cljs.core.seq.call(null, values);
      if(G__11575__11576) {
        var name__11577 = cljs.core.first.call(null, G__11575__11576);
        var G__11575__11578 = G__11575__11576;
        while(true) {
          domina.remove_attr_BANG_.call(null, p1__11525_SHARP_, name__11577);
          var temp__3974__auto____11579 = cljs.core.next.call(null, G__11575__11578);
          if(temp__3974__auto____11579) {
            var G__11575__11580 = temp__3974__auto____11579;
            var G__11581 = cljs.core.first.call(null, G__11575__11580);
            var G__11582 = G__11575__11580;
            name__11577 = G__11581;
            G__11575__11578 = G__11582;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_attr = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_attr__delegate.call(this, values)
  };
  en_remove_attr.cljs$lang$maxFixedArity = 0;
  en_remove_attr.cljs$lang$applyTo = function(arglist__11583) {
    var values = cljs.core.seq(arglist__11583);
    return en_remove_attr__delegate(values)
  };
  en_remove_attr.cljs$lang$arity$variadic = en_remove_attr__delegate;
  return en_remove_attr
}();
enfocus.core.en_set_prop = function() {
  var en_set_prop__delegate = function(forms) {
    return enfocus.core.chainable_standard.call(null, function(node) {
      var h__11595 = cljs.core.mapcat.call(null, function(p__11590) {
        var vec__11591__11592 = p__11590;
        var n__11593 = cljs.core.nth.call(null, vec__11591__11592, 0, null);
        var v__11594 = cljs.core.nth.call(null, vec__11591__11592, 1, null);
        return cljs.core.list.call(null, cljs.core.name.call(null, n__11593), v__11594)
      }, cljs.core.partition.call(null, 2, forms));
      return goog.dom.setProperties(node, cljs.core.apply.call(null, cljs.core.js_obj, h__11595))
    })
  };
  var en_set_prop = function(var_args) {
    var forms = null;
    if(goog.isDef(var_args)) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_prop__delegate.call(this, forms)
  };
  en_set_prop.cljs$lang$maxFixedArity = 0;
  en_set_prop.cljs$lang$applyTo = function(arglist__11596) {
    var forms = cljs.core.seq(arglist__11596);
    return en_set_prop__delegate(forms)
  };
  en_set_prop.cljs$lang$arity$variadic = en_set_prop__delegate;
  return en_set_prop
}();
enfocus.core.has_class = function has_class(el, cls) {
  return goog.dom.classes.hasClass(el, cls)
};
enfocus.core.en_add_class = function() {
  var en_add_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11597_SHARP_) {
      var G__11605__11606 = cljs.core.seq.call(null, values);
      if(G__11605__11606) {
        var val__11607 = cljs.core.first.call(null, G__11605__11606);
        var G__11605__11608 = G__11605__11606;
        while(true) {
          domina.add_class_BANG_.call(null, p1__11597_SHARP_, val__11607);
          var temp__3974__auto____11609 = cljs.core.next.call(null, G__11605__11608);
          if(temp__3974__auto____11609) {
            var G__11605__11610 = temp__3974__auto____11609;
            var G__11611 = cljs.core.first.call(null, G__11605__11610);
            var G__11612 = G__11605__11610;
            val__11607 = G__11611;
            G__11605__11608 = G__11612;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_add_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_add_class__delegate.call(this, values)
  };
  en_add_class.cljs$lang$maxFixedArity = 0;
  en_add_class.cljs$lang$applyTo = function(arglist__11613) {
    var values = cljs.core.seq(arglist__11613);
    return en_add_class__delegate(values)
  };
  en_add_class.cljs$lang$arity$variadic = en_add_class__delegate;
  return en_add_class
}();
enfocus.core.en_remove_class = function() {
  var en_remove_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11598_SHARP_) {
      var G__11621__11622 = cljs.core.seq.call(null, values);
      if(G__11621__11622) {
        var val__11623 = cljs.core.first.call(null, G__11621__11622);
        var G__11621__11624 = G__11621__11622;
        while(true) {
          domina.remove_class_BANG_.call(null, p1__11598_SHARP_, val__11623);
          var temp__3974__auto____11625 = cljs.core.next.call(null, G__11621__11624);
          if(temp__3974__auto____11625) {
            var G__11621__11626 = temp__3974__auto____11625;
            var G__11627 = cljs.core.first.call(null, G__11621__11626);
            var G__11628 = G__11621__11626;
            val__11623 = G__11627;
            G__11621__11624 = G__11628;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_class__delegate.call(this, values)
  };
  en_remove_class.cljs$lang$maxFixedArity = 0;
  en_remove_class.cljs$lang$applyTo = function(arglist__11629) {
    var values = cljs.core.seq(arglist__11629);
    return en_remove_class__delegate(values)
  };
  en_remove_class.cljs$lang$arity$variadic = en_remove_class__delegate;
  return en_remove_class
}();
enfocus.core.en_set_class = function() {
  var en_set_class__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, function(p1__11614_SHARP_) {
      return domina.set_classes_BANG_.call(null, p1__11614_SHARP_, values)
    })
  };
  var en_set_class = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_class__delegate.call(this, values)
  };
  en_set_class.cljs$lang$maxFixedArity = 0;
  en_set_class.cljs$lang$applyTo = function(arglist__11630) {
    var values = cljs.core.seq(arglist__11630);
    return en_set_class__delegate(values)
  };
  en_set_class.cljs$lang$arity$variadic = en_set_class__delegate;
  return en_set_class
}();
enfocus.core.en_do__GT_ = function() {
  var en_do__GT___delegate = function(forms) {
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      var G__11639__11640 = cljs.core.seq.call(null, forms);
      if(G__11639__11640) {
        var fun__11641 = cljs.core.first.call(null, G__11639__11640);
        var G__11639__11642 = G__11639__11640;
        while(true) {
          fun__11641.call(null, pnod);
          var temp__3974__auto____11643 = cljs.core.next.call(null, G__11639__11642);
          if(temp__3974__auto____11643) {
            var G__11639__11644 = temp__3974__auto____11643;
            var G__11645 = cljs.core.first.call(null, G__11639__11644);
            var G__11646 = G__11639__11644;
            fun__11641 = G__11645;
            G__11639__11642 = G__11646;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_do__GT_ = function(var_args) {
    var forms = null;
    if(goog.isDef(var_args)) {
      forms = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_do__GT___delegate.call(this, forms)
  };
  en_do__GT_.cljs$lang$maxFixedArity = 0;
  en_do__GT_.cljs$lang$applyTo = function(arglist__11647) {
    var forms = cljs.core.seq(arglist__11647);
    return en_do__GT___delegate(forms)
  };
  en_do__GT_.cljs$lang$arity$variadic = en_do__GT___delegate;
  return en_do__GT_
}();
enfocus.core.en_append = function() {
  var en_append__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11631_SHARP_, p2__11632_SHARP_) {
      return domina.append_BANG_.call(null, p1__11631_SHARP_, p2__11632_SHARP_)
    })
  };
  var en_append = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_append__delegate.call(this, values)
  };
  en_append.cljs$lang$maxFixedArity = 0;
  en_append.cljs$lang$applyTo = function(arglist__11650) {
    var values = cljs.core.seq(arglist__11650);
    return en_append__delegate(values)
  };
  en_append.cljs$lang$arity$variadic = en_append__delegate;
  return en_append
}();
enfocus.core.en_prepend = function() {
  var en_prepend__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11648_SHARP_, p2__11649_SHARP_) {
      return domina.prepend_BANG_.call(null, p1__11648_SHARP_, p2__11649_SHARP_)
    })
  };
  var en_prepend = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_prepend__delegate.call(this, values)
  };
  en_prepend.cljs$lang$maxFixedArity = 0;
  en_prepend.cljs$lang$applyTo = function(arglist__11653) {
    var values = cljs.core.seq(arglist__11653);
    return en_prepend__delegate(values)
  };
  en_prepend.cljs$lang$arity$variadic = en_prepend__delegate;
  return en_prepend
}();
enfocus.core.en_before = function() {
  var en_before__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11651_SHARP_, p2__11652_SHARP_) {
      return domina.insert_before_BANG_.call(null, p1__11651_SHARP_, p2__11652_SHARP_)
    })
  };
  var en_before = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_before__delegate.call(this, values)
  };
  en_before.cljs$lang$maxFixedArity = 0;
  en_before.cljs$lang$applyTo = function(arglist__11656) {
    var values = cljs.core.seq(arglist__11656);
    return en_before__delegate(values)
  };
  en_before.cljs$lang$arity$variadic = en_before__delegate;
  return en_before
}();
enfocus.core.en_after = function() {
  var en_after__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11654_SHARP_, p2__11655_SHARP_) {
      return domina.insert_after_BANG_.call(null, p1__11654_SHARP_, p2__11655_SHARP_)
    })
  };
  var en_after = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_after__delegate.call(this, values)
  };
  en_after.cljs$lang$maxFixedArity = 0;
  en_after.cljs$lang$applyTo = function(arglist__11659) {
    var values = cljs.core.seq(arglist__11659);
    return en_after__delegate(values)
  };
  en_after.cljs$lang$arity$variadic = en_after__delegate;
  return en_after
}();
enfocus.core.en_substitute = function() {
  var en_substitute__delegate = function(values) {
    return enfocus.core.domina_chain.call(null, values, function(p1__11657_SHARP_, p2__11658_SHARP_) {
      return domina.swap_content_BANG_.call(null, p1__11657_SHARP_, p2__11658_SHARP_)
    })
  };
  var en_substitute = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_substitute__delegate.call(this, values)
  };
  en_substitute.cljs$lang$maxFixedArity = 0;
  en_substitute.cljs$lang$applyTo = function(arglist__11661) {
    var values = cljs.core.seq(arglist__11661);
    return en_substitute__delegate(values)
  };
  en_substitute.cljs$lang$arity$variadic = en_substitute__delegate;
  return en_substitute
}();
enfocus.core.en_remove_node = function en_remove_node() {
  return enfocus.core.domina_chain.call(null, function(p1__11660_SHARP_) {
    return domina.detach_BANG_.call(null, p1__11660_SHARP_)
  })
};
enfocus.core.en_wrap = function en_wrap(elm, mattr) {
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    var elem__11663 = goog.dom.createElement(cljs.core.name.call(null, elm));
    enfocus.core.add_map_attrs.call(null, elem__11663, mattr);
    enfocus.core.at.call(null, elem__11663, enfocus.core.en_content.call(null, pnod.cloneNode(true)));
    return enfocus.core.at.call(null, pnod, enfocus.core.en_do__GT_.call(null, enfocus.core.en_after.call(null, elem__11663), enfocus.core.en_remove_node.call(null)))
  })
};
enfocus.core.en_unwrap = function en_unwrap() {
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    var frag__11666 = document.createDocumentFragment();
    goog.dom.append(frag__11666, pnod.childNodes);
    return goog.dom.replaceNode(frag__11666, pnod)
  })
};
enfocus.core.en_set_style = function() {
  var en_set_style__delegate = function(values) {
    var pairs__11687 = cljs.core.partition.call(null, 2, values);
    return enfocus.core.domina_chain.call(null, function(p1__11664_SHARP_) {
      var G__11688__11689 = cljs.core.seq.call(null, pairs__11687);
      if(G__11688__11689) {
        var G__11691__11693 = cljs.core.first.call(null, G__11688__11689);
        var vec__11692__11694 = G__11691__11693;
        var name__11695 = cljs.core.nth.call(null, vec__11692__11694, 0, null);
        var value__11696 = cljs.core.nth.call(null, vec__11692__11694, 1, null);
        var G__11688__11697 = G__11688__11689;
        var G__11691__11698 = G__11691__11693;
        var G__11688__11699 = G__11688__11697;
        while(true) {
          var vec__11700__11701 = G__11691__11698;
          var name__11702 = cljs.core.nth.call(null, vec__11700__11701, 0, null);
          var value__11703 = cljs.core.nth.call(null, vec__11700__11701, 1, null);
          var G__11688__11704 = G__11688__11699;
          domina.set_style_BANG_.call(null, p1__11664_SHARP_, name__11702, value__11703);
          var temp__3974__auto____11705 = cljs.core.next.call(null, G__11688__11704);
          if(temp__3974__auto____11705) {
            var G__11688__11706 = temp__3974__auto____11705;
            var G__11707 = cljs.core.first.call(null, G__11688__11706);
            var G__11708 = G__11688__11706;
            G__11691__11698 = G__11707;
            G__11688__11699 = G__11708;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_set_style = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_set_style__delegate.call(this, values)
  };
  en_set_style.cljs$lang$maxFixedArity = 0;
  en_set_style.cljs$lang$applyTo = function(arglist__11709) {
    var values = cljs.core.seq(arglist__11709);
    return en_set_style__delegate(values)
  };
  en_set_style.cljs$lang$arity$variadic = en_set_style__delegate;
  return en_set_style
}();
enfocus.core.en_remove_style = function() {
  var en_remove_style__delegate = function(values) {
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      return enfocus.core.style_remove.call(null, pnod, values)
    })
  };
  var en_remove_style = function(var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_style__delegate.call(this, values)
  };
  en_remove_style.cljs$lang$maxFixedArity = 0;
  en_remove_style.cljs$lang$applyTo = function(arglist__11710) {
    var values = cljs.core.seq(arglist__11710);
    return en_remove_style__delegate(values)
  };
  en_remove_style.cljs$lang$arity$variadic = en_remove_style__delegate;
  return en_remove_style
}();
enfocus.core.en_focus = function en_focus() {
  return enfocus.core.chainable_standard.call(null, function(node) {
    return node.focus()
  })
};
enfocus.core.en_blur = function en_blur() {
  return enfocus.core.chainable_standard.call(null, function(node) {
    return node.blur()
  })
};
enfocus.core.en_set_data = function en_set_data(ky, val) {
  return enfocus.core.domina_chain.call(null, function(p1__11711_SHARP_) {
    return domina.set_data_BANG_.call(null, p1__11711_SHARP_, ky, val)
  })
};
enfocus.core.view_port_monitor = cljs.core.atom.call(null, null);
enfocus.core.get_vp_monitor = function get_vp_monitor() {
  if(cljs.core.truth_(cljs.core.deref.call(null, enfocus.core.view_port_monitor))) {
    return cljs.core.deref.call(null, enfocus.core.view_port_monitor)
  }else {
    cljs.core.swap_BANG_.call(null, enfocus.core.view_port_monitor, function() {
      return new goog.dom.ViewportSizeMonitor
    });
    return cljs.core.deref.call(null, enfocus.core.view_port_monitor)
  }
};
enfocus.core.gen_enter_leave_wrapper = function gen_enter_leave_wrapper(event) {
  var obj__11725 = new Object;
  obj__11725.listen = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var callback__11726 = enfocus.core.mouse_enter_leave.call(null, func);
    callback__11726.listen = func;
    callback__11726.scope = opt_scope;
    if(cljs.core.truth_(opt_handler)) {
      return opt_handler.listen(elm, cljs.core.name.call(null, event), callback__11726)
    }else {
      return goog.events.listen(elm, cljs.core.name.call(null, event), callback__11726)
    }
  };
  obj__11725.unlisten = function(elm, func, opt_cap, opt_scope, opt_handler) {
    var listeners__11727 = goog.events.getListeners(elm, cljs.core.name.call(null, event), false);
    var G__11728__11729 = cljs.core.seq.call(null, listeners__11727);
    if(G__11728__11729) {
      var obj__11730 = cljs.core.first.call(null, G__11728__11729);
      var G__11728__11731 = G__11728__11729;
      while(true) {
        var listener__11732 = obj__11730.listener;
        if(cljs.core.truth_(function() {
          var and__3822__auto____11734 = function() {
            var or__3824__auto____11733 = cljs.core.not.call(null, func);
            if(or__3824__auto____11733) {
              return or__3824__auto____11733
            }else {
              return cljs.core._EQ_.call(null, listener__11732.listen, func)
            }
          }();
          if(cljs.core.truth_(and__3822__auto____11734)) {
            var or__3824__auto____11735 = cljs.core.not.call(null, opt_scope);
            if(or__3824__auto____11735) {
              return or__3824__auto____11735
            }else {
              return cljs.core._EQ_.call(null, listener__11732.scope, opt_scope)
            }
          }else {
            return and__3822__auto____11734
          }
        }())) {
          if(cljs.core.truth_(opt_handler)) {
            opt_handler.unlisten(elm, cljs.core.name.call(null, event), listener__11732)
          }else {
            goog.events.unlisten(elm, cljs.core.name.call(null, event), listener__11732)
          }
        }else {
        }
        var temp__3974__auto____11736 = cljs.core.next.call(null, G__11728__11731);
        if(temp__3974__auto____11736) {
          var G__11728__11737 = temp__3974__auto____11736;
          var G__11738 = cljs.core.first.call(null, G__11728__11737);
          var G__11739 = G__11728__11737;
          obj__11730 = G__11738;
          G__11728__11731 = G__11739;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return listeners__11727
  };
  return obj__11725
};
enfocus.core.wrapper_register = cljs.core.ObjMap.fromObject(["\ufdd0'mouseenter", "\ufdd0'mouseleave"], {"\ufdd0'mouseenter":enfocus.core.gen_enter_leave_wrapper.call(null, "\ufdd0'mouseover"), "\ufdd0'mouseleave":enfocus.core.gen_enter_leave_wrapper.call(null, "\ufdd0'mouseout")});
enfocus.core.en_listen = function en_listen(event, func) {
  var wrapper__11743 = enfocus.core.wrapper_register.call(null, event);
  return enfocus.core.chainable_standard.call(null, function(pnod) {
    if(function() {
      var and__3822__auto____11744 = cljs.core._EQ_.call(null, "\ufdd0'resize", event);
      if(and__3822__auto____11744) {
        return window === pnod
      }else {
        return and__3822__auto____11744
      }
    }()) {
      return goog.events.listen(enfocus.core.get_vp_monitor.call(null), "resize", func)
    }else {
      if(wrapper__11743 == null) {
        return goog.events.listen(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.listenWithWrapper(pnod, wrapper__11743, func)
      }
    }
  })
};
enfocus.core.en_remove_listeners = function() {
  var en_remove_listeners__delegate = function(event_list) {
    var get_name__11752 = function(p1__11740_SHARP_) {
      return cljs.core.name.call(null, cljs.core._EQ_.call(null, p1__11740_SHARP_, "\ufdd0'mouseenter") ? "\ufdd0'mouseover" : cljs.core._EQ_.call(null, p1__11740_SHARP_, "\ufdd0'mouseleave") ? "\ufdd0'mouseout" : "\ufdd0'else" ? p1__11740_SHARP_ : null)
    };
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      var G__11753__11754 = cljs.core.seq.call(null, event_list);
      if(G__11753__11754) {
        var ev__11755 = cljs.core.first.call(null, G__11753__11754);
        var G__11753__11756 = G__11753__11754;
        while(true) {
          goog.events.removeAll(pnod, get_name__11752.call(null, ev__11755));
          var temp__3974__auto____11757 = cljs.core.next.call(null, G__11753__11756);
          if(temp__3974__auto____11757) {
            var G__11753__11758 = temp__3974__auto____11757;
            var G__11759 = cljs.core.first.call(null, G__11753__11758);
            var G__11760 = G__11753__11758;
            ev__11755 = G__11759;
            G__11753__11756 = G__11760;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    })
  };
  var en_remove_listeners = function(var_args) {
    var event_list = null;
    if(goog.isDef(var_args)) {
      event_list = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return en_remove_listeners__delegate.call(this, event_list)
  };
  en_remove_listeners.cljs$lang$maxFixedArity = 0;
  en_remove_listeners.cljs$lang$applyTo = function(arglist__11761) {
    var event_list = cljs.core.seq(arglist__11761);
    return en_remove_listeners__delegate(event_list)
  };
  en_remove_listeners.cljs$lang$arity$variadic = en_remove_listeners__delegate;
  return en_remove_listeners
}();
enfocus.core.en_unlisten = function() {
  var en_unlisten = null;
  var en_unlisten__1 = function(event) {
    return enfocus.core.en_remove_listeners.call(null, event)
  };
  var en_unlisten__2 = function(event, func) {
    var wrapper__11763 = enfocus.core.wrapper_register.call(null, event);
    return enfocus.core.chainable_standard.call(null, function(pnod) {
      if(wrapper__11763 == null) {
        return goog.events.unlisten(pnod, cljs.core.name.call(null, event), func)
      }else {
        return goog.events.unlistenWithWrapper(pnod, wrapper__11763, func)
      }
    })
  };
  en_unlisten = function(event, func) {
    switch(arguments.length) {
      case 1:
        return en_unlisten__1.call(this, event);
      case 2:
        return en_unlisten__2.call(this, event, func)
    }
    throw"Invalid arity: " + arguments.length;
  };
  en_unlisten.cljs$lang$arity$1 = en_unlisten__1;
  en_unlisten.cljs$lang$arity$2 = en_unlisten__2;
  return en_unlisten
}();
enfocus.core.en_fade_out = function en_fade_out(ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var anim__11765 = new goog.fx.dom.FadeOut(pnod, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__11765, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__11765.play()
  }, callback)
};
enfocus.core.en_fade_in = function en_fade_in(ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var anim__11767 = new goog.fx.dom.FadeIn(pnod, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__11767, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__11767.play()
  }, callback)
};
enfocus.core.en_resize = function en_resize(wth, hgt, ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var csize__11774 = goog.style.getSize(pnod);
    var start__11775 = [csize__11774.width, csize__11774.height];
    var wth__11776 = cljs.core._EQ_.call(null, "\ufdd0'curwidth", wth) ? csize__11774.width : wth;
    var hgt__11777 = cljs.core._EQ_.call(null, "\ufdd0'curheight", hgt) ? csize__11774.height : hgt;
    var end__11778 = [wth__11776, hgt__11777];
    var anim__11779 = new goog.fx.dom.Resize(pnod, start__11775, end__11778, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__11779, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__11779.play()
  }, callback)
};
enfocus.core.en_move = function en_move(xpos, ypos, ttime, callback, accel) {
  return enfocus.core.chainable_effect.call(null, function(pnod, pcallback) {
    var cpos__11786 = goog.style.getPosition(pnod);
    var start__11787 = [cpos__11786.x, cpos__11786.y];
    var xpos__11788 = cljs.core._EQ_.call(null, "\ufdd0'curx", xpos) ? cpos__11786.x : xpos;
    var ypos__11789 = cljs.core._EQ_.call(null, "\ufdd0'cury", ypos) ? cpos__11786.y : ypos;
    var end__11790 = [xpos__11788, ypos__11789];
    var anim__11791 = new goog.fx.dom.Slide(pnod, start__11787, end__11790, ttime, accel);
    if(cljs.core.truth_(pcallback)) {
      goog.events.listen(anim__11791, goog.fx.Animation.EventType.END, pcallback)
    }else {
    }
    return anim__11791.play()
  }, callback)
};
enfocus.core.en_get_attr = function en_get_attr(attr) {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return pnod.getAttribute(cljs.core.name.call(null, attr))
  })
};
enfocus.core.en_get_text = function en_get_text() {
  return enfocus.core.extr_multi_node.call(null, function(pnod) {
    return goog.dom.getTextContent(pnod)
  })
};
enfocus.core.en_get_data = function() {
  var en_get_data = null;
  var en_get_data__1 = function(ky) {
    return en_get_data.call(null, ky, false)
  };
  var en_get_data__2 = function(ky, bubble) {
    return enfocus.core.extr_multi_node.call(null, function(node) {
      return domina.get_data.call(null, ky, bubble)
    })
  };
  en_get_data = function(ky, bubble) {
    switch(arguments.length) {
      case 1:
        return en_get_data__1.call(this, ky);
      case 2:
        return en_get_data__2.call(this, ky, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  en_get_data.cljs$lang$arity$1 = en_get_data__1;
  en_get_data.cljs$lang$arity$2 = en_get_data__2;
  return en_get_data
}();
enfocus.core.reg_filt = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
enfocus.core.en_filter = function en_filter(tst, trans) {
  return function() {
    var filt = null;
    var filt__1 = function(pnodes) {
      return filt.call(null, pnodes, null)
    };
    var filt__2 = function(pnodes, chain) {
      var pnod_col__11801 = enfocus.core.nodes__GT_coll.call(null, pnodes);
      var ttest__11802 = cljs.core.keyword_QMARK_.call(null, tst) ? cljs.core.deref.call(null, enfocus.core.reg_filt).call(null, tst) : tst;
      var res__11803 = cljs.core.filter.call(null, ttest__11802, pnod_col__11801);
      if(chain == null) {
        return trans.call(null, res__11803)
      }else {
        return trans.call(null, res__11803, chain)
      }
    };
    filt = function(pnodes, chain) {
      switch(arguments.length) {
        case 1:
          return filt__1.call(this, pnodes);
        case 2:
          return filt__2.call(this, pnodes, chain)
      }
      throw"Invalid arity: " + arguments.length;
    };
    filt.cljs$lang$arity$1 = filt__1;
    filt.cljs$lang$arity$2 = filt__2;
    return filt
  }()
};
enfocus.core.register_filter = function register_filter(ky, func) {
  return cljs.core.swap_BANG_.call(null, enfocus.core.reg_filt, cljs.core.assoc, ky, func)
};
enfocus.core.selected_options = function selected_options(pnod) {
  return pnod.selected
};
enfocus.core.checked_radio_checkbox = function checked_radio_checkbox(pnod) {
  return pnod.checked
};
enfocus.core.register_filter.call(null, "\ufdd0'selected", enfocus.core.selected_options);
enfocus.core.register_filter.call(null, "\ufdd0'checked", enfocus.core.checked_radio_checkbox);
enfocus.core.create_sel_str = function() {
  var create_sel_str = null;
  var create_sel_str__1 = function(css_sel) {
    return create_sel_str.call(null, "", css_sel)
  };
  var create_sel_str__2 = function(id_mask_sym, css_sel) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__11804_SHARP_) {
      if(cljs.core.symbol_QMARK_.call(null, p1__11804_SHARP_)) {
        return enfocus.core.css_syms.call(null, p1__11804_SHARP_)
      }else {
        if(cljs.core.keyword_QMARK_.call(null, p1__11804_SHARP_)) {
          return[cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, p1__11804_SHARP_).replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join("")))].join("")
        }else {
          if(cljs.core.vector_QMARK_.call(null, p1__11804_SHARP_)) {
            return create_sel_str.call(null, p1__11804_SHARP_)
          }else {
            if(cljs.core.string_QMARK_.call(null, p1__11804_SHARP_)) {
              return p1__11804_SHARP_.replace("#", [cljs.core.str("#"), cljs.core.str(id_mask_sym)].join(""))
            }else {
              return null
            }
          }
        }
      }
    }, css_sel))
  };
  create_sel_str = function(id_mask_sym, css_sel) {
    switch(arguments.length) {
      case 1:
        return create_sel_str__1.call(this, id_mask_sym);
      case 2:
        return create_sel_str__2.call(this, id_mask_sym, css_sel)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_sel_str.cljs$lang$arity$1 = create_sel_str__1;
  create_sel_str.cljs$lang$arity$2 = create_sel_str__2;
  return create_sel_str
}();
enfocus.core.css_select = function() {
  var css_select = null;
  var css_select__1 = function(css_sel) {
    return css_select.call(null, "", document, css_sel)
  };
  var css_select__2 = function(dom_node, css_sel) {
    return css_select.call(null, "", dom_node, css_sel)
  };
  var css_select__3 = function(id_mask_sym, dom_node, css_sel) {
    enfocus.core.log_debug.call(null, dom_node);
    enfocus.core.log_debug.call(null, cljs.core.pr_str.call(null, css_sel));
    var sel__11807 = clojure.string.trim.call(null, enfocus.enlive.syntax.convert.call(null, enfocus.core.create_sel_str.call(null, id_mask_sym, css_sel)));
    var ret__11808 = domina.css.sel.call(null, dom_node, sel__11807);
    return ret__11808
  };
  css_select = function(id_mask_sym, dom_node, css_sel) {
    switch(arguments.length) {
      case 1:
        return css_select__1.call(this, id_mask_sym);
      case 2:
        return css_select__2.call(this, id_mask_sym, dom_node);
      case 3:
        return css_select__3.call(this, id_mask_sym, dom_node, css_sel)
    }
    throw"Invalid arity: " + arguments.length;
  };
  css_select.cljs$lang$arity$1 = css_select__1;
  css_select.cljs$lang$arity$2 = css_select__2;
  css_select.cljs$lang$arity$3 = css_select__3;
  return css_select
}();
enfocus.core.nil_t = function nil_t(func) {
  var or__3824__auto____11810 = func;
  if(cljs.core.truth_(or__3824__auto____11810)) {
    return or__3824__auto____11810
  }else {
    return enfocus.core.en_remove_node
  }
};
enfocus.core.i_at = function() {
  var i_at__delegate = function(id_mask, node, trans) {
    if(cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, trans))) {
      return cljs.core.first.call(null, trans).call(null, node)
    }else {
      var G__11830__11831 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, trans));
      if(G__11830__11831) {
        var G__11833__11835 = cljs.core.first.call(null, G__11830__11831);
        var vec__11834__11836 = G__11833__11835;
        var sel__11837 = cljs.core.nth.call(null, vec__11834__11836, 0, null);
        var t__11838 = cljs.core.nth.call(null, vec__11834__11836, 1, null);
        var G__11830__11839 = G__11830__11831;
        var G__11833__11840 = G__11833__11835;
        var G__11830__11841 = G__11830__11839;
        while(true) {
          var vec__11842__11843 = G__11833__11840;
          var sel__11844 = cljs.core.nth.call(null, vec__11842__11843, 0, null);
          var t__11845 = cljs.core.nth.call(null, vec__11842__11843, 1, null);
          var G__11830__11846 = G__11830__11841;
          enfocus.core.nil_t.call(null, t__11845).call(null, enfocus.core.css_select.call(null, id_mask, node, sel__11844));
          var temp__3974__auto____11847 = cljs.core.next.call(null, G__11830__11846);
          if(temp__3974__auto____11847) {
            var G__11830__11848 = temp__3974__auto____11847;
            var G__11849 = cljs.core.first.call(null, G__11830__11848);
            var G__11850 = G__11830__11848;
            G__11833__11840 = G__11849;
            G__11830__11841 = G__11850;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    }
  };
  var i_at = function(id_mask, node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return i_at__delegate.call(this, id_mask, node, trans)
  };
  i_at.cljs$lang$maxFixedArity = 2;
  i_at.cljs$lang$applyTo = function(arglist__11851) {
    var id_mask = cljs.core.first(arglist__11851);
    var node = cljs.core.first(cljs.core.next(arglist__11851));
    var trans = cljs.core.rest(cljs.core.next(arglist__11851));
    return i_at__delegate(id_mask, node, trans)
  };
  i_at.cljs$lang$arity$variadic = i_at__delegate;
  return i_at
}();
enfocus.core.at = function() {
  var at__delegate = function(node, trans) {
    return cljs.core.apply.call(null, enfocus.core.i_at, "", node, trans)
  };
  var at = function(node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return at__delegate.call(this, node, trans)
  };
  at.cljs$lang$maxFixedArity = 1;
  at.cljs$lang$applyTo = function(arglist__11852) {
    var node = cljs.core.first(arglist__11852);
    var trans = cljs.core.rest(arglist__11852);
    return at__delegate(node, trans)
  };
  at.cljs$lang$arity$variadic = at__delegate;
  return at
}();
enfocus.core.from = function() {
  var from__delegate = function(node, trans) {
    if(cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, trans))) {
      return cljs.core.first.call(null, trans).call(null, node)
    }else {
      return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p__11859) {
        var vec__11860__11861 = p__11859;
        var ky__11862 = cljs.core.nth.call(null, vec__11860__11861, 0, null);
        var sel__11863 = cljs.core.nth.call(null, vec__11860__11861, 1, null);
        var ext__11864 = cljs.core.nth.call(null, vec__11860__11861, 2, null);
        return cljs.core.PersistentVector.fromArray([ky__11862, ext__11864.call(null, enfocus.core.css_select.call(null, "", node, sel__11863))], true)
      }, cljs.core.partition.call(null, 3, trans)))
    }
  };
  var from = function(node, var_args) {
    var trans = null;
    if(goog.isDef(var_args)) {
      trans = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return from__delegate.call(this, node, trans)
  };
  from.cljs$lang$maxFixedArity = 1;
  from.cljs$lang$applyTo = function(arglist__11865) {
    var node = cljs.core.first(arglist__11865);
    var trans = cljs.core.rest(arglist__11865);
    return from__delegate(node, trans)
  };
  from.cljs$lang$arity$variadic = from__delegate;
  return from
}();
Text.prototype.domina$DomContent$ = true;
Text.prototype.domina$DomContent$nodes$arity$1 = function(content) {
  return cljs.core.PersistentVector.fromArray([content], true)
};
Text.prototype.domina$DomContent$single_node$arity$1 = function(content) {
  return content
};
goog.provide("sm.init");
goog.require("cljs.core");
goog.require("sm.sql");
goog.require("sm.sql");
goog.require("enfocus.core");
sm.init.button = function button(fun, id) {
  return[cljs.core.str('<button id="'), cljs.core.str(id), cljs.core.str('" class="square"><img src="img/'), cljs.core.str(fun), cljs.core.str('.png"></img></button>')].join("")
};
sm.init.prio_class = function prio_class(prio) {
  var G__18799__18800 = prio;
  if(cljs.core._EQ_.call(null, 6, G__18799__18800)) {
    return"URGENT"
  }else {
    if(cljs.core._EQ_.call(null, 5, G__18799__18800)) {
      return"high"
    }else {
      if(cljs.core._EQ_.call(null, 2, G__18799__18800)) {
        return"done"
      }else {
        if(cljs.core._EQ_.call(null, 1, G__18799__18800)) {
          return"deprec"
        }else {
          if("\ufdd0'else") {
            return"none"
          }else {
            return null
          }
        }
      }
    }
  }
};
sm.init.switch_vis = function switch_vis(id, visible) {
  if(cljs.core.truth_(visible)) {
    return enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([id], true), function(pnod__18237__auto__) {
      return enfocus.core.en_set_style.call(null, "\ufdd0'visibility", "visible").call(null, pnod__18237__auto__, function(pnod__18236__auto__) {
        return enfocus.core.en_fade_in.call(null, 200, null, null).call(null, pnod__18236__auto__)
      })
    })
  }else {
    return enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([id], true), function(pnod__18237__auto__) {
      return enfocus.core.en_fade_out.call(null, 200, null, null).call(null, pnod__18237__auto__, function(pnod__18236__auto__) {
        return enfocus.core.en_set_style.call(null, "\ufdd0'visibility", "hidden").call(null, pnod__18236__auto__)
      })
    })
  }
};
sm.init.insert_name = function insert_name(r, id) {
  return enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([id], true), enfocus.core.en_content.call(null, [cljs.core.str(r.rows.item(0).name)].join("")))
};
sm.init.get_value = function get_value(id) {
  return enfocus.core.from.call(null, enfocus.core.css_select.call(null, cljs.core.PersistentVector.fromArray([id], true)), enfocus.core.extr_multi_node.call(null, function(pnod__18253__auto__) {
    return pnod__18253__auto__.value
  }))
};
sm.init.option_list = function option_list(r, id, sel) {
  return enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([id], true), enfocus.core.en_content.call(null, cljs.core.reduce.call(null, function(p1__18801_SHARP_, p2__18802_SHARP_) {
    return[cljs.core.str(p1__18801_SHARP_), cljs.core.str(p2__18802_SHARP_)].join("")
  }, function() {
    var iter__2462__auto____18819 = function iter__18813(s__18814) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__18814__18817 = s__18814;
        while(true) {
          if(cljs.core.seq.call(null, s__18814__18817)) {
            var i__18818 = cljs.core.first.call(null, s__18814__18817);
            return cljs.core.cons.call(null, [cljs.core.str('<option value="'), cljs.core.str(r.rows.item(i__18818).uid), cljs.core.str('"'), cljs.core.str(cljs.core._EQ_.call(null, sel, r.rows.item(i__18818).uid) ? " SELECTED" : null), cljs.core.str(">"), cljs.core.str(r.rows.item(i__18818).name), cljs.core.str("</option>")].join(""), iter__18813.call(null, cljs.core.rest.call(null, s__18814__18817)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2462__auto____18819.call(null, cljs.core.range.call(null, r.rows.length))
  }())))
};
sm.init.task_edit = function task_edit(r) {
  var task__18842 = r.rows.item(0);
  var puid__18843 = task__18842.projkey;
  var tuid__18844 = task__18842.uid;
  var name__18845 = task__18842.name;
  var desc__18846 = task__18842.desc;
  var priority__18847 = task__18842.priorikey;
  var category__18848 = task__18842.categokey;
  var member__18849 = task__18842.memkey;
  var task_e__18860 = sm.init.e = function e() {
    return enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["#desc"], true), enfocus.core.en_content.call(null, [cljs.core.str("<h2>Editing task #"), cljs.core.str(tuid__18844), cljs.core.str("</h2>"), cljs.core.str('<table><tbody><tr><td>Name</td><td><input id="tname" type="text" value="'), cljs.core.str(name__18845), cljs.core.str('"></input></td></tr>'), cljs.core.str('<tr><td>Description</td><td><textarea id="tdesc" rows="4" cols="20">'), cljs.core.str(desc__18846), 
    cljs.core.str("</textarea></td></tr>"), cljs.core.str('<tr><td><select id="tprio"></select></td>'), cljs.core.str('<td><select id="tcat"></select></td></tr>'), cljs.core.str('<tr><td><select id="tmem"></select></td>'), cljs.core.str('<td><button id="updt">Update</button></td></tr></tbody></table>')].join("")), cljs.core.PersistentVector.fromArray(["#updt"], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function() {
      var newname__18855 = sm.init.get_value.call(null, "#tname");
      var newdesc__18856 = sm.init.get_value.call(null, "#tdesc");
      var newprio__18857 = sm.init.get_value.call(null, "#tprio");
      var newcat__18858 = sm.init.get_value.call(null, "#tcat");
      var newmem__18859 = sm.init.get_value.call(null, "#tmem");
      sm.sql.update_task.call(null, tuid__18844, newname__18855, newdesc__18856, newprio__18857, newcat__18858, newmem__18859);
      return sm.init.refresh_divs.call(null, "\ufdd0'puid", puid__18843, "\ufdd0'tuid", tuid__18844)
    }))
  };
  task_e__18860.call(null);
  sm.sql.select.call(null, "\ufdd0'table", "priorities", "\ufdd0'f", function(p1__18803_SHARP_) {
    return sm.init.option_list.call(null, p1__18803_SHARP_, "#tprio", priority__18847)
  });
  sm.sql.select.call(null, "\ufdd0'table", "categories", "\ufdd0'f", function(p1__18804_SHARP_) {
    return sm.init.option_list.call(null, p1__18804_SHARP_, "#tcat", category__18848)
  });
  return sm.sql.select.call(null, "\ufdd0'table", "members", "\ufdd0'f", function(p1__18805_SHARP_) {
    return sm.init.option_list.call(null, p1__18805_SHARP_, "#tmem", member__18849)
  })
};
sm.init.task_desc = function task_desc(r, puid, tuid) {
  var tdesc__18866 = r.rows.item(0).desc;
  var priority__18867 = r.rows.item(0).priorikey;
  var category__18868 = r.rows.item(0).categokey;
  var member__18869 = r.rows.item(0).memkey;
  enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["#desc"], true), enfocus.core.en_content.call(null, [cljs.core.str("Task description for #"), cljs.core.str(tuid), cljs.core.str(sm.init.button.call(null, "edit", [cljs.core.str("edit_"), cljs.core.str(tuid)].join(""))), cljs.core.str("<hr/>\n"), cljs.core.str("<p>"), cljs.core.str(tdesc__18866), cljs.core.str("</p>"), cljs.core.str('Priority: <b id="desc_prio" class="'), cljs.core.str(sm.init.prio_class.call(null, priority__18867)), 
  cljs.core.str('">'), cljs.core.str("</b><br/>\n"), cljs.core.str('Category: <b id="desc_cat">'), cljs.core.str("</b><br/>\n"), cljs.core.str('Member: <b id="desc_mem">'), cljs.core.str("</b>")].join("")));
  sm.init.switch_vis.call(null, "#desc", true);
  if(cljs.core.truth_(priority__18867)) {
    sm.sql.select.call(null, "\ufdd0'table", "priorities", "\ufdd0'where", [cljs.core.str("WHERE uid="), cljs.core.str(priority__18867)].join(""), "\ufdd0'f", function(p1__18820_SHARP_) {
      return sm.init.insert_name.call(null, p1__18820_SHARP_, "#desc_prio")
    })
  }else {
  }
  if(cljs.core.truth_(category__18868)) {
    sm.sql.select.call(null, "\ufdd0'table", "categories", "\ufdd0'where", [cljs.core.str("WHERE uid="), cljs.core.str(category__18868)].join(""), "\ufdd0'f", function(p1__18821_SHARP_) {
      return sm.init.insert_name.call(null, p1__18821_SHARP_, "#desc_cat")
    })
  }else {
  }
  if(cljs.core.truth_(member__18869)) {
    sm.sql.select.call(null, "\ufdd0'table", "members", "\ufdd0'where", [cljs.core.str("WHERE uid="), cljs.core.str(member__18869)].join(""), "\ufdd0'f", function(p1__18822_SHARP_) {
      return sm.init.insert_name.call(null, p1__18822_SHARP_, "#desc_mem")
    })
  }else {
  }
  return enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([[cljs.core.str("#edit_"), cljs.core.str(tuid)].join("")], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function() {
    return sm.init.task_edit.call(null, r)
  }))
};
sm.init.task_list = function task_list(r, puid) {
  enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["#tasks"], true), enfocus.core.en_content.call(null, [cljs.core.str("Tasks for #"), cljs.core.str(puid), cljs.core.str(sm.init.button.call(null, "add", [cljs.core.str("add_task_puid_"), cljs.core.str(puid)].join(""))), cljs.core.str('<hr/><ul id="tasks_list"></ul>')].join("")));
  sm.init.switch_vis.call(null, "#tasks", true);
  enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([[cljs.core.str("#add_task_puid_"), cljs.core.str(puid)].join("")], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function() {
    var tname__18882 = prompt("Enter the task's name.", "");
    if(cljs.core.not.call(null, tname__18882)) {
      return alert("The name can't be empty")
    }else {
      sm.sql.add_task.call(null, tname__18882, puid);
      return sm.init.refresh_divs.call(null, "\ufdd0'puid", puid)
    }
  }));
  var G__18883__18884 = cljs.core.seq.call(null, cljs.core.range.call(null, r.rows.length));
  if(G__18883__18884) {
    var i__18885 = cljs.core.first.call(null, G__18883__18884);
    var G__18883__18886 = G__18883__18884;
    while(true) {
      var tname__18887 = r.rows.item(i__18885).name;
      var tuid__18888 = r.rows.item(i__18885).uid;
      var date__18889 = r.rows.item(i__18885).birth;
      var prio__18890 = r.rows.item(i__18885).priorikey;
      enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["#tasks_list"], true), enfocus.core.en_append.call(null, [cljs.core.str('<li id="tuid'), cljs.core.str(tuid__18888), cljs.core.str('"><a><span class="'), cljs.core.str(sm.init.prio_class.call(null, prio__18890)), cljs.core.str('">#</span>'), cljs.core.str(tuid__18888), cljs.core.str(": "), cljs.core.str(tname__18887), cljs.core.str(sm.init.button.call(null, "delete", [cljs.core.str("delt_"), cljs.core.str(tuid__18888)].join(""))), 
      cljs.core.str("<br/><small>["), cljs.core.str(date__18889), cljs.core.str("]</small>"), cljs.core.str("<br/></a>")].join("")));
      enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([[cljs.core.str("#tuid"), cljs.core.str(tuid__18888)].join("")], true), enfocus.core.en_listen.call(null, "\ufdd0'hover", function(i__18885, G__18883__18886, tname__18887, tuid__18888, date__18889, prio__18890) {
        return function() {
          return alert("test")
        }
      }(i__18885, G__18883__18886, tname__18887, tuid__18888, date__18889, prio__18890)));
      enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([[cljs.core.str("#delt_"), cljs.core.str(tuid__18888)].join("")], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function(i__18885, G__18883__18886, tname__18887, tuid__18888, date__18889, prio__18890) {
        return function() {
          if(cljs.core.truth_(confirm("This will permanently delete the task."))) {
            sm.sql.delete_task.call(null, tuid__18888);
            return sm.init.refresh_divs.call(null, puid, null)
          }else {
            return null
          }
        }
      }(i__18885, G__18883__18886, tname__18887, tuid__18888, date__18889, prio__18890)));
      enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([[cljs.core.str("#tuid"), cljs.core.str(tuid__18888)].join("")], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function(i__18885, G__18883__18886, tname__18887, tuid__18888, date__18889, prio__18890) {
        return function() {
          return sm.sql.select.call(null, "\ufdd0'table", "tasks", "\ufdd0'where", [cljs.core.str("WHERE uid="), cljs.core.str(tuid__18888)].join(""), "\ufdd0'f", function(i__18885, G__18883__18886, tname__18887, tuid__18888, date__18889, prio__18890) {
            return function(p1__18861_SHARP_) {
              return sm.init.task_desc.call(null, p1__18861_SHARP_, puid, tuid__18888)
            }
          }(i__18885, G__18883__18886, tname__18887, tuid__18888, date__18889, prio__18890))
        }
      }(i__18885, G__18883__18886, tname__18887, tuid__18888, date__18889, prio__18890)));
      var temp__3974__auto____18891 = cljs.core.next.call(null, G__18883__18886);
      if(temp__3974__auto____18891) {
        var G__18883__18892 = temp__3974__auto____18891;
        var G__18893 = cljs.core.first.call(null, G__18883__18892);
        var G__18894 = G__18883__18892;
        i__18885 = G__18893;
        G__18883__18886 = G__18894;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
sm.init.project_list = function project_list(r) {
  enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["#projects_list"], true), enfocus.core.en_content.call(null, ""));
  var G__18905__18906 = cljs.core.seq.call(null, cljs.core.range.call(null, r.rows.length));
  if(G__18905__18906) {
    var i__18907 = cljs.core.first.call(null, G__18905__18906);
    var G__18905__18908 = G__18905__18906;
    while(true) {
      var pname__18909 = r.rows.item(i__18907).name;
      var puid__18910 = r.rows.item(i__18907).uid;
      var date__18911 = r.rows.item(i__18907).birth;
      enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["#projects_list"], true), enfocus.core.en_append.call(null, [cljs.core.str('<li id="pid'), cljs.core.str(puid__18910), cljs.core.str('"><a>'), cljs.core.str(pname__18909), cljs.core.str(sm.init.button.call(null, "delete", [cljs.core.str("delp_"), cljs.core.str(puid__18910)].join(""))), cljs.core.str(sm.init.button.call(null, "edit", [cljs.core.str("edip_"), cljs.core.str(puid__18910)].join(""))), cljs.core.str("<br/><small>["), 
      cljs.core.str(date__18911), cljs.core.str("]</small><br/></a></li>")].join("")));
      enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([[cljs.core.str("#edip_"), cljs.core.str(puid__18910)].join("")], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function(i__18907, G__18905__18908, pname__18909, puid__18910, date__18911) {
        return function() {
          var newname__18912 = prompt("Enter new project name", pname__18909);
          if(cljs.core.not.call(null, newname__18912)) {
            return alert("The name can't be empty")
          }else {
            sm.sql.update_proj.call(null, puid__18910, newname__18912);
            return sm.init.refresh_divs.call(null, puid__18910)
          }
        }
      }(i__18907, G__18905__18908, pname__18909, puid__18910, date__18911)));
      enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([[cljs.core.str("#delp_"), cljs.core.str(puid__18910)].join("")], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function(i__18907, G__18905__18908, pname__18909, puid__18910, date__18911) {
        return function() {
          if(cljs.core.truth_(confirm("This will permanently delete the project and the associated tasks."))) {
            sm.sql.delete_proj.call(null, puid__18910);
            return sm.init.refresh_divs.call(null)
          }else {
            return null
          }
        }
      }(i__18907, G__18905__18908, pname__18909, puid__18910, date__18911)));
      enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray([[cljs.core.str("#pid"), cljs.core.str(puid__18910)].join("")], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function(i__18907, G__18905__18908, pname__18909, puid__18910, date__18911) {
        return function() {
          sm.sql.select.call(null, "\ufdd0'table", "tasks", "\ufdd0'where", [cljs.core.str("WHERE projkey="), cljs.core.str(puid__18910)].join(""), "\ufdd0'order", "ORDER BY priorikey DESC", "\ufdd0'f", function(i__18907, G__18905__18908, pname__18909, puid__18910, date__18911) {
            return function(p1__18870_SHARP_) {
              return sm.init.task_list.call(null, p1__18870_SHARP_, puid__18910)
            }
          }(i__18907, G__18905__18908, pname__18909, puid__18910, date__18911));
          return sm.init.refresh_divs.call(null, "\ufdd0'puid", puid__18910)
        }
      }(i__18907, G__18905__18908, pname__18909, puid__18910, date__18911)));
      var temp__3974__auto____18913 = cljs.core.next.call(null, G__18905__18908);
      if(temp__3974__auto____18913) {
        var G__18905__18914 = temp__3974__auto____18913;
        var G__18915 = cljs.core.first.call(null, G__18905__18914);
        var G__18916 = G__18905__18914;
        i__18907 = G__18915;
        G__18905__18908 = G__18916;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
sm.init.static_init = function static_init() {
  return enfocus.core.at.call(null, document, cljs.core.PersistentVector.fromArray(["#resetDB"], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function() {
    if(cljs.core.truth_(confirm("This will restore the database to its original (ie empty) state.\n\n You can't undo this."))) {
      sm.sql.reset_db.call(null);
      sm.sql.populate_db.call(null);
      return sm.init.refresh_divs.call(null)
    }else {
      return null
    }
  }), cljs.core.PersistentVector.fromArray(["#add_proj"], true), enfocus.core.en_listen.call(null, "\ufdd0'click", function() {
    var pname__18921 = prompt("Enter the project's name.", "");
    if(cljs.core.not.call(null, pname__18921)) {
      return alert("The name can't be empty")
    }else {
      sm.sql.add_proj.call(null, pname__18921);
      return sm.init.refresh_divs.call(null)
    }
  }), cljs.core.PersistentVector.fromArray(["#anim"], true), enfocus.core.en_resize.call(null, 790, "\ufdd0'curheight", 3E3, null, null), cljs.core.PersistentVector.fromArray(["#anim2"], true), enfocus.core.chainable_standard.call(null, function(pnod__18215__auto__) {
    return enfocus.core.setTimeout.call(null, function() {
      return enfocus.core.at.call(null, pnod__18215__auto__, enfocus.core.en_resize.call(null, "\ufdd0'curwidth", 700, 5E3, null, null))
    }, 800)
  }), cljs.core.PersistentVector.fromArray(["#anim3"], true), enfocus.core.chainable_standard.call(null, function(pnod__18215__auto__) {
    return enfocus.core.setTimeout.call(null, function() {
      return enfocus.core.at.call(null, pnod__18215__auto__, enfocus.core.en_resize.call(null, "\ufdd0'curwidth", 700, 5E3, null, null))
    }, 1600)
  }))
};
sm.init.refresh_divs = function() {
  var refresh_divs__delegate = function(p__18922) {
    var map__18928__18929 = p__18922;
    var map__18928__18930 = cljs.core.seq_QMARK_.call(null, map__18928__18929) ? cljs.core.apply.call(null, cljs.core.hash_map, map__18928__18929) : map__18928__18929;
    var tuid__18931 = cljs.core._lookup.call(null, map__18928__18930, "\ufdd0'tuid", null);
    var puid__18932 = cljs.core._lookup.call(null, map__18928__18930, "\ufdd0'puid", null);
    sm.sql.select.call(null, "\ufdd0'table", "projects", "\ufdd0'f", function(p1__18917_SHARP_) {
      return sm.init.project_list.call(null, p1__18917_SHARP_)
    });
    if(cljs.core.truth_(puid__18932)) {
      sm.sql.select.call(null, "\ufdd0'table", "tasks", "\ufdd0'where", [cljs.core.str("WHERE projkey="), cljs.core.str(puid__18932)].join(""), "\ufdd0'order", "ORDER BY priorikey DESC", "\ufdd0'f", function(p1__18918_SHARP_) {
        return sm.init.task_list.call(null, p1__18918_SHARP_, puid__18932)
      })
    }else {
      sm.init.switch_vis.call(null, "#tasks", false)
    }
    if(cljs.core.truth_(tuid__18931)) {
      return sm.sql.select.call(null, "\ufdd0'table", "tasks", "\ufdd0'where", [cljs.core.str("WHERE uid="), cljs.core.str(tuid__18931)].join(""), "\ufdd0'f", function(p1__18919_SHARP_) {
        return sm.init.task_desc.call(null, p1__18919_SHARP_, puid__18932, tuid__18931)
      })
    }else {
      return sm.init.switch_vis.call(null, "#desc", false)
    }
  };
  var refresh_divs = function(var_args) {
    var p__18922 = null;
    if(goog.isDef(var_args)) {
      p__18922 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return refresh_divs__delegate.call(this, p__18922)
  };
  refresh_divs.cljs$lang$maxFixedArity = 0;
  refresh_divs.cljs$lang$applyTo = function(arglist__18933) {
    var p__18922 = cljs.core.seq(arglist__18933);
    return refresh_divs__delegate(p__18922)
  };
  refresh_divs.cljs$lang$arity$variadic = refresh_divs__delegate;
  return refresh_divs
}();
sm.init.start = function start() {
  sm.sql.update_db.call(null);
  sm.init.refresh_divs.call(null, "\ufdd0'puid", 1, "\ufdd0'tuid", 1);
  return sm.init.static_init.call(null)
};
window.onload = sm.init.start;
